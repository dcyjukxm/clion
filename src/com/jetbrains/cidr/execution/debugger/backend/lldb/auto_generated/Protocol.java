// 
// Decompiled by Procyon v0.5.30
// 

package com.jetbrains.cidr.execution.debugger.backend.lldb.auto_generated;

import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import java.util.Collection;
import com.google.protobuf.RepeatedFieldBuilder;
import java.util.Collections;
import java.util.ArrayList;
import java.util.List;
import com.google.protobuf.SingleFieldBuilder;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.AbstractMessage;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.Message;
import java.io.InputStream;
import java.io.ObjectStreamException;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ByteString;
import java.io.IOException;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.MessageLite;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.Parser;
import com.google.protobuf.UnknownFieldSet;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.Descriptors;

public final class Protocol
{
    private static Descriptors.Descriptor internal_static_CommonResponse_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_CommonResponse_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_CreateTarget_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_CreateTarget_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_CreateTarget_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_CreateTarget_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Launch_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Launch_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Launch_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Launch_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AttachByName_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AttachByName_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AttachByName_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AttachByName_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Attach_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Attach_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Detach_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Detach_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Detach_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Detach_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Kill_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Kill_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Kill_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Kill_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Attach_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Attach_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Continue_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Continue_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Continue_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Continue_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Suspend_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Suspend_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Suspend_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Suspend_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetThreads_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetThreads_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetThreads_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetThreads_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetFrames_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetFrames_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetFrames_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetFrames_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AddBreakpoint_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AddBreakpoint_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_RemoveBreakpoint_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_RemoveBreakpoint_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_RemoveBreakpoint_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_RemoveBreakpoint_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AddBreakpoint_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AddBreakpoint_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepInto_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepInto_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepInto_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepInto_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepOver_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepOver_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepOver_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepOver_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepOut_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepOut_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_StepOut_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_StepOut_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_EvaluateExpression_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_EvaluateExpression_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_EvaluateExpression_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_EvaluateExpression_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AddWatchpoint_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AddWatchpoint_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_RemoveWatchpoint_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_RemoveWatchpoint_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_RemoveWatchpoint_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_RemoveWatchpoint_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_AddWatchpoint_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_AddWatchpoint_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueChildren_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueChildren_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetArraySlice_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetArraySlice_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetArraySlice_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetArraySlice_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueData_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueData_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueData_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueData_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueDescription_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueDescription_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueDescription_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueDescription_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetChildrenCount_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetChildrenCount_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetChildrenCount_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetChildrenCount_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueChildren_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueChildren_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetVars_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetVars_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetVars_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetVars_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_DispatchInput_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_DispatchInput_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_DispatchInput_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_DispatchInput_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleConsoleCommand_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleConsoleCommand_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleConsoleCommand_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleConsoleCommand_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleCompletion_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleCompletion_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleCompletion_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleCompletion_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ValuesFilteringPolicy_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ValuesFilteringPolicy_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ValuesFilteringPolicy_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ValuesFilteringPolicy_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ConnectPlatform_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ConnectPlatform_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ConnectPlatform_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ConnectPlatform_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_Exit_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_Exit_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueAddress_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueAddress_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_GetValueAddress_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_GetValueAddress_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleSignal_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleSignal_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_HandleSignal_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_HandleSignal_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ExecuteShellCommand_Req_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ExecuteShellCommand_Req_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_ExecuteShellCommand_Res_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_ExecuteShellCommand_Res_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_CompositeRequest_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_CompositeRequest_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_CompositeResponse_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_CompositeResponse_fieldAccessorTable;
    private static Descriptors.FileDescriptor descriptor;
    
    public static void registerAllExtensions(final ExtensionRegistry extensionRegistry) {
    }
    
    public static Descriptors.FileDescriptor getDescriptor() {
        return Protocol.descriptor;
    }
    
    static {
        Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(new String[] { "\n\u000eprotocol.proto\u001a\u000bmodel.proto\u001a\u0010broadcasts.proto\"9\n\u000eCommonResponse\u0012\u0010\n\bis_valid\u0018\u0001 \u0002(\b\u0012\u0015\n\rerror_message\u0018\u0002 \u0001(\t\"x\n\u0010CreateTarget_Req\u0012\u0010\n\bexe_path\u0018\u0002 \u0001(\t\u0012\f\n\u0004arch\u0018\u0003 \u0001(\t\u0012\u0017\n\u000fremote_exe_path\u0018\u0004 \u0001(\t\u0012\u0010\n\bplatform\u0018\u0005 \u0001(\t\u0012\u0019\n\u0011platform_sdk_root\u0018\u0006 \u0001(\t\"<\n\u0010CreateTarget_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"X\n\nLaunch_Req\u0012\"\n\fcommand_line\u0018\u0002 \u0002(\u000b2\f.CommandLine\u0012&\n\u001efd_passing_service_unix_socket\u0018\u0003 \u0001(\t\"C\n\nLaunch_Res\u0012(\n\u000fco", "mmon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u000b\n\u0003pid\u0018\u0002 \u0001(\u0003\"1\n\u0010AttachByName_Req\u0012\f\n\u0004name\u0018\u0002 \u0002(\t\u0012\u000f\n\u0007to_wait\u0018\u0003 \u0002(\b\"<\n\u0010AttachByName_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\u0019\n\nAttach_Req\u0012\u000b\n\u0003pid\u0018\u0002 \u0002(\u0005\"\f\n\nDetach_Req\"6\n\nDetach_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\n\n\bKill_Req\"4\n\bKill_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"6\n\nAttach_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\u000e\n\fContinue_Req\"8\n", "\fContinue_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\r\n\u000bSuspend_Req\"7\n\u000bSuspend_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\u0010\n\u000eGetThreads_Req\"W\n\u000eGetThreads_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u001b\n\u0006thread\u0018\u0002 \u0003(\u000b2\u000b.LLDBThread\"e\n\rGetFrames_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002(\r\u0012\u0012\n\nfrom_index\u0018\u0003 \u0002(\u0005\u0012\r\n\u0005count\u0018\u0004 \u0002(\u0005\u0012\u001e\n\u0016until_valid_line_entry\u0018\u0005 \u0002(\b\"f\n\rGetFrames_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0019\n\u0005", "frame\u0018\u0002 \u0003(\u000b2\n.LLDBFrame\u0012\u0010\n\bhas_more\u0018\u0003 \u0002(\b\"\u0092\u0001\n\u0011AddBreakpoint_Req\u0012\f\n\u0004file\u0018\u0002 \u0001(\t\u0012\f\n\u0004line\u0018\u0003 \u0001(\u0005\u0012\u0011\n\tcondition\u0018\u0004 \u0001(\t\u0012\u0016\n\u000esymbol_pattern\u0018\u0005 \u0001(\t\u0012\u0013\n\u000bmodule_name\u0018\u0006 \u0001(\t\u0012\u0011\n\tthread_id\u0018\u0007 \u0001(\r\u0012\u000e\n\u0006regexp\u0018\b \u0001(\b\"\"\n\u0014RemoveBreakpoint_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\"@\n\u0014RemoveBreakpoint_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"I\n\u0011AddBreakpoint_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\"!\n\fStepInto_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002", "(\r\"8\n\fStepInto_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"!\n\fStepOver_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002(\r\"8\n\fStepOver_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\" \n\u000bStepOut_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002(\r\"7\n\u000bStepOut_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\u0082\u0001\n\u0016EvaluateExpression_Req\u0012\u0012\n\nexpression\u0018\u0002 \u0002(\t\u0012\u0011\n\tthread_id\u0018\u0003 \u0002(\r\u0012\u0013\n\u000bframe_index\u0018\u0004 \u0002(\u0005\u0012,\n\blanguage\u0018\u0005 \u0001(\u000e2\t.Language:\u000fLanguageUnknown\"^\n\u0016EvaluateExpression_", "Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u001a\n\u0006result\u0018\u0002 \u0001(\u000b2\n.LLDBValue\"r\n\u0011AddWatchpoint_Req\u0012\u0010\n\bvalue_id\u0018\u0002 \u0002(\u0005\u0012\u001b\n\u0013to_resolve_location\u0018\u0003 \u0002(\u0005\u0012\f\n\u0004read\u0018\u0004 \u0002(\u0005\u0012\r\n\u0005write\u0018\u0005 \u0002(\u0005\u0012\u0011\n\tcondition\u0018\u0006 \u0001(\t\"\"\n\u0014RemoveWatchpoint_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\"@\n\u0014RemoveWatchpoint_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"T\n\u0011AddWatchpoint_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0015\n\rwatchpoint_id\u0018\u0002 \u0002(\u0005\"U\n\u0014GetValueChildren_Re", "q\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\u0012\u0012\n\nexpression\u0018\u0003 \u0001(\t\u0012\u000e\n\u0006offset\u0018\u0004 \u0002(\u0005\u0012\r\n\u0005count\u0018\u0005 \u0002(\u0005\"D\n\u0011GetArraySlice_Req\u0012\u0010\n\bvalue_id\u0018\u0002 \u0002(\u0005\u0012\u000e\n\u0006offset\u0018\u0003 \u0002(\u0005\u0012\r\n\u0005count\u0018\u0004 \u0002(\u0005\"X\n\u0011GetArraySlice_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0019\n\u0005value\u0018\u0002 \u0003(\u000b2\n.LLDBValue\">\n\u0010GetValueData_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\u0012\u001e\n\u0016max_description_length\u0018\u0003 \u0002(\u0005\"[\n\u0010GetValueData_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u001d\n\u0005value\u0018\u0002 \u0001(\u000b2\u000e.LLDBValueData\"9\n\u0017GetValueDescrip", "tion_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\u0012\u0012\n\nmax_length\u0018\u0003 \u0002(\u0005\"X\n\u0017GetValueDescription_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0013\n\u000bdescription\u0018\u0002 \u0001(\t\"6\n\u0014GetChildrenCount_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\u0012\u0012\n\nexpression\u0018\u0003 \u0001(\t\"O\n\u0014GetChildrenCount_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\r\n\u0005count\u0018\u0002 \u0002(\u0005\"[\n\u0014GetValueChildren_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0019\n\u0005value\u0018\u0002 \u0003(\u000b2\n.LLDBValue\"W\n\u000bGetVars_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002(\u0005\u0012\u0013\n\u000bfr", "ame_index\u0018\u0003 \u0002(\u0005\u0012\u000f\n\u0007statics\u0018\u0004 \u0002(\b\u0012\u000f\n\u0007globals\u0018\u0005 \u0002(\b\"R\n\u000bGetVars_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0019\n\u0005value\u0018\u0002 \u0003(\u000b2\n.LLDBValue\"C\n\u0011DispatchInput_Req\u0012\r\n\u0005input\u0018\u0002 \u0002(\t\u0012\u001f\n\u0006target\u0018\u0003 \u0002(\u000e2\u000f.DispatchTarget\"=\n\u0011DispatchInput_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"S\n\u0018HandleConsoleCommand_Req\u0012\u0011\n\tthread_id\u0018\u0002 \u0002(\r\u0012\u0013\n\u000bframe_index\u0018\u0003 \u0002(\u0005\u0012\u000f\n\u0007command\u0018\u0004 \u0002(\t\"o\n\u0018HandleConsoleCommand_Res\u0012(\n\u000fcommon_response\u0018\u0001 ", "\u0002(\u000b2\u000f.CommonResponse\u0012\u000f\n\u0007success\u0018\u0002 \u0002(\u0005\u0012\u000b\n\u0003err\u0018\u0003 \u0001(\t\u0012\u000b\n\u0003out\u0018\u0004 \u0001(\t\"4\n\u0014HandleCompletion_Req\u0012\u000f\n\u0007command\u0018\u0002 \u0002(\t\u0012\u000b\n\u0003pos\u0018\u0003 \u0002(\u0005\"T\n\u0014HandleCompletion_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u0012\n\ncompletion\u0018\u0002 \u0003(\t\"3\n\u0019ValuesFilteringPolicy_Req\u0012\u0016\n\u000efilter_enabled\u0018\u0002 \u0002(\u0005\"E\n\u0019ValuesFilteringPolicy_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"4\n\u0013ConnectPlatform_Req\u0012\u0010\n\bplatform\u0018\u0002 \u0002(\t\u0012\u000b\n\u0003url\u0018\u0003 \u0002(\t\"?\n\u0013ConnectPlatform", "_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"\n\n\bExit_Req\"!\n\u0013GetValueAddress_Req\u0012\n\n\u0002id\u0018\u0002 \u0002(\u0005\"P\n\u0013GetValueAddress_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u000f\n\u0007address\u0018\u0002 \u0002(\u0004\"N\n\u0010HandleSignal_Req\u0012\u000e\n\u0006signal\u0018\u0002 \u0002(\t\u0012\f\n\u0004stop\u0018\u0003 \u0002(\b\u0012\f\n\u0004pass\u0018\u0004 \u0002(\b\u0012\u000e\n\u0006notify\u0018\u0005 \u0002(\b\"<\n\u0010HandleSignal_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\"U\n\u0017ExecuteShellCommand_Req\u0012\u000f\n\u0007command\u0018\u0002 \u0002(\t\u0012\u0013\n\u000bworking_dir\u0018\u0003 \u0001(\t\u0012\u0014\n\ftimeout_secs\u0018\u0004", " \u0001(\u0005\"s\n\u0017ExecuteShellCommand_Res\u0012(\n\u000fcommon_response\u0018\u0001 \u0002(\u000b2\u000f.CommonResponse\u0012\u000e\n\u0006output\u0018\u0002 \u0001(\t\u0012\u000e\n\u0006status\u0018\u0003 \u0001(\u0005\u0012\u000e\n\u0006signal\u0018\u0004 \u0001(\u0005\"\u0081\u000b\n\u0010CompositeRequest\u0012(\n\rcreate_target\u0018\u0001 \u0001(\u000b2\u0011.CreateTarget_Req\u0012\u001b\n\u0006launch\u0018\u0002 \u0001(\u000b2\u000b.Launch_Req\u0012\u0017\n\u0004exit\u0018\u0003 \u0001(\u000b2\t.Exit_Req\u0012\u001f\n\bcontinue\u0018\u0004 \u0001(\u000b2\r.Continue_Req\u0012\u001d\n\u0007suspend\u0018\u0005 \u0001(\u000b2\f.Suspend_Req\u0012$\n\u000bget_threads\u0018\u0006 \u0001(\u000b2\u000f.GetThreads_Req\u0012\"\n\nget_frames\u0018\u0007 \u0001(\u000b2\u000e.GetFrames_Req\u0012*\n\u000eadd_breakpoint\u0018\b \u0001(\u000b", "2\u0012.AddBreakpoint_Req\u00120\n\u0011remove_breakpoint\u0018\t \u0001(\u000b2\u0015.RemoveBreakpoint_Req\u0012 \n\tstep_into\u0018\n \u0001(\u000b2\r.StepInto_Req\u0012 \n\tstep_over\u0018\u000b \u0001(\u000b2\r.StepOver_Req\u0012\u001e\n\bstep_out\u0018\f \u0001(\u000b2\f.StepOut_Req\u00124\n\u0013evaluate_expression\u0018\r \u0001(\u000b2\u0017.EvaluateExpression_Req\u00121\n\u0012get_value_children\u0018\u000e \u0001(\u000b2\u0015.GetValueChildren_Req\u0012\u001e\n\bget_vars\u0018\u000f \u0001(\u000b2\f.GetVars_Req\u00129\n\u0016handle_console_command\u0018\u0010 \u0001(\u000b2\u0019.HandleConsoleCommand_Req\u00120\n\u0011handle_completion\u0018\u0011 \u0001(\u000b2\u0015.Hand", "leCompletion_Req\u0012\u001b\n\u0006attach\u0018\u0012 \u0001(\u000b2\u000b.Attach_Req\u0012)\n\u000eattach_by_name\u0018\u0013 \u0001(\u000b2\u0011.AttachByName_Req\u0012*\n\u000edispatch_input\u0018\u0014 \u0001(\u000b2\u0012.DispatchInput_Req\u0012*\n\u000eadd_watchpoint\u0018\u0015 \u0001(\u000b2\u0012.AddWatchpoint_Req\u00120\n\u0011remove_watchpoint\u0018\u0016 \u0001(\u000b2\u0015.RemoveWatchpoint_Req\u0012\u001b\n\u0006detach\u0018\u0017 \u0001(\u000b2\u000b.Detach_Req\u0012\u0017\n\u0004kill\u0018\u0018 \u0001(\u000b2\t.Kill_Req\u00121\n\u0012get_children_count\u0018\u0019 \u0001(\u000b2\u0015.GetChildrenCount_Req\u0012+\n\u000fget_array_slice\u0018\u001a \u0001(\u000b2\u0012.GetArraySlice_Req\u0012)\n\u000eget_value_data\u0018\u001b \u0001(\u000b", "2\u0011.GetValueData_Req\u00127\n\u0015get_value_description\u0018\u001c \u0001(\u000b2\u0018.GetValueDescription_Req\u0012;\n\u0017values_filtering_policy\u0018\u001d \u0001(\u000b2\u001a.ValuesFilteringPolicy_Req\u0012.\n\u0010connect_platform\u0018\u001e \u0001(\u000b2\u0014.ConnectPlatform_Req\u0012/\n\u0011get_value_address\u0018\u001f \u0001(\u000b2\u0014.GetValueAddress_Req\u0012(\n\rhandle_signal\u0018  \u0001(\u000b2\u0011.HandleSignal_Req\u00127\n\u0015execute_shell_command\u0018! \u0001(\u000b2\u0018.ExecuteShellCommand_Req\"\u009b\u000b\n\u0011CompositeResponse\u0012(\n\rcreate_target\u0018\u0001 \u0001(\u000b2\u0011.CreateTarget_Res\u0012\u001b\n", "\u0006launch\u0018\u0002 \u0001(\u000b2\u000b.Launch_Res\u0012\u001f\n\bcontinue\u0018\u0003 \u0001(\u000b2\r.Continue_Res\u00120\n\u0013composite_broadcast\u0018\u0004 \u0001(\u000b2\u0013.CompositeBroadcast\u0012\u001d\n\u0007suspend\u0018\u0005 \u0001(\u000b2\f.Suspend_Res\u0012$\n\u000bget_threads\u0018\u0006 \u0001(\u000b2\u000f.GetThreads_Res\u0012\"\n\nget_frames\u0018\u0007 \u0001(\u000b2\u000e.GetFrames_Res\u0012*\n\u000eadd_breakpoint\u0018\b \u0001(\u000b2\u0012.AddBreakpoint_Res\u00120\n\u0011remove_breakpoint\u0018\t \u0001(\u000b2\u0015.RemoveBreakpoint_Res\u0012 \n\tstep_into\u0018\n \u0001(\u000b2\r.StepInto_Res\u0012 \n\tstep_over\u0018\u000b \u0001(\u000b2\r.StepOver_Res\u0012\u001e\n\bstep_out\u0018\f \u0001(\u000b2\f.Ste", "pOut_Res\u00124\n\u0013evaluate_expression\u0018\r \u0001(\u000b2\u0017.EvaluateExpression_Res\u00121\n\u0012get_value_children\u0018\u000e \u0001(\u000b2\u0015.GetValueChildren_Res\u0012\u001e\n\bget_vars\u0018\u000f \u0001(\u000b2\f.GetVars_Res\u00129\n\u0016handle_console_command\u0018\u0010 \u0001(\u000b2\u0019.HandleConsoleCommand_Res\u00120\n\u0011handle_completion\u0018\u0011 \u0001(\u000b2\u0015.HandleCompletion_Res\u0012\u001b\n\u0006attach\u0018\u0012 \u0001(\u000b2\u000b.Attach_Res\u0012)\n\u000eattach_by_name\u0018\u0013 \u0001(\u000b2\u0011.AttachByName_Res\u0012*\n\u000edispatch_input\u0018\u0014 \u0001(\u000b2\u0012.DispatchInput_Res\u0012*\n\u000eadd_watchpoint\u0018\u0015 \u0001(\u000b2\u0012.Add", "Watchpoint_Res\u00120\n\u0011remove_watchpoint\u0018\u0016 \u0001(\u000b2\u0015.RemoveWatchpoint_Res\u0012\u001b\n\u0006detach\u0018\u0017 \u0001(\u000b2\u000b.Detach_Res\u0012\u0017\n\u0004kill\u0018\u0018 \u0001(\u000b2\t.Kill_Res\u00121\n\u0012get_children_count\u0018\u0019 \u0001(\u000b2\u0015.GetChildrenCount_Res\u0012+\n\u000fget_array_slice\u0018\u001a \u0001(\u000b2\u0012.GetArraySlice_Res\u0012)\n\u000eget_value_data\u0018\u001b \u0001(\u000b2\u0011.GetValueData_Res\u00127\n\u0015get_value_description\u0018\u001c \u0001(\u000b2\u0018.GetValueDescription_Res\u0012;\n\u0017values_filtering_policy\u0018\u001d \u0001(\u000b2\u001a.ValuesFilteringPolicy_Res\u0012.\n\u0010connect_platform\u0018\u001e \u0001(", "\u000b2\u0014.ConnectPlatform_Res\u0012/\n\u0011get_value_address\u0018\u001f \u0001(\u000b2\u0014.GetValueAddress_Res\u0012(\n\rhandle_signal\u0018  \u0001(\u000b2\u0011.HandleSignal_Res\u00127\n\u0015execute_shell_command\u0018! \u0001(\u000b2\u0018.ExecuteShellCommand_ResBC\nAcom.jetbrains.cidr.execution.debugger.backend.lldb.auto_generated" }, new Descriptors.FileDescriptor[] { Model.getDescriptor(), Broadcasts.getDescriptor() }, (Descriptors.FileDescriptor.InternalDescriptorAssigner)new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public ExtensionRegistry assignDescriptors(final Descriptors.FileDescriptor fileDescriptor) {
                Protocol.descriptor = fileDescriptor;
                Protocol.internal_static_CommonResponse_descriptor = Protocol.getDescriptor().getMessageTypes().get(0);
                Protocol.internal_static_CommonResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_CommonResponse_descriptor, new String[] { "IsValid", "ErrorMessage" });
                Protocol.internal_static_CreateTarget_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(1);
                Protocol.internal_static_CreateTarget_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_CreateTarget_Req_descriptor, new String[] { "ExePath", "Arch", "RemoteExePath", "Platform", "PlatformSdkRoot" });
                Protocol.internal_static_CreateTarget_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(2);
                Protocol.internal_static_CreateTarget_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_CreateTarget_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Launch_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(3);
                Protocol.internal_static_Launch_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Launch_Req_descriptor, new String[] { "CommandLine", "FdPassingServiceUnixSocket" });
                Protocol.internal_static_Launch_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(4);
                Protocol.internal_static_Launch_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Launch_Res_descriptor, new String[] { "CommonResponse", "Pid" });
                Protocol.internal_static_AttachByName_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(5);
                Protocol.internal_static_AttachByName_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AttachByName_Req_descriptor, new String[] { "Name", "ToWait" });
                Protocol.internal_static_AttachByName_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(6);
                Protocol.internal_static_AttachByName_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AttachByName_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Attach_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(7);
                Protocol.internal_static_Attach_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Attach_Req_descriptor, new String[] { "Pid" });
                Protocol.internal_static_Detach_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(8);
                Protocol.internal_static_Detach_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Detach_Req_descriptor, new String[0]);
                Protocol.internal_static_Detach_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(9);
                Protocol.internal_static_Detach_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Detach_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Kill_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(10);
                Protocol.internal_static_Kill_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Kill_Req_descriptor, new String[0]);
                Protocol.internal_static_Kill_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(11);
                Protocol.internal_static_Kill_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Kill_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Attach_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(12);
                Protocol.internal_static_Attach_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Attach_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Continue_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(13);
                Protocol.internal_static_Continue_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Continue_Req_descriptor, new String[0]);
                Protocol.internal_static_Continue_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(14);
                Protocol.internal_static_Continue_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Continue_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Suspend_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(15);
                Protocol.internal_static_Suspend_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Suspend_Req_descriptor, new String[0]);
                Protocol.internal_static_Suspend_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(16);
                Protocol.internal_static_Suspend_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Suspend_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_GetThreads_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(17);
                Protocol.internal_static_GetThreads_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetThreads_Req_descriptor, new String[0]);
                Protocol.internal_static_GetThreads_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(18);
                Protocol.internal_static_GetThreads_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetThreads_Res_descriptor, new String[] { "CommonResponse", "Thread" });
                Protocol.internal_static_GetFrames_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(19);
                Protocol.internal_static_GetFrames_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetFrames_Req_descriptor, new String[] { "ThreadId", "FromIndex", "Count", "UntilValidLineEntry" });
                Protocol.internal_static_GetFrames_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(20);
                Protocol.internal_static_GetFrames_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetFrames_Res_descriptor, new String[] { "CommonResponse", "Frame", "HasMore" });
                Protocol.internal_static_AddBreakpoint_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(21);
                Protocol.internal_static_AddBreakpoint_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AddBreakpoint_Req_descriptor, new String[] { "File", "Line", "Condition", "SymbolPattern", "ModuleName", "ThreadId", "Regexp" });
                Protocol.internal_static_RemoveBreakpoint_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(22);
                Protocol.internal_static_RemoveBreakpoint_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_RemoveBreakpoint_Req_descriptor, new String[] { "Id" });
                Protocol.internal_static_RemoveBreakpoint_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(23);
                Protocol.internal_static_RemoveBreakpoint_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_RemoveBreakpoint_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_AddBreakpoint_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(24);
                Protocol.internal_static_AddBreakpoint_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AddBreakpoint_Res_descriptor, new String[] { "CommonResponse", "Id" });
                Protocol.internal_static_StepInto_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(25);
                Protocol.internal_static_StepInto_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepInto_Req_descriptor, new String[] { "ThreadId" });
                Protocol.internal_static_StepInto_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(26);
                Protocol.internal_static_StepInto_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepInto_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_StepOver_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(27);
                Protocol.internal_static_StepOver_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepOver_Req_descriptor, new String[] { "ThreadId" });
                Protocol.internal_static_StepOver_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(28);
                Protocol.internal_static_StepOver_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepOver_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_StepOut_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(29);
                Protocol.internal_static_StepOut_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepOut_Req_descriptor, new String[] { "ThreadId" });
                Protocol.internal_static_StepOut_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(30);
                Protocol.internal_static_StepOut_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_StepOut_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_EvaluateExpression_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(31);
                Protocol.internal_static_EvaluateExpression_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_EvaluateExpression_Req_descriptor, new String[] { "Expression", "ThreadId", "FrameIndex", "Language" });
                Protocol.internal_static_EvaluateExpression_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(32);
                Protocol.internal_static_EvaluateExpression_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_EvaluateExpression_Res_descriptor, new String[] { "CommonResponse", "Result" });
                Protocol.internal_static_AddWatchpoint_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(33);
                Protocol.internal_static_AddWatchpoint_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AddWatchpoint_Req_descriptor, new String[] { "ValueId", "ToResolveLocation", "Read", "Write", "Condition" });
                Protocol.internal_static_RemoveWatchpoint_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(34);
                Protocol.internal_static_RemoveWatchpoint_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_RemoveWatchpoint_Req_descriptor, new String[] { "Id" });
                Protocol.internal_static_RemoveWatchpoint_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(35);
                Protocol.internal_static_RemoveWatchpoint_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_RemoveWatchpoint_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_AddWatchpoint_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(36);
                Protocol.internal_static_AddWatchpoint_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_AddWatchpoint_Res_descriptor, new String[] { "CommonResponse", "WatchpointId" });
                Protocol.internal_static_GetValueChildren_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(37);
                Protocol.internal_static_GetValueChildren_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueChildren_Req_descriptor, new String[] { "Id", "Expression", "Offset", "Count" });
                Protocol.internal_static_GetArraySlice_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(38);
                Protocol.internal_static_GetArraySlice_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetArraySlice_Req_descriptor, new String[] { "ValueId", "Offset", "Count" });
                Protocol.internal_static_GetArraySlice_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(39);
                Protocol.internal_static_GetArraySlice_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetArraySlice_Res_descriptor, new String[] { "CommonResponse", "Value" });
                Protocol.internal_static_GetValueData_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(40);
                Protocol.internal_static_GetValueData_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueData_Req_descriptor, new String[] { "Id", "MaxDescriptionLength" });
                Protocol.internal_static_GetValueData_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(41);
                Protocol.internal_static_GetValueData_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueData_Res_descriptor, new String[] { "CommonResponse", "Value" });
                Protocol.internal_static_GetValueDescription_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(42);
                Protocol.internal_static_GetValueDescription_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueDescription_Req_descriptor, new String[] { "Id", "MaxLength" });
                Protocol.internal_static_GetValueDescription_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(43);
                Protocol.internal_static_GetValueDescription_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueDescription_Res_descriptor, new String[] { "CommonResponse", "Description" });
                Protocol.internal_static_GetChildrenCount_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(44);
                Protocol.internal_static_GetChildrenCount_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetChildrenCount_Req_descriptor, new String[] { "Id", "Expression" });
                Protocol.internal_static_GetChildrenCount_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(45);
                Protocol.internal_static_GetChildrenCount_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetChildrenCount_Res_descriptor, new String[] { "CommonResponse", "Count" });
                Protocol.internal_static_GetValueChildren_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(46);
                Protocol.internal_static_GetValueChildren_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueChildren_Res_descriptor, new String[] { "CommonResponse", "Value" });
                Protocol.internal_static_GetVars_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(47);
                Protocol.internal_static_GetVars_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetVars_Req_descriptor, new String[] { "ThreadId", "FrameIndex", "Statics", "Globals" });
                Protocol.internal_static_GetVars_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(48);
                Protocol.internal_static_GetVars_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetVars_Res_descriptor, new String[] { "CommonResponse", "Value" });
                Protocol.internal_static_DispatchInput_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(49);
                Protocol.internal_static_DispatchInput_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_DispatchInput_Req_descriptor, new String[] { "Input", "Target" });
                Protocol.internal_static_DispatchInput_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(50);
                Protocol.internal_static_DispatchInput_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_DispatchInput_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_HandleConsoleCommand_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(51);
                Protocol.internal_static_HandleConsoleCommand_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleConsoleCommand_Req_descriptor, new String[] { "ThreadId", "FrameIndex", "Command" });
                Protocol.internal_static_HandleConsoleCommand_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(52);
                Protocol.internal_static_HandleConsoleCommand_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleConsoleCommand_Res_descriptor, new String[] { "CommonResponse", "Success", "Err", "Out" });
                Protocol.internal_static_HandleCompletion_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(53);
                Protocol.internal_static_HandleCompletion_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleCompletion_Req_descriptor, new String[] { "Command", "Pos" });
                Protocol.internal_static_HandleCompletion_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(54);
                Protocol.internal_static_HandleCompletion_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleCompletion_Res_descriptor, new String[] { "CommonResponse", "Completion" });
                Protocol.internal_static_ValuesFilteringPolicy_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(55);
                Protocol.internal_static_ValuesFilteringPolicy_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ValuesFilteringPolicy_Req_descriptor, new String[] { "FilterEnabled" });
                Protocol.internal_static_ValuesFilteringPolicy_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(56);
                Protocol.internal_static_ValuesFilteringPolicy_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ValuesFilteringPolicy_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_ConnectPlatform_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(57);
                Protocol.internal_static_ConnectPlatform_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ConnectPlatform_Req_descriptor, new String[] { "Platform", "Url" });
                Protocol.internal_static_ConnectPlatform_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(58);
                Protocol.internal_static_ConnectPlatform_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ConnectPlatform_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_Exit_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(59);
                Protocol.internal_static_Exit_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_Exit_Req_descriptor, new String[0]);
                Protocol.internal_static_GetValueAddress_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(60);
                Protocol.internal_static_GetValueAddress_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueAddress_Req_descriptor, new String[] { "Id" });
                Protocol.internal_static_GetValueAddress_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(61);
                Protocol.internal_static_GetValueAddress_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_GetValueAddress_Res_descriptor, new String[] { "CommonResponse", "Address" });
                Protocol.internal_static_HandleSignal_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(62);
                Protocol.internal_static_HandleSignal_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleSignal_Req_descriptor, new String[] { "Signal", "Stop", "Pass", "Notify" });
                Protocol.internal_static_HandleSignal_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(63);
                Protocol.internal_static_HandleSignal_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_HandleSignal_Res_descriptor, new String[] { "CommonResponse" });
                Protocol.internal_static_ExecuteShellCommand_Req_descriptor = Protocol.getDescriptor().getMessageTypes().get(64);
                Protocol.internal_static_ExecuteShellCommand_Req_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ExecuteShellCommand_Req_descriptor, new String[] { "Command", "WorkingDir", "TimeoutSecs" });
                Protocol.internal_static_ExecuteShellCommand_Res_descriptor = Protocol.getDescriptor().getMessageTypes().get(65);
                Protocol.internal_static_ExecuteShellCommand_Res_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_ExecuteShellCommand_Res_descriptor, new String[] { "CommonResponse", "Output", "Status", "Signal" });
                Protocol.internal_static_CompositeRequest_descriptor = Protocol.getDescriptor().getMessageTypes().get(66);
                Protocol.internal_static_CompositeRequest_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_CompositeRequest_descriptor, new String[] { "CreateTarget", "Launch", "Exit", "Continue", "Suspend", "GetThreads", "GetFrames", "AddBreakpoint", "RemoveBreakpoint", "StepInto", "StepOver", "StepOut", "EvaluateExpression", "GetValueChildren", "GetVars", "HandleConsoleCommand", "HandleCompletion", "Attach", "AttachByName", "DispatchInput", "AddWatchpoint", "RemoveWatchpoint", "Detach", "Kill", "GetChildrenCount", "GetArraySlice", "GetValueData", "GetValueDescription", "ValuesFilteringPolicy", "ConnectPlatform", "GetValueAddress", "HandleSignal", "ExecuteShellCommand" });
                Protocol.internal_static_CompositeResponse_descriptor = Protocol.getDescriptor().getMessageTypes().get(67);
                Protocol.internal_static_CompositeResponse_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(Protocol.internal_static_CompositeResponse_descriptor, new String[] { "CreateTarget", "Launch", "Continue", "CompositeBroadcast", "Suspend", "GetThreads", "GetFrames", "AddBreakpoint", "RemoveBreakpoint", "StepInto", "StepOver", "StepOut", "EvaluateExpression", "GetValueChildren", "GetVars", "HandleConsoleCommand", "HandleCompletion", "Attach", "AttachByName", "DispatchInput", "AddWatchpoint", "RemoveWatchpoint", "Detach", "Kill", "GetChildrenCount", "GetArraySlice", "GetValueData", "GetValueDescription", "ValuesFilteringPolicy", "ConnectPlatform", "GetValueAddress", "HandleSignal", "ExecuteShellCommand" });
                return null;
            }
        });
    }
    
    public static final class CommonResponse extends GeneratedMessage implements CommonResponseOrBuilder
    {
        private static final CommonResponse defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<CommonResponse> PARSER;
        private int bitField0_;
        public static final int IS_VALID_FIELD_NUMBER = 1;
        private boolean isValid_;
        public static final int ERROR_MESSAGE_FIELD_NUMBER = 2;
        private Object errorMessage_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private CommonResponse(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private CommonResponse(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static CommonResponse getDefaultInstance() {
            return CommonResponse.defaultInstance;
        }
        
        public CommonResponse getDefaultInstanceForType() {
            return CommonResponse.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private CommonResponse(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.isValid_ = codedInputStream.readBool();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.errorMessage_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_CommonResponse_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_CommonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CommonResponse.class, (Class)Builder.class);
        }
        
        public Parser<CommonResponse> getParserForType() {
            return CommonResponse.PARSER;
        }
        
        public boolean hasIsValid() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public boolean getIsValid() {
            return this.isValid_;
        }
        
        public boolean hasErrorMessage() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getErrorMessage() {
            final Object errorMessage_ = this.errorMessage_;
            if (errorMessage_ instanceof String) {
                return (String)errorMessage_;
            }
            final ByteString byteString = (ByteString)errorMessage_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.errorMessage_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getErrorMessageBytes() {
            final Object errorMessage_ = this.errorMessage_;
            if (errorMessage_ instanceof String) {
                return (ByteString)(this.errorMessage_ = ByteString.copyFromUtf8((String)errorMessage_));
            }
            return (ByteString)errorMessage_;
        }
        
        private void a() {
            this.isValid_ = false;
            this.errorMessage_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasIsValid()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBool(1, this.isValid_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(2, this.getErrorMessageBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBoolSize(1, this.isValid_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(2, this.getErrorMessageBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static CommonResponse parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(byteString);
        }
        
        public static CommonResponse parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static CommonResponse parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(array);
        }
        
        public static CommonResponse parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static CommonResponse parseFrom(final InputStream inputStream) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(inputStream);
        }
        
        public static CommonResponse parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static CommonResponse parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static CommonResponse parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static CommonResponse parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(codedInputStream);
        }
        
        public static CommonResponse parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CommonResponse)CommonResponse.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final CommonResponse commonResponse) {
            return newBuilder().mergeFrom(commonResponse);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            CommonResponse.PARSER = (Parser<CommonResponse>)new AbstractParser<CommonResponse>() {
                public CommonResponse parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new CommonResponse(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new CommonResponse(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements CommonResponseOrBuilder
        {
            private int bitField0_;
            private boolean isValid_;
            private Object errorMessage_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_CommonResponse_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_CommonResponse_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CommonResponse.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.errorMessage_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.errorMessage_ = "";
                this.a();
            }
            
            private void a() {
                if (CommonResponse.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.isValid_ = false;
                this.bitField0_ &= 0xFFFFFFFE;
                this.errorMessage_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_CommonResponse_descriptor;
            }
            
            public CommonResponse getDefaultInstanceForType() {
                return CommonResponse.getDefaultInstance();
            }
            
            public CommonResponse build() {
                final CommonResponse buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public CommonResponse buildPartial() {
                final CommonResponse commonResponse = new CommonResponse((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                commonResponse.isValid_ = this.isValid_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                commonResponse.errorMessage_ = this.errorMessage_;
                commonResponse.bitField0_ = n;
                this.onBuilt();
                return commonResponse;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof CommonResponse) {
                        return this.mergeFrom((CommonResponse)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final CommonResponse commonResponse) {
                try {
                    if (commonResponse == CommonResponse.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (commonResponse.hasIsValid()) {
                        this.setIsValid(commonResponse.getIsValid());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (commonResponse.hasErrorMessage()) {
                        this.bitField0_ |= 0x2;
                        this.errorMessage_ = commonResponse.errorMessage_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(commonResponse.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasIsValid()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                CommonResponse commonResponse = null;
                try {
                    commonResponse = (CommonResponse)CommonResponse.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    commonResponse = (CommonResponse)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (commonResponse != null) {
                            this.mergeFrom(commonResponse);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasIsValid() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getIsValid() {
                return this.isValid_;
            }
            
            public Builder setIsValid(final boolean isValid_) {
                this.bitField0_ |= 0x1;
                this.isValid_ = isValid_;
                this.onChanged();
                return this;
            }
            
            public Builder clearIsValid() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.isValid_ = false;
                this.onChanged();
                return this;
            }
            
            public boolean hasErrorMessage() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getErrorMessage() {
                final Object errorMessage_ = this.errorMessage_;
                if (!(errorMessage_ instanceof String)) {
                    return (String)(this.errorMessage_ = ((ByteString)errorMessage_).toStringUtf8());
                }
                return (String)errorMessage_;
            }
            
            public ByteString getErrorMessageBytes() {
                final Object errorMessage_ = this.errorMessage_;
                if (errorMessage_ instanceof String) {
                    return (ByteString)(this.errorMessage_ = ByteString.copyFromUtf8((String)errorMessage_));
                }
                return (ByteString)errorMessage_;
            }
            
            public Builder setErrorMessage(final String errorMessage_) {
                try {
                    if (errorMessage_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.errorMessage_ = errorMessage_;
                this.onChanged();
                return this;
            }
            
            public Builder clearErrorMessage() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.errorMessage_ = CommonResponse.getDefaultInstance().getErrorMessage();
                this.onChanged();
                return this;
            }
            
            public Builder setErrorMessageBytes(final ByteString errorMessage_) {
                try {
                    if (errorMessage_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.errorMessage_ = errorMessage_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class CreateTarget_Req extends GeneratedMessage implements CreateTarget_ReqOrBuilder
    {
        private static final CreateTarget_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<CreateTarget_Req> PARSER;
        private int bitField0_;
        public static final int EXE_PATH_FIELD_NUMBER = 2;
        private Object exePath_;
        public static final int ARCH_FIELD_NUMBER = 3;
        private Object arch_;
        public static final int REMOTE_EXE_PATH_FIELD_NUMBER = 4;
        private Object remoteExePath_;
        public static final int PLATFORM_FIELD_NUMBER = 5;
        private Object platform_;
        public static final int PLATFORM_SDK_ROOT_FIELD_NUMBER = 6;
        private Object platformSdkRoot_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private CreateTarget_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private CreateTarget_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static CreateTarget_Req getDefaultInstance() {
            return CreateTarget_Req.defaultInstance;
        }
        
        public CreateTarget_Req getDefaultInstanceForType() {
            return CreateTarget_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private CreateTarget_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.exePath_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.arch_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x4;
                            this.remoteExePath_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 42: {
                            this.bitField0_ |= 0x8;
                            this.platform_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 50: {
                            this.bitField0_ |= 0x10;
                            this.platformSdkRoot_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_CreateTarget_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_CreateTarget_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CreateTarget_Req.class, (Class)Builder.class);
        }
        
        public Parser<CreateTarget_Req> getParserForType() {
            return CreateTarget_Req.PARSER;
        }
        
        public boolean hasExePath() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getExePath() {
            final Object exePath_ = this.exePath_;
            if (exePath_ instanceof String) {
                return (String)exePath_;
            }
            final ByteString byteString = (ByteString)exePath_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.exePath_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getExePathBytes() {
            final Object exePath_ = this.exePath_;
            if (exePath_ instanceof String) {
                return (ByteString)(this.exePath_ = ByteString.copyFromUtf8((String)exePath_));
            }
            return (ByteString)exePath_;
        }
        
        public boolean hasArch() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getArch() {
            final Object arch_ = this.arch_;
            if (arch_ instanceof String) {
                return (String)arch_;
            }
            final ByteString byteString = (ByteString)arch_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.arch_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getArchBytes() {
            final Object arch_ = this.arch_;
            if (arch_ instanceof String) {
                return (ByteString)(this.arch_ = ByteString.copyFromUtf8((String)arch_));
            }
            return (ByteString)arch_;
        }
        
        public boolean hasRemoteExePath() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public String getRemoteExePath() {
            final Object remoteExePath_ = this.remoteExePath_;
            if (remoteExePath_ instanceof String) {
                return (String)remoteExePath_;
            }
            final ByteString byteString = (ByteString)remoteExePath_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.remoteExePath_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getRemoteExePathBytes() {
            final Object remoteExePath_ = this.remoteExePath_;
            if (remoteExePath_ instanceof String) {
                return (ByteString)(this.remoteExePath_ = ByteString.copyFromUtf8((String)remoteExePath_));
            }
            return (ByteString)remoteExePath_;
        }
        
        public boolean hasPlatform() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public String getPlatform() {
            final Object platform_ = this.platform_;
            if (platform_ instanceof String) {
                return (String)platform_;
            }
            final ByteString byteString = (ByteString)platform_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.platform_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getPlatformBytes() {
            final Object platform_ = this.platform_;
            if (platform_ instanceof String) {
                return (ByteString)(this.platform_ = ByteString.copyFromUtf8((String)platform_));
            }
            return (ByteString)platform_;
        }
        
        public boolean hasPlatformSdkRoot() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        public String getPlatformSdkRoot() {
            final Object platformSdkRoot_ = this.platformSdkRoot_;
            if (platformSdkRoot_ instanceof String) {
                return (String)platformSdkRoot_;
            }
            final ByteString byteString = (ByteString)platformSdkRoot_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.platformSdkRoot_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getPlatformSdkRootBytes() {
            final Object platformSdkRoot_ = this.platformSdkRoot_;
            if (platformSdkRoot_ instanceof String) {
                return (ByteString)(this.platformSdkRoot_ = ByteString.copyFromUtf8((String)platformSdkRoot_));
            }
            return (ByteString)platformSdkRoot_;
        }
        
        private void a() {
            this.exePath_ = "";
            this.arch_ = "";
            this.remoteExePath_ = "";
            this.platform_ = "";
            this.platformSdkRoot_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getExePathBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getArchBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBytes(4, this.getRemoteExePathBytes());
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBytes(5, this.getPlatformBytes());
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            try {
                if ((this.bitField0_ & 0x10) == 0x10) {
                    codedOutputStream.writeBytes(6, this.getPlatformSdkRootBytes());
                }
            }
            catch (IOException ex5) {
                throw a(ex5);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getExePathBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getArchBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBytesSize(4, this.getRemoteExePathBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBytesSize(5, this.getPlatformBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                n += CodedOutputStream.computeBytesSize(6, this.getPlatformSdkRootBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static CreateTarget_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(byteString);
        }
        
        public static CreateTarget_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static CreateTarget_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(array);
        }
        
        public static CreateTarget_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static CreateTarget_Req parseFrom(final InputStream inputStream) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(inputStream);
        }
        
        public static CreateTarget_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static CreateTarget_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static CreateTarget_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static CreateTarget_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static CreateTarget_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Req)CreateTarget_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final CreateTarget_Req createTarget_Req) {
            return newBuilder().mergeFrom(createTarget_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            CreateTarget_Req.PARSER = (Parser<CreateTarget_Req>)new AbstractParser<CreateTarget_Req>() {
                public CreateTarget_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new CreateTarget_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new CreateTarget_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements CreateTarget_ReqOrBuilder
        {
            private int bitField0_;
            private Object exePath_;
            private Object arch_;
            private Object remoteExePath_;
            private Object platform_;
            private Object platformSdkRoot_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_CreateTarget_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_CreateTarget_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CreateTarget_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.exePath_ = "";
                this.arch_ = "";
                this.remoteExePath_ = "";
                this.platform_ = "";
                this.platformSdkRoot_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.exePath_ = "";
                this.arch_ = "";
                this.remoteExePath_ = "";
                this.platform_ = "";
                this.platformSdkRoot_ = "";
                this.a();
            }
            
            private void a() {
                if (CreateTarget_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.exePath_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.arch_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.remoteExePath_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.platform_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.platformSdkRoot_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_CreateTarget_Req_descriptor;
            }
            
            public CreateTarget_Req getDefaultInstanceForType() {
                return CreateTarget_Req.getDefaultInstance();
            }
            
            public CreateTarget_Req build() {
                final CreateTarget_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public CreateTarget_Req buildPartial() {
                final CreateTarget_Req createTarget_Req = new CreateTarget_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                createTarget_Req.exePath_ = this.exePath_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                createTarget_Req.arch_ = this.arch_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                createTarget_Req.remoteExePath_ = this.remoteExePath_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                createTarget_Req.platform_ = this.platform_;
                if ((bitField0_ & 0x10) == 0x10) {
                    n |= 0x10;
                }
                createTarget_Req.platformSdkRoot_ = this.platformSdkRoot_;
                createTarget_Req.bitField0_ = n;
                this.onBuilt();
                return createTarget_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof CreateTarget_Req) {
                        return this.mergeFrom((CreateTarget_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final CreateTarget_Req createTarget_Req) {
                try {
                    if (createTarget_Req == CreateTarget_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (createTarget_Req.hasExePath()) {
                        this.bitField0_ |= 0x1;
                        this.exePath_ = createTarget_Req.exePath_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (createTarget_Req.hasArch()) {
                        this.bitField0_ |= 0x2;
                        this.arch_ = createTarget_Req.arch_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (createTarget_Req.hasRemoteExePath()) {
                        this.bitField0_ |= 0x4;
                        this.remoteExePath_ = createTarget_Req.remoteExePath_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (createTarget_Req.hasPlatform()) {
                        this.bitField0_ |= 0x8;
                        this.platform_ = createTarget_Req.platform_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                try {
                    if (createTarget_Req.hasPlatformSdkRoot()) {
                        this.bitField0_ |= 0x10;
                        this.platformSdkRoot_ = createTarget_Req.platformSdkRoot_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex6) {
                    throw b(ex6);
                }
                this.mergeUnknownFields(createTarget_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                CreateTarget_Req createTarget_Req = null;
                try {
                    createTarget_Req = (CreateTarget_Req)CreateTarget_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    createTarget_Req = (CreateTarget_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (createTarget_Req != null) {
                            this.mergeFrom(createTarget_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasExePath() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getExePath() {
                final Object exePath_ = this.exePath_;
                if (!(exePath_ instanceof String)) {
                    return (String)(this.exePath_ = ((ByteString)exePath_).toStringUtf8());
                }
                return (String)exePath_;
            }
            
            public ByteString getExePathBytes() {
                final Object exePath_ = this.exePath_;
                if (exePath_ instanceof String) {
                    return (ByteString)(this.exePath_ = ByteString.copyFromUtf8((String)exePath_));
                }
                return (ByteString)exePath_;
            }
            
            public Builder setExePath(final String exePath_) {
                try {
                    if (exePath_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.exePath_ = exePath_;
                this.onChanged();
                return this;
            }
            
            public Builder clearExePath() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.exePath_ = CreateTarget_Req.getDefaultInstance().getExePath();
                this.onChanged();
                return this;
            }
            
            public Builder setExePathBytes(final ByteString exePath_) {
                try {
                    if (exePath_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.exePath_ = exePath_;
                this.onChanged();
                return this;
            }
            
            public boolean hasArch() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getArch() {
                final Object arch_ = this.arch_;
                if (!(arch_ instanceof String)) {
                    return (String)(this.arch_ = ((ByteString)arch_).toStringUtf8());
                }
                return (String)arch_;
            }
            
            public ByteString getArchBytes() {
                final Object arch_ = this.arch_;
                if (arch_ instanceof String) {
                    return (ByteString)(this.arch_ = ByteString.copyFromUtf8((String)arch_));
                }
                return (ByteString)arch_;
            }
            
            public Builder setArch(final String arch_) {
                try {
                    if (arch_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.arch_ = arch_;
                this.onChanged();
                return this;
            }
            
            public Builder clearArch() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.arch_ = CreateTarget_Req.getDefaultInstance().getArch();
                this.onChanged();
                return this;
            }
            
            public Builder setArchBytes(final ByteString arch_) {
                try {
                    if (arch_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.arch_ = arch_;
                this.onChanged();
                return this;
            }
            
            public boolean hasRemoteExePath() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getRemoteExePath() {
                final Object remoteExePath_ = this.remoteExePath_;
                if (!(remoteExePath_ instanceof String)) {
                    return (String)(this.remoteExePath_ = ((ByteString)remoteExePath_).toStringUtf8());
                }
                return (String)remoteExePath_;
            }
            
            public ByteString getRemoteExePathBytes() {
                final Object remoteExePath_ = this.remoteExePath_;
                if (remoteExePath_ instanceof String) {
                    return (ByteString)(this.remoteExePath_ = ByteString.copyFromUtf8((String)remoteExePath_));
                }
                return (ByteString)remoteExePath_;
            }
            
            public Builder setRemoteExePath(final String remoteExePath_) {
                try {
                    if (remoteExePath_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.remoteExePath_ = remoteExePath_;
                this.onChanged();
                return this;
            }
            
            public Builder clearRemoteExePath() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.remoteExePath_ = CreateTarget_Req.getDefaultInstance().getRemoteExePath();
                this.onChanged();
                return this;
            }
            
            public Builder setRemoteExePathBytes(final ByteString remoteExePath_) {
                try {
                    if (remoteExePath_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.remoteExePath_ = remoteExePath_;
                this.onChanged();
                return this;
            }
            
            public boolean hasPlatform() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getPlatform() {
                final Object platform_ = this.platform_;
                if (!(platform_ instanceof String)) {
                    return (String)(this.platform_ = ((ByteString)platform_).toStringUtf8());
                }
                return (String)platform_;
            }
            
            public ByteString getPlatformBytes() {
                final Object platform_ = this.platform_;
                if (platform_ instanceof String) {
                    return (ByteString)(this.platform_ = ByteString.copyFromUtf8((String)platform_));
                }
                return (ByteString)platform_;
            }
            
            public Builder setPlatform(final String platform_) {
                try {
                    if (platform_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.platform_ = platform_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPlatform() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.platform_ = CreateTarget_Req.getDefaultInstance().getPlatform();
                this.onChanged();
                return this;
            }
            
            public Builder setPlatformBytes(final ByteString platform_) {
                try {
                    if (platform_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.platform_ = platform_;
                this.onChanged();
                return this;
            }
            
            public boolean hasPlatformSdkRoot() {
                try {
                    if ((this.bitField0_ & 0x10) == 0x10) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getPlatformSdkRoot() {
                final Object platformSdkRoot_ = this.platformSdkRoot_;
                if (!(platformSdkRoot_ instanceof String)) {
                    return (String)(this.platformSdkRoot_ = ((ByteString)platformSdkRoot_).toStringUtf8());
                }
                return (String)platformSdkRoot_;
            }
            
            public ByteString getPlatformSdkRootBytes() {
                final Object platformSdkRoot_ = this.platformSdkRoot_;
                if (platformSdkRoot_ instanceof String) {
                    return (ByteString)(this.platformSdkRoot_ = ByteString.copyFromUtf8((String)platformSdkRoot_));
                }
                return (ByteString)platformSdkRoot_;
            }
            
            public Builder setPlatformSdkRoot(final String platformSdkRoot_) {
                try {
                    if (platformSdkRoot_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.platformSdkRoot_ = platformSdkRoot_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPlatformSdkRoot() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.platformSdkRoot_ = CreateTarget_Req.getDefaultInstance().getPlatformSdkRoot();
                this.onChanged();
                return this;
            }
            
            public Builder setPlatformSdkRootBytes(final ByteString platformSdkRoot_) {
                try {
                    if (platformSdkRoot_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.platformSdkRoot_ = platformSdkRoot_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class CreateTarget_Res extends GeneratedMessage implements CreateTarget_ResOrBuilder
    {
        private static final CreateTarget_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<CreateTarget_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private CreateTarget_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private CreateTarget_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static CreateTarget_Res getDefaultInstance() {
            return CreateTarget_Res.defaultInstance;
        }
        
        public CreateTarget_Res getDefaultInstanceForType() {
            return CreateTarget_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private CreateTarget_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_CreateTarget_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_CreateTarget_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CreateTarget_Res.class, (Class)Builder.class);
        }
        
        public Parser<CreateTarget_Res> getParserForType() {
            return CreateTarget_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static CreateTarget_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(byteString);
        }
        
        public static CreateTarget_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static CreateTarget_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(array);
        }
        
        public static CreateTarget_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static CreateTarget_Res parseFrom(final InputStream inputStream) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(inputStream);
        }
        
        public static CreateTarget_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static CreateTarget_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static CreateTarget_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static CreateTarget_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static CreateTarget_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CreateTarget_Res)CreateTarget_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final CreateTarget_Res createTarget_Res) {
            return newBuilder().mergeFrom(createTarget_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            CreateTarget_Res.PARSER = (Parser<CreateTarget_Res>)new AbstractParser<CreateTarget_Res>() {
                public CreateTarget_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new CreateTarget_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new CreateTarget_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements CreateTarget_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_CreateTarget_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_CreateTarget_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CreateTarget_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (CreateTarget_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_CreateTarget_Res_descriptor;
            }
            
            public CreateTarget_Res getDefaultInstanceForType() {
                return CreateTarget_Res.getDefaultInstance();
            }
            
            public CreateTarget_Res build() {
                final CreateTarget_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public CreateTarget_Res buildPartial() {
                final CreateTarget_Res createTarget_Res = new CreateTarget_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            createTarget_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    createTarget_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                createTarget_Res.bitField0_ = n;
                this.onBuilt();
                return createTarget_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof CreateTarget_Res) {
                        return this.mergeFrom((CreateTarget_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final CreateTarget_Res createTarget_Res) {
                try {
                    if (createTarget_Res == CreateTarget_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (createTarget_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(createTarget_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(createTarget_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                CreateTarget_Res createTarget_Res = null;
                try {
                    createTarget_Res = (CreateTarget_Res)CreateTarget_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    createTarget_Res = (CreateTarget_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (createTarget_Res != null) {
                            this.mergeFrom(createTarget_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Launch_Req extends GeneratedMessage implements Launch_ReqOrBuilder
    {
        private static final Launch_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Launch_Req> PARSER;
        private int bitField0_;
        public static final int COMMAND_LINE_FIELD_NUMBER = 2;
        private Model.CommandLine commandLine_;
        public static final int FD_PASSING_SERVICE_UNIX_SOCKET_FIELD_NUMBER = 3;
        private Object fdPassingServiceUnixSocket_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Launch_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Launch_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Launch_Req getDefaultInstance() {
            return Launch_Req.defaultInstance;
        }
        
        public Launch_Req getDefaultInstanceForType() {
            return Launch_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Launch_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            Model.CommandLine.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commandLine_.toBuilder();
                            }
                            try {
                                this.commandLine_ = (Model.CommandLine)codedInputStream.readMessage((Parser)Model.CommandLine.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commandLine_);
                                    this.commandLine_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.fdPassingServiceUnixSocket_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Launch_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Launch_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Launch_Req.class, (Class)Builder.class);
        }
        
        public Parser<Launch_Req> getParserForType() {
            return Launch_Req.PARSER;
        }
        
        public boolean hasCommandLine() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public Model.CommandLine getCommandLine() {
            return this.commandLine_;
        }
        
        public Model.CommandLineOrBuilder getCommandLineOrBuilder() {
            return this.commandLine_;
        }
        
        public boolean hasFdPassingServiceUnixSocket() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getFdPassingServiceUnixSocket() {
            final Object fdPassingServiceUnixSocket_ = this.fdPassingServiceUnixSocket_;
            if (fdPassingServiceUnixSocket_ instanceof String) {
                return (String)fdPassingServiceUnixSocket_;
            }
            final ByteString byteString = (ByteString)fdPassingServiceUnixSocket_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.fdPassingServiceUnixSocket_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getFdPassingServiceUnixSocketBytes() {
            final Object fdPassingServiceUnixSocket_ = this.fdPassingServiceUnixSocket_;
            if (fdPassingServiceUnixSocket_ instanceof String) {
                return (ByteString)(this.fdPassingServiceUnixSocket_ = ByteString.copyFromUtf8((String)fdPassingServiceUnixSocket_));
            }
            return (ByteString)fdPassingServiceUnixSocket_;
        }
        
        private void a() {
            this.commandLine_ = Model.CommandLine.getDefaultInstance();
            this.fdPassingServiceUnixSocket_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommandLine()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommandLine().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.commandLine_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getFdPassingServiceUnixSocketBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.commandLine_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getFdPassingServiceUnixSocketBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Launch_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(byteString);
        }
        
        public static Launch_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Launch_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(array);
        }
        
        public static Launch_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Launch_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Launch_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Launch_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Launch_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Launch_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Launch_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Req)Launch_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Launch_Req launch_Req) {
            return newBuilder().mergeFrom(launch_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Launch_Req.PARSER = (Parser<Launch_Req>)new AbstractParser<Launch_Req>() {
                public Launch_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Launch_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Launch_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Launch_ReqOrBuilder
        {
            private int bitField0_;
            private Model.CommandLine commandLine_;
            private SingleFieldBuilder<Model.CommandLine, Model.CommandLine.Builder, Model.CommandLineOrBuilder> commandLineBuilder_;
            private Object fdPassingServiceUnixSocket_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Launch_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Launch_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Launch_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commandLine_ = Model.CommandLine.getDefaultInstance();
                this.fdPassingServiceUnixSocket_ = "";
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commandLine_ = Model.CommandLine.getDefaultInstance();
                this.fdPassingServiceUnixSocket_ = "";
                this.c();
            }
            
            private void c() {
                try {
                    if (Launch_Req.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commandLineBuilder_ == null) {
                            this.commandLine_ = Model.CommandLine.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commandLineBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.fdPassingServiceUnixSocket_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Launch_Req_descriptor;
            }
            
            public Launch_Req getDefaultInstanceForType() {
                return Launch_Req.getDefaultInstance();
            }
            
            public Launch_Req build() {
                final Launch_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Launch_Req buildPartial() {
                final Launch_Req launch_Req = new Launch_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commandLineBuilder_ == null) {
                            launch_Req.commandLine_ = this.commandLine_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    launch_Req.commandLine_ = (Model.CommandLine)this.commandLineBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                launch_Req.fdPassingServiceUnixSocket_ = this.fdPassingServiceUnixSocket_;
                launch_Req.bitField0_ = n;
                this.onBuilt();
                return launch_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Launch_Req) {
                        return this.mergeFrom((Launch_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Launch_Req launch_Req) {
                try {
                    if (launch_Req == Launch_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (launch_Req.hasCommandLine()) {
                        this.mergeCommandLine(launch_Req.getCommandLine());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (launch_Req.hasFdPassingServiceUnixSocket()) {
                        this.bitField0_ |= 0x2;
                        this.fdPassingServiceUnixSocket_ = launch_Req.fdPassingServiceUnixSocket_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(launch_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommandLine()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommandLine().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Launch_Req launch_Req = null;
                try {
                    launch_Req = (Launch_Req)Launch_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    launch_Req = (Launch_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (launch_Req != null) {
                            this.mergeFrom(launch_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommandLine() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Model.CommandLine getCommandLine() {
                try {
                    if (this.commandLineBuilder_ == null) {
                        return this.commandLine_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.CommandLine)this.commandLineBuilder_.getMessage();
            }
            
            public Builder setCommandLine(final Model.CommandLine commandLine) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commandLineBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Model.CommandLine commandLine2 = commandLine;
                                if (commandLine2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Model.CommandLine commandLine2 = commandLine;
                                if (commandLine2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commandLine_ = commandLine;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commandLineBuilder_.setMessage((GeneratedMessage)commandLine);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommandLine(final Model.CommandLine.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commandLineBuilder_ == null) {
                            this.commandLine_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commandLineBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommandLine(final Model.CommandLine p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLineBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLine_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLine_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLine_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLine_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$CommandLine;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.commandLineBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommandLine() {
                Label_0033: {
                    try {
                        if (this.commandLineBuilder_ == null) {
                            this.commandLine_ = Model.CommandLine.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commandLineBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Model.CommandLine.Builder getCommandLineBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (Model.CommandLine.Builder)this.a().getBuilder();
            }
            
            public Model.CommandLineOrBuilder getCommandLineOrBuilder() {
                try {
                    if (this.commandLineBuilder_ != null) {
                        return (Model.CommandLineOrBuilder)this.commandLineBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commandLine_;
            }
            
            private SingleFieldBuilder<Model.CommandLine, Model.CommandLine.Builder, Model.CommandLineOrBuilder> a() {
                try {
                    if (this.commandLineBuilder_ == null) {
                        this.commandLineBuilder_ = (SingleFieldBuilder<Model.CommandLine, Model.CommandLine.Builder, Model.CommandLineOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commandLine_, this.getParentForChildren(), this.isClean());
                        this.commandLine_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commandLineBuilder_;
            }
            
            public boolean hasFdPassingServiceUnixSocket() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getFdPassingServiceUnixSocket() {
                final Object fdPassingServiceUnixSocket_ = this.fdPassingServiceUnixSocket_;
                if (!(fdPassingServiceUnixSocket_ instanceof String)) {
                    return (String)(this.fdPassingServiceUnixSocket_ = ((ByteString)fdPassingServiceUnixSocket_).toStringUtf8());
                }
                return (String)fdPassingServiceUnixSocket_;
            }
            
            public ByteString getFdPassingServiceUnixSocketBytes() {
                final Object fdPassingServiceUnixSocket_ = this.fdPassingServiceUnixSocket_;
                if (fdPassingServiceUnixSocket_ instanceof String) {
                    return (ByteString)(this.fdPassingServiceUnixSocket_ = ByteString.copyFromUtf8((String)fdPassingServiceUnixSocket_));
                }
                return (ByteString)fdPassingServiceUnixSocket_;
            }
            
            public Builder setFdPassingServiceUnixSocket(final String fdPassingServiceUnixSocket_) {
                try {
                    if (fdPassingServiceUnixSocket_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.fdPassingServiceUnixSocket_ = fdPassingServiceUnixSocket_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFdPassingServiceUnixSocket() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.fdPassingServiceUnixSocket_ = Launch_Req.getDefaultInstance().getFdPassingServiceUnixSocket();
                this.onChanged();
                return this;
            }
            
            public Builder setFdPassingServiceUnixSocketBytes(final ByteString fdPassingServiceUnixSocket_) {
                try {
                    if (fdPassingServiceUnixSocket_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.fdPassingServiceUnixSocket_ = fdPassingServiceUnixSocket_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Launch_Res extends GeneratedMessage implements Launch_ResOrBuilder
    {
        private static final Launch_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Launch_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int PID_FIELD_NUMBER = 2;
        private long pid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Launch_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Launch_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Launch_Res getDefaultInstance() {
            return Launch_Res.defaultInstance;
        }
        
        public Launch_Res getDefaultInstanceForType() {
            return Launch_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Launch_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.pid_ = codedInputStream.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Launch_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Launch_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Launch_Res.class, (Class)Builder.class);
        }
        
        public Parser<Launch_Res> getParserForType() {
            return Launch_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasPid() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public long getPid() {
            return this.pid_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.pid_ = 0L;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt64(2, this.pid_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt64Size(2, this.pid_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Launch_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(byteString);
        }
        
        public static Launch_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Launch_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(array);
        }
        
        public static Launch_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Launch_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Launch_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Launch_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Launch_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Launch_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Launch_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Launch_Res)Launch_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Launch_Res launch_Res) {
            return newBuilder().mergeFrom(launch_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Launch_Res.PARSER = (Parser<Launch_Res>)new AbstractParser<Launch_Res>() {
                public Launch_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Launch_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Launch_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Launch_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private long pid_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Launch_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Launch_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Launch_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (Launch_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.pid_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Launch_Res_descriptor;
            }
            
            public Launch_Res getDefaultInstanceForType() {
                return Launch_Res.getDefaultInstance();
            }
            
            public Launch_Res build() {
                final Launch_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Launch_Res buildPartial() {
                final Launch_Res launch_Res = new Launch_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            launch_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    launch_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                launch_Res.pid_ = this.pid_;
                launch_Res.bitField0_ = n;
                this.onBuilt();
                return launch_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Launch_Res) {
                        return this.mergeFrom((Launch_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Launch_Res launch_Res) {
                try {
                    if (launch_Res == Launch_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (launch_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(launch_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (launch_Res.hasPid()) {
                        this.setPid(launch_Res.getPid());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(launch_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Launch_Res launch_Res = null;
                try {
                    launch_Res = (Launch_Res)Launch_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    launch_Res = (Launch_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (launch_Res != null) {
                            this.mergeFrom(launch_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasPid() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public long getPid() {
                return this.pid_;
            }
            
            public Builder setPid(final long pid_) {
                this.bitField0_ |= 0x2;
                this.pid_ = pid_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPid() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.pid_ = 0L;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AttachByName_Req extends GeneratedMessage implements AttachByName_ReqOrBuilder
    {
        private static final AttachByName_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AttachByName_Req> PARSER;
        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 2;
        private Object name_;
        public static final int TO_WAIT_FIELD_NUMBER = 3;
        private boolean toWait_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AttachByName_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AttachByName_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AttachByName_Req getDefaultInstance() {
            return AttachByName_Req.defaultInstance;
        }
        
        public AttachByName_Req getDefaultInstanceForType() {
            return AttachByName_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AttachByName_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.name_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.toWait_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AttachByName_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AttachByName_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AttachByName_Req.class, (Class)Builder.class);
        }
        
        public Parser<AttachByName_Req> getParserForType() {
            return AttachByName_Req.PARSER;
        }
        
        public boolean hasName() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getName() {
            final Object name_ = this.name_;
            if (name_ instanceof String) {
                return (String)name_;
            }
            final ByteString byteString = (ByteString)name_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.name_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getNameBytes() {
            final Object name_ = this.name_;
            if (name_ instanceof String) {
                return (ByteString)(this.name_ = ByteString.copyFromUtf8((String)name_));
            }
            return (ByteString)name_;
        }
        
        public boolean hasToWait() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public boolean getToWait() {
            return this.toWait_;
        }
        
        private void a() {
            this.name_ = "";
            this.toWait_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasName()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasToWait()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getNameBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBool(3, this.toWait_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getNameBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBoolSize(3, this.toWait_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AttachByName_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(byteString);
        }
        
        public static AttachByName_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AttachByName_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(array);
        }
        
        public static AttachByName_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AttachByName_Req parseFrom(final InputStream inputStream) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(inputStream);
        }
        
        public static AttachByName_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AttachByName_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AttachByName_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AttachByName_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static AttachByName_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Req)AttachByName_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AttachByName_Req attachByName_Req) {
            return newBuilder().mergeFrom(attachByName_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AttachByName_Req.PARSER = (Parser<AttachByName_Req>)new AbstractParser<AttachByName_Req>() {
                public AttachByName_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AttachByName_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AttachByName_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AttachByName_ReqOrBuilder
        {
            private int bitField0_;
            private Object name_;
            private boolean toWait_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AttachByName_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AttachByName_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AttachByName_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.name_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.name_ = "";
                this.a();
            }
            
            private void a() {
                if (AttachByName_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.toWait_ = false;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AttachByName_Req_descriptor;
            }
            
            public AttachByName_Req getDefaultInstanceForType() {
                return AttachByName_Req.getDefaultInstance();
            }
            
            public AttachByName_Req build() {
                final AttachByName_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AttachByName_Req buildPartial() {
                final AttachByName_Req attachByName_Req = new AttachByName_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                attachByName_Req.name_ = this.name_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                attachByName_Req.toWait_ = this.toWait_;
                attachByName_Req.bitField0_ = n;
                this.onBuilt();
                return attachByName_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AttachByName_Req) {
                        return this.mergeFrom((AttachByName_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AttachByName_Req attachByName_Req) {
                try {
                    if (attachByName_Req == AttachByName_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (attachByName_Req.hasName()) {
                        this.bitField0_ |= 0x1;
                        this.name_ = attachByName_Req.name_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (attachByName_Req.hasToWait()) {
                        this.setToWait(attachByName_Req.getToWait());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(attachByName_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasName()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasToWait()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AttachByName_Req attachByName_Req = null;
                try {
                    attachByName_Req = (AttachByName_Req)AttachByName_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    attachByName_Req = (AttachByName_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (attachByName_Req != null) {
                            this.mergeFrom(attachByName_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasName() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getName() {
                final Object name_ = this.name_;
                if (!(name_ instanceof String)) {
                    return (String)(this.name_ = ((ByteString)name_).toStringUtf8());
                }
                return (String)name_;
            }
            
            public ByteString getNameBytes() {
                final Object name_ = this.name_;
                if (name_ instanceof String) {
                    return (ByteString)(this.name_ = ByteString.copyFromUtf8((String)name_));
                }
                return (ByteString)name_;
            }
            
            public Builder setName(final String name_) {
                try {
                    if (name_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.name_ = name_;
                this.onChanged();
                return this;
            }
            
            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.name_ = AttachByName_Req.getDefaultInstance().getName();
                this.onChanged();
                return this;
            }
            
            public Builder setNameBytes(final ByteString name_) {
                try {
                    if (name_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.name_ = name_;
                this.onChanged();
                return this;
            }
            
            public boolean hasToWait() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getToWait() {
                return this.toWait_;
            }
            
            public Builder setToWait(final boolean toWait_) {
                this.bitField0_ |= 0x2;
                this.toWait_ = toWait_;
                this.onChanged();
                return this;
            }
            
            public Builder clearToWait() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.toWait_ = false;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AttachByName_Res extends GeneratedMessage implements AttachByName_ResOrBuilder
    {
        private static final AttachByName_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AttachByName_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AttachByName_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AttachByName_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AttachByName_Res getDefaultInstance() {
            return AttachByName_Res.defaultInstance;
        }
        
        public AttachByName_Res getDefaultInstanceForType() {
            return AttachByName_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AttachByName_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AttachByName_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AttachByName_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AttachByName_Res.class, (Class)Builder.class);
        }
        
        public Parser<AttachByName_Res> getParserForType() {
            return AttachByName_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AttachByName_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(byteString);
        }
        
        public static AttachByName_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AttachByName_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(array);
        }
        
        public static AttachByName_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AttachByName_Res parseFrom(final InputStream inputStream) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(inputStream);
        }
        
        public static AttachByName_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AttachByName_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AttachByName_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AttachByName_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static AttachByName_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AttachByName_Res)AttachByName_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AttachByName_Res attachByName_Res) {
            return newBuilder().mergeFrom(attachByName_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AttachByName_Res.PARSER = (Parser<AttachByName_Res>)new AbstractParser<AttachByName_Res>() {
                public AttachByName_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AttachByName_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AttachByName_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AttachByName_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AttachByName_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AttachByName_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AttachByName_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (AttachByName_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AttachByName_Res_descriptor;
            }
            
            public AttachByName_Res getDefaultInstanceForType() {
                return AttachByName_Res.getDefaultInstance();
            }
            
            public AttachByName_Res build() {
                final AttachByName_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AttachByName_Res buildPartial() {
                final AttachByName_Res attachByName_Res = new AttachByName_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            attachByName_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    attachByName_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                attachByName_Res.bitField0_ = n;
                this.onBuilt();
                return attachByName_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AttachByName_Res) {
                        return this.mergeFrom((AttachByName_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AttachByName_Res attachByName_Res) {
                try {
                    if (attachByName_Res == AttachByName_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (attachByName_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(attachByName_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(attachByName_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AttachByName_Res attachByName_Res = null;
                try {
                    attachByName_Res = (AttachByName_Res)AttachByName_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    attachByName_Res = (AttachByName_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (attachByName_Res != null) {
                            this.mergeFrom(attachByName_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Attach_Req extends GeneratedMessage implements Attach_ReqOrBuilder
    {
        private static final Attach_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Attach_Req> PARSER;
        private int bitField0_;
        public static final int PID_FIELD_NUMBER = 2;
        private int pid_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Attach_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Attach_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Attach_Req getDefaultInstance() {
            return Attach_Req.defaultInstance;
        }
        
        public Attach_Req getDefaultInstanceForType() {
            return Attach_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Attach_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.pid_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Attach_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Attach_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Attach_Req.class, (Class)Builder.class);
        }
        
        public Parser<Attach_Req> getParserForType() {
            return Attach_Req.PARSER;
        }
        
        public boolean hasPid() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getPid() {
            return this.pid_;
        }
        
        private void a() {
            this.pid_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasPid()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.pid_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.pid_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Attach_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(byteString);
        }
        
        public static Attach_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Attach_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(array);
        }
        
        public static Attach_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Attach_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Attach_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Attach_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Attach_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Attach_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Attach_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Req)Attach_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Attach_Req attach_Req) {
            return newBuilder().mergeFrom(attach_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Attach_Req.PARSER = (Parser<Attach_Req>)new AbstractParser<Attach_Req>() {
                public Attach_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Attach_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Attach_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Attach_ReqOrBuilder
        {
            private int bitField0_;
            private int pid_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Attach_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Attach_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Attach_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (Attach_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.pid_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Attach_Req_descriptor;
            }
            
            public Attach_Req getDefaultInstanceForType() {
                return Attach_Req.getDefaultInstance();
            }
            
            public Attach_Req build() {
                final Attach_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Attach_Req buildPartial() {
                final Attach_Req attach_Req = new Attach_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                attach_Req.pid_ = this.pid_;
                attach_Req.bitField0_ = n;
                this.onBuilt();
                return attach_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Attach_Req) {
                    return this.mergeFrom((Attach_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Attach_Req attach_Req) {
                if (attach_Req == Attach_Req.getDefaultInstance()) {
                    return this;
                }
                if (attach_Req.hasPid()) {
                    this.setPid(attach_Req.getPid());
                }
                this.mergeUnknownFields(attach_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasPid();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Attach_Req attach_Req = null;
                try {
                    attach_Req = (Attach_Req)Attach_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    attach_Req = (Attach_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (attach_Req != null) {
                            this.mergeFrom(attach_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasPid() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getPid() {
                return this.pid_;
            }
            
            public Builder setPid(final int pid_) {
                this.bitField0_ |= 0x1;
                this.pid_ = pid_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPid() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.pid_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class Detach_Req extends GeneratedMessage implements Detach_ReqOrBuilder
    {
        private static final Detach_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Detach_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Detach_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Detach_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Detach_Req getDefaultInstance() {
            return Detach_Req.defaultInstance;
        }
        
        public Detach_Req getDefaultInstanceForType() {
            return Detach_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Detach_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Detach_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Detach_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Detach_Req.class, (Class)Builder.class);
        }
        
        public Parser<Detach_Req> getParserForType() {
            return Detach_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Detach_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(byteString);
        }
        
        public static Detach_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Detach_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(array);
        }
        
        public static Detach_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Detach_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Detach_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Detach_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Detach_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Detach_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Detach_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Req)Detach_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Detach_Req detach_Req) {
            return newBuilder().mergeFrom(detach_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Detach_Req.PARSER = (Parser<Detach_Req>)new AbstractParser<Detach_Req>() {
                public Detach_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Detach_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Detach_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Detach_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Detach_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Detach_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Detach_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (Detach_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Detach_Req_descriptor;
            }
            
            public Detach_Req getDefaultInstanceForType() {
                return Detach_Req.getDefaultInstance();
            }
            
            public Detach_Req build() {
                final Detach_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Detach_Req buildPartial() {
                final Detach_Req detach_Req = new Detach_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return detach_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Detach_Req) {
                    return this.mergeFrom((Detach_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Detach_Req detach_Req) {
                if (detach_Req == Detach_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(detach_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Detach_Req detach_Req = null;
                try {
                    detach_Req = (Detach_Req)Detach_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    detach_Req = (Detach_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (detach_Req != null) {
                            this.mergeFrom(detach_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class Detach_Res extends GeneratedMessage implements Detach_ResOrBuilder
    {
        private static final Detach_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Detach_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Detach_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Detach_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Detach_Res getDefaultInstance() {
            return Detach_Res.defaultInstance;
        }
        
        public Detach_Res getDefaultInstanceForType() {
            return Detach_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Detach_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Detach_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Detach_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Detach_Res.class, (Class)Builder.class);
        }
        
        public Parser<Detach_Res> getParserForType() {
            return Detach_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Detach_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(byteString);
        }
        
        public static Detach_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Detach_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(array);
        }
        
        public static Detach_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Detach_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Detach_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Detach_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Detach_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Detach_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Detach_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Detach_Res)Detach_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Detach_Res detach_Res) {
            return newBuilder().mergeFrom(detach_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Detach_Res.PARSER = (Parser<Detach_Res>)new AbstractParser<Detach_Res>() {
                public Detach_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Detach_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Detach_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Detach_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Detach_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Detach_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Detach_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (Detach_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Detach_Res_descriptor;
            }
            
            public Detach_Res getDefaultInstanceForType() {
                return Detach_Res.getDefaultInstance();
            }
            
            public Detach_Res build() {
                final Detach_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Detach_Res buildPartial() {
                final Detach_Res detach_Res = new Detach_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            detach_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    detach_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                detach_Res.bitField0_ = n;
                this.onBuilt();
                return detach_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Detach_Res) {
                        return this.mergeFrom((Detach_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Detach_Res detach_Res) {
                try {
                    if (detach_Res == Detach_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (detach_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(detach_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(detach_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Detach_Res detach_Res = null;
                try {
                    detach_Res = (Detach_Res)Detach_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    detach_Res = (Detach_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (detach_Res != null) {
                            this.mergeFrom(detach_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Kill_Req extends GeneratedMessage implements Kill_ReqOrBuilder
    {
        private static final Kill_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Kill_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Kill_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Kill_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Kill_Req getDefaultInstance() {
            return Kill_Req.defaultInstance;
        }
        
        public Kill_Req getDefaultInstanceForType() {
            return Kill_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Kill_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Kill_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Kill_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Kill_Req.class, (Class)Builder.class);
        }
        
        public Parser<Kill_Req> getParserForType() {
            return Kill_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Kill_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(byteString);
        }
        
        public static Kill_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Kill_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(array);
        }
        
        public static Kill_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Kill_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Kill_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Kill_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Kill_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Kill_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Kill_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Req)Kill_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Kill_Req kill_Req) {
            return newBuilder().mergeFrom(kill_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Kill_Req.PARSER = (Parser<Kill_Req>)new AbstractParser<Kill_Req>() {
                public Kill_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Kill_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Kill_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Kill_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Kill_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Kill_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Kill_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (Kill_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Kill_Req_descriptor;
            }
            
            public Kill_Req getDefaultInstanceForType() {
                return Kill_Req.getDefaultInstance();
            }
            
            public Kill_Req build() {
                final Kill_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Kill_Req buildPartial() {
                final Kill_Req kill_Req = new Kill_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return kill_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Kill_Req) {
                    return this.mergeFrom((Kill_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Kill_Req kill_Req) {
                if (kill_Req == Kill_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(kill_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Kill_Req kill_Req = null;
                try {
                    kill_Req = (Kill_Req)Kill_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    kill_Req = (Kill_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (kill_Req != null) {
                            this.mergeFrom(kill_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class Kill_Res extends GeneratedMessage implements Kill_ResOrBuilder
    {
        private static final Kill_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Kill_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Kill_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Kill_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Kill_Res getDefaultInstance() {
            return Kill_Res.defaultInstance;
        }
        
        public Kill_Res getDefaultInstanceForType() {
            return Kill_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Kill_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Kill_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Kill_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Kill_Res.class, (Class)Builder.class);
        }
        
        public Parser<Kill_Res> getParserForType() {
            return Kill_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Kill_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(byteString);
        }
        
        public static Kill_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Kill_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(array);
        }
        
        public static Kill_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Kill_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Kill_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Kill_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Kill_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Kill_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Kill_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Kill_Res)Kill_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Kill_Res kill_Res) {
            return newBuilder().mergeFrom(kill_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Kill_Res.PARSER = (Parser<Kill_Res>)new AbstractParser<Kill_Res>() {
                public Kill_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Kill_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Kill_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Kill_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Kill_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Kill_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Kill_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (Kill_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Kill_Res_descriptor;
            }
            
            public Kill_Res getDefaultInstanceForType() {
                return Kill_Res.getDefaultInstance();
            }
            
            public Kill_Res build() {
                final Kill_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Kill_Res buildPartial() {
                final Kill_Res kill_Res = new Kill_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            kill_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    kill_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                kill_Res.bitField0_ = n;
                this.onBuilt();
                return kill_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Kill_Res) {
                        return this.mergeFrom((Kill_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Kill_Res kill_Res) {
                try {
                    if (kill_Res == Kill_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (kill_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(kill_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(kill_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Kill_Res kill_Res = null;
                try {
                    kill_Res = (Kill_Res)Kill_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    kill_Res = (Kill_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (kill_Res != null) {
                            this.mergeFrom(kill_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Attach_Res extends GeneratedMessage implements Attach_ResOrBuilder
    {
        private static final Attach_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Attach_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Attach_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Attach_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Attach_Res getDefaultInstance() {
            return Attach_Res.defaultInstance;
        }
        
        public Attach_Res getDefaultInstanceForType() {
            return Attach_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Attach_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Attach_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Attach_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Attach_Res.class, (Class)Builder.class);
        }
        
        public Parser<Attach_Res> getParserForType() {
            return Attach_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Attach_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(byteString);
        }
        
        public static Attach_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Attach_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(array);
        }
        
        public static Attach_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Attach_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Attach_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Attach_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Attach_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Attach_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Attach_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Attach_Res)Attach_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Attach_Res attach_Res) {
            return newBuilder().mergeFrom(attach_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Attach_Res.PARSER = (Parser<Attach_Res>)new AbstractParser<Attach_Res>() {
                public Attach_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Attach_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Attach_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Attach_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Attach_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Attach_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Attach_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (Attach_Res.alwaysUseFieldBuilders) {
                        this.b();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Attach_Res_descriptor;
            }
            
            public Attach_Res getDefaultInstanceForType() {
                return Attach_Res.getDefaultInstance();
            }
            
            public Attach_Res build() {
                final Attach_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Attach_Res buildPartial() {
                final Attach_Res attach_Res = new Attach_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            attach_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    attach_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                attach_Res.bitField0_ = n;
                this.onBuilt();
                return attach_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Attach_Res) {
                        return this.mergeFrom((Attach_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Attach_Res attach_Res) {
                try {
                    if (attach_Res == Attach_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (attach_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(attach_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(attach_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Attach_Res attach_Res = null;
                try {
                    attach_Res = (Attach_Res)Attach_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    attach_Res = (Attach_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (attach_Res != null) {
                            this.mergeFrom(attach_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.b().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> b() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Continue_Req extends GeneratedMessage implements Continue_ReqOrBuilder
    {
        private static final Continue_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Continue_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Continue_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Continue_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Continue_Req getDefaultInstance() {
            return Continue_Req.defaultInstance;
        }
        
        public Continue_Req getDefaultInstanceForType() {
            return Continue_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Continue_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Continue_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Continue_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Continue_Req.class, (Class)Builder.class);
        }
        
        public Parser<Continue_Req> getParserForType() {
            return Continue_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Continue_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(byteString);
        }
        
        public static Continue_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Continue_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(array);
        }
        
        public static Continue_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Continue_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Continue_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Continue_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Continue_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Continue_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Continue_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Req)Continue_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Continue_Req continue_Req) {
            return newBuilder().mergeFrom(continue_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Continue_Req.PARSER = (Parser<Continue_Req>)new AbstractParser<Continue_Req>() {
                public Continue_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Continue_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Continue_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Continue_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Continue_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Continue_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Continue_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (Continue_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Continue_Req_descriptor;
            }
            
            public Continue_Req getDefaultInstanceForType() {
                return Continue_Req.getDefaultInstance();
            }
            
            public Continue_Req build() {
                final Continue_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Continue_Req buildPartial() {
                final Continue_Req continue_Req = new Continue_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return continue_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Continue_Req) {
                    return this.mergeFrom((Continue_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Continue_Req continue_Req) {
                if (continue_Req == Continue_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(continue_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Continue_Req continue_Req = null;
                try {
                    continue_Req = (Continue_Req)Continue_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    continue_Req = (Continue_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (continue_Req != null) {
                            this.mergeFrom(continue_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class Continue_Res extends GeneratedMessage implements Continue_ResOrBuilder
    {
        private static final Continue_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Continue_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Continue_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Continue_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Continue_Res getDefaultInstance() {
            return Continue_Res.defaultInstance;
        }
        
        public Continue_Res getDefaultInstanceForType() {
            return Continue_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Continue_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Continue_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Continue_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Continue_Res.class, (Class)Builder.class);
        }
        
        public Parser<Continue_Res> getParserForType() {
            return Continue_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Continue_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(byteString);
        }
        
        public static Continue_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Continue_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(array);
        }
        
        public static Continue_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Continue_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Continue_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Continue_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Continue_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Continue_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Continue_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Continue_Res)Continue_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Continue_Res continue_Res) {
            return newBuilder().mergeFrom(continue_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Continue_Res.PARSER = (Parser<Continue_Res>)new AbstractParser<Continue_Res>() {
                public Continue_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Continue_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Continue_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Continue_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Continue_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Continue_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Continue_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (Continue_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Continue_Res_descriptor;
            }
            
            public Continue_Res getDefaultInstanceForType() {
                return Continue_Res.getDefaultInstance();
            }
            
            public Continue_Res build() {
                final Continue_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Continue_Res buildPartial() {
                final Continue_Res continue_Res = new Continue_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            continue_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    continue_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                continue_Res.bitField0_ = n;
                this.onBuilt();
                return continue_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Continue_Res) {
                        return this.mergeFrom((Continue_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Continue_Res continue_Res) {
                try {
                    if (continue_Res == Continue_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (continue_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(continue_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(continue_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Continue_Res continue_Res = null;
                try {
                    continue_Res = (Continue_Res)Continue_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    continue_Res = (Continue_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (continue_Res != null) {
                            this.mergeFrom(continue_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Suspend_Req extends GeneratedMessage implements Suspend_ReqOrBuilder
    {
        private static final Suspend_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Suspend_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Suspend_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Suspend_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Suspend_Req getDefaultInstance() {
            return Suspend_Req.defaultInstance;
        }
        
        public Suspend_Req getDefaultInstanceForType() {
            return Suspend_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Suspend_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Suspend_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Suspend_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Suspend_Req.class, (Class)Builder.class);
        }
        
        public Parser<Suspend_Req> getParserForType() {
            return Suspend_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Suspend_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(byteString);
        }
        
        public static Suspend_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Suspend_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(array);
        }
        
        public static Suspend_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Suspend_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Suspend_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Suspend_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Suspend_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Suspend_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Suspend_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Req)Suspend_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Suspend_Req suspend_Req) {
            return newBuilder().mergeFrom(suspend_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Suspend_Req.PARSER = (Parser<Suspend_Req>)new AbstractParser<Suspend_Req>() {
                public Suspend_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Suspend_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Suspend_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Suspend_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Suspend_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Suspend_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Suspend_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (Suspend_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Suspend_Req_descriptor;
            }
            
            public Suspend_Req getDefaultInstanceForType() {
                return Suspend_Req.getDefaultInstance();
            }
            
            public Suspend_Req build() {
                final Suspend_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Suspend_Req buildPartial() {
                final Suspend_Req suspend_Req = new Suspend_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return suspend_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Suspend_Req) {
                    return this.mergeFrom((Suspend_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Suspend_Req suspend_Req) {
                if (suspend_Req == Suspend_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(suspend_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Suspend_Req suspend_Req = null;
                try {
                    suspend_Req = (Suspend_Req)Suspend_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    suspend_Req = (Suspend_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (suspend_Req != null) {
                            this.mergeFrom(suspend_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class Suspend_Res extends GeneratedMessage implements Suspend_ResOrBuilder
    {
        private static final Suspend_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Suspend_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Suspend_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Suspend_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Suspend_Res getDefaultInstance() {
            return Suspend_Res.defaultInstance;
        }
        
        public Suspend_Res getDefaultInstanceForType() {
            return Suspend_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Suspend_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Suspend_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Suspend_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Suspend_Res.class, (Class)Builder.class);
        }
        
        public Parser<Suspend_Res> getParserForType() {
            return Suspend_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Suspend_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(byteString);
        }
        
        public static Suspend_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Suspend_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(array);
        }
        
        public static Suspend_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Suspend_Res parseFrom(final InputStream inputStream) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(inputStream);
        }
        
        public static Suspend_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Suspend_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Suspend_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Suspend_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static Suspend_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Suspend_Res)Suspend_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Suspend_Res suspend_Res) {
            return newBuilder().mergeFrom(suspend_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Suspend_Res.PARSER = (Parser<Suspend_Res>)new AbstractParser<Suspend_Res>() {
                public Suspend_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Suspend_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Suspend_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Suspend_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Suspend_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Suspend_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Suspend_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.c();
            }
            
            private void c() {
                try {
                    if (Suspend_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Suspend_Res_descriptor;
            }
            
            public Suspend_Res getDefaultInstanceForType() {
                return Suspend_Res.getDefaultInstance();
            }
            
            public Suspend_Res build() {
                final Suspend_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public Suspend_Res buildPartial() {
                final Suspend_Res suspend_Res = new Suspend_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            suspend_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    suspend_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                suspend_Res.bitField0_ = n;
                this.onBuilt();
                return suspend_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof Suspend_Res) {
                        return this.mergeFrom((Suspend_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Suspend_Res suspend_Res) {
                try {
                    if (suspend_Res == Suspend_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (suspend_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(suspend_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(suspend_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Suspend_Res suspend_Res = null;
                try {
                    suspend_Res = (Suspend_Res)Suspend_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    suspend_Res = (Suspend_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (suspend_Res != null) {
                            this.mergeFrom(suspend_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetThreads_Req extends GeneratedMessage implements GetThreads_ReqOrBuilder
    {
        private static final GetThreads_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetThreads_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetThreads_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetThreads_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetThreads_Req getDefaultInstance() {
            return GetThreads_Req.defaultInstance;
        }
        
        public GetThreads_Req getDefaultInstanceForType() {
            return GetThreads_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetThreads_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetThreads_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetThreads_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetThreads_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetThreads_Req> getParserForType() {
            return GetThreads_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetThreads_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetThreads_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetThreads_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(array);
        }
        
        public static GetThreads_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetThreads_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetThreads_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetThreads_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetThreads_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetThreads_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetThreads_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Req)GetThreads_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetThreads_Req getThreads_Req) {
            return newBuilder().mergeFrom(getThreads_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetThreads_Req.PARSER = (Parser<GetThreads_Req>)new AbstractParser<GetThreads_Req>() {
                public GetThreads_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetThreads_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetThreads_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetThreads_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetThreads_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetThreads_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetThreads_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (GetThreads_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetThreads_Req_descriptor;
            }
            
            public GetThreads_Req getDefaultInstanceForType() {
                return GetThreads_Req.getDefaultInstance();
            }
            
            public GetThreads_Req build() {
                final GetThreads_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetThreads_Req buildPartial() {
                final GetThreads_Req getThreads_Req = new GetThreads_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return getThreads_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetThreads_Req) {
                    return this.mergeFrom((GetThreads_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetThreads_Req getThreads_Req) {
                if (getThreads_Req == GetThreads_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(getThreads_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetThreads_Req getThreads_Req = null;
                try {
                    getThreads_Req = (GetThreads_Req)GetThreads_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getThreads_Req = (GetThreads_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getThreads_Req != null) {
                            this.mergeFrom(getThreads_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetThreads_Res extends GeneratedMessage implements GetThreads_ResOrBuilder
    {
        private static final GetThreads_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetThreads_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int THREAD_FIELD_NUMBER = 2;
        private List<Model.LLDBThread> thread_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetThreads_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetThreads_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetThreads_Res getDefaultInstance() {
            return GetThreads_Res.defaultInstance;
        }
        
        public GetThreads_Res getDefaultInstanceForType() {
            return GetThreads_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetThreads_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.thread_ = new ArrayList<Model.LLDBThread>();
                                n |= 0x2;
                            }
                            this.thread_.add((Model.LLDBThread)codedInputStream.readMessage((Parser)Model.LLDBThread.PARSER, extensionRegistryLite));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.thread_ = Collections.unmodifiableList((List<? extends Model.LLDBThread>)this.thread_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetThreads_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetThreads_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetThreads_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetThreads_Res> getParserForType() {
            return GetThreads_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<Model.LLDBThread> getThreadList() {
            return this.thread_;
        }
        
        public List<? extends Model.LLDBThreadOrBuilder> getThreadOrBuilderList() {
            return this.thread_;
        }
        
        public int getThreadCount() {
            return this.thread_.size();
        }
        
        public Model.LLDBThread getThread(final int n) {
            return this.thread_.get(n);
        }
        
        public Model.LLDBThreadOrBuilder getThreadOrBuilder(final int n) {
            return this.thread_.get(n);
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.thread_ = Collections.emptyList();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < this.getThreadCount(); ++i) {
                if (!this.getThread(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.thread_.size()) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.thread_.get(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            for (int i = 0; i < this.thread_.size(); ++i) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.thread_.get(i));
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetThreads_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetThreads_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetThreads_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(array);
        }
        
        public static GetThreads_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetThreads_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetThreads_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetThreads_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetThreads_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetThreads_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetThreads_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetThreads_Res)GetThreads_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetThreads_Res getThreads_Res) {
            return newBuilder().mergeFrom(getThreads_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetThreads_Res.PARSER = (Parser<GetThreads_Res>)new AbstractParser<GetThreads_Res>() {
                public GetThreads_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetThreads_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetThreads_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetThreads_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private List<Model.LLDBThread> thread_;
            private RepeatedFieldBuilder<Model.LLDBThread, Model.LLDBThread.Builder, Model.LLDBThreadOrBuilder> threadBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetThreads_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetThreads_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetThreads_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.thread_ = Collections.emptyList();
                this.d();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.thread_ = Collections.emptyList();
                this.d();
            }
            
            private void d() {
                try {
                    if (GetThreads_Res.alwaysUseFieldBuilders) {
                        this.b();
                        this.e();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                    try {
                        this.bitField0_ &= 0xFFFFFFFE;
                        if (this.threadBuilder_ == null) {
                            this.thread_ = Collections.emptyList();
                            this.bitField0_ &= 0xFFFFFFFD;
                            return this;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                }
                this.threadBuilder_.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetThreads_Res_descriptor;
            }
            
            public GetThreads_Res getDefaultInstanceForType() {
                return GetThreads_Res.getDefaultInstance();
            }
            
            public GetThreads_Res build() {
                final GetThreads_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetThreads_Res buildPartial() {
                final GetThreads_Res getThreads_Res = new GetThreads_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0143: {
                    Label_0131: {
                        Label_0090: {
                            Label_0066: {
                                try {
                                    if (this.commonResponseBuilder_ == null) {
                                        getThreads_Res.commonResponse_ = this.commonResponse_;
                                        break Label_0066;
                                    }
                                }
                                catch (NullPointerException ex) {
                                    throw b(ex);
                                }
                                getThreads_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                                try {
                                    if (this.threadBuilder_ != null) {
                                        break Label_0131;
                                    }
                                    final Builder builder = this;
                                    final int n2 = builder.bitField0_;
                                    final int n3 = 2;
                                    final int n4 = n2 & n3;
                                    final int n5 = 2;
                                    if (n4 == n5) {
                                        break Label_0090;
                                    }
                                    break Label_0090;
                                }
                                catch (NullPointerException ex2) {
                                    throw b(ex2);
                                }
                            }
                            try {
                                final Builder builder = this;
                                final int n2 = builder.bitField0_;
                                final int n3 = 2;
                                final int n4 = n2 & n3;
                                final int n5 = 2;
                                if (n4 == n5) {
                                    this.thread_ = Collections.unmodifiableList((List<? extends Model.LLDBThread>)this.thread_);
                                    this.bitField0_ &= 0xFFFFFFFD;
                                }
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                        }
                        getThreads_Res.thread_ = this.thread_;
                        break Label_0143;
                    }
                    getThreads_Res.thread_ = (List<Model.LLDBThread>)this.threadBuilder_.build();
                }
                getThreads_Res.bitField0_ = n;
                this.onBuilt();
                return getThreads_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetThreads_Res) {
                        return this.mergeFrom((GetThreads_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetThreads_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_1        
                //     1: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //     4: if_acmpne       13
                //     7: aload_0        
                //     8: areturn        
                //     9: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    12: athrow         
                //    13: aload_1        
                //    14: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.hasCommonResponse:()Z
                //    17: ifeq            36
                //    20: aload_0        
                //    21: aload_1        
                //    22: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.getCommonResponse:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    25: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.mergeCommonResponse:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder;
                //    28: pop            
                //    29: goto            36
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    35: athrow         
                //    36: aload_0        
                //    37: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //    40: ifnonnull       132
                //    43: aload_1        
                //    44: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //    47: invokeinterface java/util/List.isEmpty:()Z
                //    52: ifne            236
                //    55: goto            62
                //    58: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    61: athrow         
                //    62: aload_0        
                //    63: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.thread_:Ljava/util/List;
                //    66: invokeinterface java/util/List.isEmpty:()Z
                //    71: ifeq            107
                //    74: goto            81
                //    77: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    80: athrow         
                //    81: aload_0        
                //    82: aload_1        
                //    83: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //    86: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.thread_:Ljava/util/List;
                //    89: aload_0        
                //    90: aload_0        
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //    94: bipush          -3
                //    96: iand           
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //   100: goto            125
                //   103: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   106: athrow         
                //   107: aload_0        
                //   108: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.c:()V
                //   111: aload_0        
                //   112: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.thread_:Ljava/util/List;
                //   115: aload_1        
                //   116: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //   119: invokeinterface java/util/List.addAll:(Ljava/util/Collection;)Z
                //   124: pop            
                //   125: aload_0        
                //   126: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.onChanged:()V
                //   129: goto            236
                //   132: aload_1        
                //   133: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //   136: invokeinterface java/util/List.isEmpty:()Z
                //   141: ifne            236
                //   144: aload_0        
                //   145: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   148: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.isEmpty:()Z
                //   151: ifeq            224
                //   154: goto            161
                //   157: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   160: athrow         
                //   161: aload_0        
                //   162: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   165: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.dispose:()V
                //   168: aload_0        
                //   169: aconst_null    
                //   170: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   173: aload_0        
                //   174: aload_1        
                //   175: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //   178: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.thread_:Ljava/util/List;
                //   181: aload_0        
                //   182: aload_0        
                //   183: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //   186: bipush          -3
                //   188: iand           
                //   189: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //   192: aload_0        
                //   193: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$17000:()Z
                //   196: ifeq            217
                //   199: goto            206
                //   202: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   205: athrow         
                //   206: aload_0        
                //   207: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.e:()Lcom/google/protobuf/RepeatedFieldBuilder;
                //   210: goto            218
                //   213: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   216: athrow         
                //   217: aconst_null    
                //   218: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   221: goto            236
                //   224: aload_0        
                //   225: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.threadBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   228: aload_1        
                //   229: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.access$16800:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Ljava/util/List;
                //   232: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.addAllMessages:(Ljava/lang/Iterable;)Lcom/google/protobuf/RepeatedFieldBuilder;
                //   235: pop            
                //   236: aload_0        
                //   237: aload_1        
                //   238: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.getUnknownFields:()Lcom/google/protobuf/UnknownFieldSet;
                //   241: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.mergeUnknownFields:(Lcom/google/protobuf/UnknownFieldSet;)Lcom/google/protobuf/GeneratedMessage$Builder;
                //   244: pop            
                //   245: aload_0        
                //   246: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      9      9      13     Ljava/lang/NullPointerException;
                //  13     29     32     36     Ljava/lang/NullPointerException;
                //  36     55     58     62     Ljava/lang/NullPointerException;
                //  43     74     77     81     Ljava/lang/NullPointerException;
                //  62     103    103    107    Ljava/lang/NullPointerException;
                //  132    154    157    161    Ljava/lang/NullPointerException;
                //  144    199    202    206    Ljava/lang/NullPointerException;
                //  161    213    213    217    Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0062:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                int n = 0;
                while (true) {
                    Label_0063: {
                        try {
                            if (n >= this.getThreadCount()) {
                                break;
                            }
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBThread lldbThread = builder.getThread(n2);
                            final boolean b = lldbThread.isInitialized();
                            if (!b) {
                                return false;
                            }
                            break Label_0063;
                        }
                        catch (NullPointerException ex3) {
                            throw b(ex3);
                        }
                        try {
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBThread lldbThread = builder.getThread(n2);
                            final boolean b = lldbThread.isInitialized();
                            if (!b) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex4) {
                            throw b(ex4);
                        }
                    }
                    ++n;
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetThreads_Res getThreads_Res = null;
                try {
                    getThreads_Res = (GetThreads_Res)GetThreads_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getThreads_Res = (GetThreads_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getThreads_Res != null) {
                            this.mergeFrom(getThreads_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.b().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> b() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void c() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.thread_ = new ArrayList<Model.LLDBThread>(this.thread_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<Model.LLDBThread> getThreadList() {
                try {
                    if (this.threadBuilder_ == null) {
                        return Collections.unmodifiableList((List<? extends Model.LLDBThread>)this.thread_);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (List<Model.LLDBThread>)this.threadBuilder_.getMessageList();
            }
            
            public int getThreadCount() {
                try {
                    if (this.threadBuilder_ == null) {
                        return this.thread_.size();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.threadBuilder_.getCount();
            }
            
            public Model.LLDBThread getThread(final int n) {
                try {
                    if (this.threadBuilder_ == null) {
                        return this.thread_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBThread)this.threadBuilder_.getMessage(n);
            }
            
            public Builder setThread(final int n, final Model.LLDBThread lldbThread) {
                Label_0053: {
                    Label_0018: {
                        try {
                            if (this.threadBuilder_ != null) {
                                break Label_0053;
                            }
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.c();
                    this.thread_.set(n, lldbThread);
                    this.onChanged();
                    return this;
                }
                this.threadBuilder_.setMessage(n, (GeneratedMessage)lldbThread);
                return this;
            }
            
            public Builder setThread(final int n, final Model.LLDBThread.Builder builder) {
                try {
                    if (this.threadBuilder_ == null) {
                        this.c();
                        this.thread_.set(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.setMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addThread(final Model.LLDBThread lldbThread) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.threadBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.c();
                    this.thread_.add(lldbThread);
                    this.onChanged();
                    return this;
                }
                this.threadBuilder_.addMessage((GeneratedMessage)lldbThread);
                return this;
            }
            
            public Builder addThread(final int n, final Model.LLDBThread lldbThread) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.threadBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBThread lldbThread2 = lldbThread;
                            if (lldbThread2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.c();
                    this.thread_.add(n, lldbThread);
                    this.onChanged();
                    return this;
                }
                this.threadBuilder_.addMessage(n, (GeneratedMessage)lldbThread);
                return this;
            }
            
            public Builder addThread(final Model.LLDBThread.Builder builder) {
                try {
                    if (this.threadBuilder_ == null) {
                        this.c();
                        this.thread_.add(builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.addMessage((GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addThread(final int n, final Model.LLDBThread.Builder builder) {
                try {
                    if (this.threadBuilder_ == null) {
                        this.c();
                        this.thread_.add(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.addMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addAllThread(final Iterable<? extends Model.LLDBThread> iterable) {
                try {
                    if (this.threadBuilder_ == null) {
                        this.c();
                        GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.thread_);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.addAllMessages((Iterable)iterable);
                return this;
            }
            
            public Builder clearThread() {
                try {
                    if (this.threadBuilder_ == null) {
                        this.thread_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.clear();
                return this;
            }
            
            public Builder removeThread(final int n) {
                try {
                    if (this.threadBuilder_ == null) {
                        this.c();
                        this.thread_.remove(n);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.threadBuilder_.remove(n);
                return this;
            }
            
            public Model.LLDBThread.Builder getThreadBuilder(final int n) {
                return (Model.LLDBThread.Builder)this.e().getBuilder(n);
            }
            
            public Model.LLDBThreadOrBuilder getThreadOrBuilder(final int n) {
                try {
                    if (this.threadBuilder_ == null) {
                        return this.thread_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBThreadOrBuilder)this.threadBuilder_.getMessageOrBuilder(n);
            }
            
            public List<? extends Model.LLDBThreadOrBuilder> getThreadOrBuilderList() {
                try {
                    if (this.threadBuilder_ != null) {
                        return (List<? extends Model.LLDBThreadOrBuilder>)this.threadBuilder_.getMessageOrBuilderList();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return Collections.unmodifiableList((List<? extends Model.LLDBThreadOrBuilder>)this.thread_);
            }
            
            public Model.LLDBThread.Builder addThreadBuilder() {
                return (Model.LLDBThread.Builder)this.e().addBuilder((GeneratedMessage)Model.LLDBThread.getDefaultInstance());
            }
            
            public Model.LLDBThread.Builder addThreadBuilder(final int n) {
                return (Model.LLDBThread.Builder)this.e().addBuilder(n, (GeneratedMessage)Model.LLDBThread.getDefaultInstance());
            }
            
            public List<Model.LLDBThread.Builder> getThreadBuilderList() {
                return (List<Model.LLDBThread.Builder>)this.e().getBuilderList();
            }
            
            private RepeatedFieldBuilder<Model.LLDBThread, Model.LLDBThread.Builder, Model.LLDBThreadOrBuilder> e() {
                Builder builder = null;
                RepeatedFieldBuilder threadBuilder_ = null;
                List<Model.LLDBThread> list = null;
                boolean b = false;
                Label_0042: {
                    Label_0033: {
                        try {
                            if (this.threadBuilder_ != null) {
                                return this.threadBuilder_;
                            }
                            builder = this;
                            threadBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.thread_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                break Label_0033;
                            }
                            break Label_0033;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            builder = this;
                            threadBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.thread_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                b = true;
                                break Label_0042;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    b = false;
                }
                new RepeatedFieldBuilder((List)list, b, this.getParentForChildren(), this.isClean());
                builder.threadBuilder_ = (RepeatedFieldBuilder<Model.LLDBThread, Model.LLDBThread.Builder, Model.LLDBThreadOrBuilder>)threadBuilder_;
                this.thread_ = null;
                return this.threadBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetFrames_Req extends GeneratedMessage implements GetFrames_ReqOrBuilder
    {
        private static final GetFrames_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetFrames_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        public static final int FROM_INDEX_FIELD_NUMBER = 3;
        private int fromIndex_;
        public static final int COUNT_FIELD_NUMBER = 4;
        private int count_;
        public static final int UNTIL_VALID_LINE_ENTRY_FIELD_NUMBER = 5;
        private boolean untilValidLineEntry_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetFrames_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetFrames_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetFrames_Req getDefaultInstance() {
            return GetFrames_Req.defaultInstance;
        }
        
        public GetFrames_Req getDefaultInstanceForType() {
            return GetFrames_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetFrames_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.fromIndex_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.count_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x8;
                            this.untilValidLineEntry_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetFrames_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetFrames_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetFrames_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetFrames_Req> getParserForType() {
            return GetFrames_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        public boolean hasFromIndex() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getFromIndex() {
            return this.fromIndex_;
        }
        
        public boolean hasCount() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getCount() {
            return this.count_;
        }
        
        public boolean hasUntilValidLineEntry() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public boolean getUntilValidLineEntry() {
            return this.untilValidLineEntry_;
        }
        
        private void a() {
            this.threadId_ = 0;
            this.fromIndex_ = 0;
            this.count_ = 0;
            this.untilValidLineEntry_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasFromIndex()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasCount()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasUntilValidLineEntry()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeUInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.fromIndex_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.count_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBool(5, this.untilValidLineEntry_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeUInt32Size(2, this.threadId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.fromIndex_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.count_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBoolSize(5, this.untilValidLineEntry_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetFrames_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetFrames_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetFrames_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(array);
        }
        
        public static GetFrames_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetFrames_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetFrames_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetFrames_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetFrames_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetFrames_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetFrames_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Req)GetFrames_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetFrames_Req getFrames_Req) {
            return newBuilder().mergeFrom(getFrames_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetFrames_Req.PARSER = (Parser<GetFrames_Req>)new AbstractParser<GetFrames_Req>() {
                public GetFrames_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetFrames_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetFrames_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetFrames_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            private int fromIndex_;
            private int count_;
            private boolean untilValidLineEntry_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetFrames_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetFrames_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetFrames_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (GetFrames_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.fromIndex_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.count_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.untilValidLineEntry_ = false;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetFrames_Req_descriptor;
            }
            
            public GetFrames_Req getDefaultInstanceForType() {
                return GetFrames_Req.getDefaultInstance();
            }
            
            public GetFrames_Req build() {
                final GetFrames_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetFrames_Req buildPartial() {
                final GetFrames_Req getFrames_Req = new GetFrames_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getFrames_Req.threadId_ = this.threadId_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getFrames_Req.fromIndex_ = this.fromIndex_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                getFrames_Req.count_ = this.count_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                getFrames_Req.untilValidLineEntry_ = this.untilValidLineEntry_;
                getFrames_Req.bitField0_ = n;
                this.onBuilt();
                return getFrames_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetFrames_Req) {
                    return this.mergeFrom((GetFrames_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetFrames_Req getFrames_Req) {
                if (getFrames_Req == GetFrames_Req.getDefaultInstance()) {
                    return this;
                }
                if (getFrames_Req.hasThreadId()) {
                    this.setThreadId(getFrames_Req.getThreadId());
                }
                if (getFrames_Req.hasFromIndex()) {
                    this.setFromIndex(getFrames_Req.getFromIndex());
                }
                if (getFrames_Req.hasCount()) {
                    this.setCount(getFrames_Req.getCount());
                }
                if (getFrames_Req.hasUntilValidLineEntry()) {
                    this.setUntilValidLineEntry(getFrames_Req.getUntilValidLineEntry());
                }
                this.mergeUnknownFields(getFrames_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasThreadId() && this.hasFromIndex() && this.hasCount() && this.hasUntilValidLineEntry();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetFrames_Req getFrames_Req = null;
                try {
                    getFrames_Req = (GetFrames_Req)GetFrames_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getFrames_Req = (GetFrames_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getFrames_Req != null) {
                            this.mergeFrom(getFrames_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasFromIndex() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            public int getFromIndex() {
                return this.fromIndex_;
            }
            
            public Builder setFromIndex(final int fromIndex_) {
                this.bitField0_ |= 0x2;
                this.fromIndex_ = fromIndex_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFromIndex() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.fromIndex_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCount() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            public int getCount() {
                return this.count_;
            }
            
            public Builder setCount(final int count_) {
                this.bitField0_ |= 0x4;
                this.count_ = count_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCount() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.count_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasUntilValidLineEntry() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            public boolean getUntilValidLineEntry() {
                return this.untilValidLineEntry_;
            }
            
            public Builder setUntilValidLineEntry(final boolean untilValidLineEntry_) {
                this.bitField0_ |= 0x8;
                this.untilValidLineEntry_ = untilValidLineEntry_;
                this.onChanged();
                return this;
            }
            
            public Builder clearUntilValidLineEntry() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.untilValidLineEntry_ = false;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetFrames_Res extends GeneratedMessage implements GetFrames_ResOrBuilder
    {
        private static final GetFrames_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetFrames_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int FRAME_FIELD_NUMBER = 2;
        private List<Model.LLDBFrame> frame_;
        public static final int HAS_MORE_FIELD_NUMBER = 3;
        private boolean hasMore_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetFrames_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetFrames_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetFrames_Res getDefaultInstance() {
            return GetFrames_Res.defaultInstance;
        }
        
        public GetFrames_Res getDefaultInstanceForType() {
            return GetFrames_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetFrames_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.frame_ = new ArrayList<Model.LLDBFrame>();
                                n |= 0x2;
                            }
                            this.frame_.add((Model.LLDBFrame)codedInputStream.readMessage((Parser)Model.LLDBFrame.PARSER, extensionRegistryLite));
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.hasMore_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.frame_ = Collections.unmodifiableList((List<? extends Model.LLDBFrame>)this.frame_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetFrames_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetFrames_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetFrames_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetFrames_Res> getParserForType() {
            return GetFrames_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<Model.LLDBFrame> getFrameList() {
            return this.frame_;
        }
        
        public List<? extends Model.LLDBFrameOrBuilder> getFrameOrBuilderList() {
            return this.frame_;
        }
        
        public int getFrameCount() {
            return this.frame_.size();
        }
        
        public Model.LLDBFrame getFrame(final int n) {
            return this.frame_.get(n);
        }
        
        public Model.LLDBFrameOrBuilder getFrameOrBuilder(final int n) {
            return this.frame_.get(n);
        }
        
        public boolean hasHasMore() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public boolean getHasMore() {
            return this.hasMore_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.frame_ = Collections.emptyList();
            this.hasMore_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasHasMore()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < this.getFrameCount(); ++i) {
                if (!this.getFrame(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.frame_.size()) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.frame_.get(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBool(3, this.hasMore_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            for (int i = 0; i < this.frame_.size(); ++i) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.frame_.get(i));
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBoolSize(3, this.hasMore_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetFrames_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetFrames_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetFrames_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(array);
        }
        
        public static GetFrames_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetFrames_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetFrames_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetFrames_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetFrames_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetFrames_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetFrames_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetFrames_Res)GetFrames_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return d();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetFrames_Res getFrames_Res) {
            return newBuilder().mergeFrom(getFrames_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetFrames_Res.PARSER = (Parser<GetFrames_Res>)new AbstractParser<GetFrames_Res>() {
                public GetFrames_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetFrames_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetFrames_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetFrames_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private List<Model.LLDBFrame> frame_;
            private RepeatedFieldBuilder<Model.LLDBFrame, Model.LLDBFrame.Builder, Model.LLDBFrameOrBuilder> frameBuilder_;
            private boolean hasMore_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetFrames_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetFrames_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetFrames_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.frame_ = Collections.emptyList();
                this.e();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.frame_ = Collections.emptyList();
                this.e();
            }
            
            private void e() {
                try {
                    if (GetFrames_Res.alwaysUseFieldBuilders) {
                        this.c();
                        this.b();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder d() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0084: {
                    Label_0034: {
                        try {
                            super.clear();
                            if (this.commonResponseBuilder_ == null) {
                                this.commonResponse_ = CommonResponse.getDefaultInstance();
                                break Label_0034;
                            }
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        this.commonResponseBuilder_.clear();
                        try {
                            this.bitField0_ &= 0xFFFFFFFE;
                            if (this.frameBuilder_ == null) {
                                this.frame_ = Collections.emptyList();
                                this.bitField0_ &= 0xFFFFFFFD;
                                break Label_0084;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.frameBuilder_.clear();
                }
                this.hasMore_ = false;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Builder clone() {
                return d().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetFrames_Res_descriptor;
            }
            
            public GetFrames_Res getDefaultInstanceForType() {
                return GetFrames_Res.getDefaultInstance();
            }
            
            public GetFrames_Res build() {
                final GetFrames_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetFrames_Res buildPartial() {
                final GetFrames_Res getFrames_Res = new GetFrames_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0143: {
                    Label_0131: {
                        Label_0090: {
                            Label_0066: {
                                try {
                                    if (this.commonResponseBuilder_ == null) {
                                        getFrames_Res.commonResponse_ = this.commonResponse_;
                                        break Label_0066;
                                    }
                                }
                                catch (NullPointerException ex) {
                                    throw b(ex);
                                }
                                getFrames_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                                try {
                                    if (this.frameBuilder_ != null) {
                                        break Label_0131;
                                    }
                                    final Builder builder = this;
                                    final int n2 = builder.bitField0_;
                                    final int n3 = 2;
                                    final int n4 = n2 & n3;
                                    final int n5 = 2;
                                    if (n4 == n5) {
                                        break Label_0090;
                                    }
                                    break Label_0090;
                                }
                                catch (NullPointerException ex2) {
                                    throw b(ex2);
                                }
                            }
                            try {
                                final Builder builder = this;
                                final int n2 = builder.bitField0_;
                                final int n3 = 2;
                                final int n4 = n2 & n3;
                                final int n5 = 2;
                                if (n4 == n5) {
                                    this.frame_ = Collections.unmodifiableList((List<? extends Model.LLDBFrame>)this.frame_);
                                    this.bitField0_ &= 0xFFFFFFFD;
                                }
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                        }
                        getFrames_Res.frame_ = this.frame_;
                        break Label_0143;
                    }
                    getFrames_Res.frame_ = (List<Model.LLDBFrame>)this.frameBuilder_.build();
                }
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x2;
                }
                getFrames_Res.hasMore_ = this.hasMore_;
                getFrames_Res.bitField0_ = n;
                this.onBuilt();
                return getFrames_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetFrames_Res) {
                        return this.mergeFrom((GetFrames_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetFrames_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_1        
                //     1: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //     4: if_acmpne       13
                //     7: aload_0        
                //     8: areturn        
                //     9: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    12: athrow         
                //    13: aload_1        
                //    14: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.hasCommonResponse:()Z
                //    17: ifeq            36
                //    20: aload_0        
                //    21: aload_1        
                //    22: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.getCommonResponse:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    25: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.mergeCommonResponse:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder;
                //    28: pop            
                //    29: goto            36
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    35: athrow         
                //    36: aload_0        
                //    37: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //    40: ifnonnull       132
                //    43: aload_1        
                //    44: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //    47: invokeinterface java/util/List.isEmpty:()Z
                //    52: ifne            236
                //    55: goto            62
                //    58: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    61: athrow         
                //    62: aload_0        
                //    63: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frame_:Ljava/util/List;
                //    66: invokeinterface java/util/List.isEmpty:()Z
                //    71: ifeq            107
                //    74: goto            81
                //    77: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    80: athrow         
                //    81: aload_0        
                //    82: aload_1        
                //    83: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //    86: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frame_:Ljava/util/List;
                //    89: aload_0        
                //    90: aload_0        
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //    94: bipush          -3
                //    96: iand           
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //   100: goto            125
                //   103: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   106: athrow         
                //   107: aload_0        
                //   108: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.a:()V
                //   111: aload_0        
                //   112: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frame_:Ljava/util/List;
                //   115: aload_1        
                //   116: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //   119: invokeinterface java/util/List.addAll:(Ljava/util/Collection;)Z
                //   124: pop            
                //   125: aload_0        
                //   126: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.onChanged:()V
                //   129: goto            236
                //   132: aload_1        
                //   133: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //   136: invokeinterface java/util/List.isEmpty:()Z
                //   141: ifne            236
                //   144: aload_0        
                //   145: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   148: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.isEmpty:()Z
                //   151: ifeq            224
                //   154: goto            161
                //   157: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   160: athrow         
                //   161: aload_0        
                //   162: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   165: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.dispose:()V
                //   168: aload_0        
                //   169: aconst_null    
                //   170: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   173: aload_0        
                //   174: aload_1        
                //   175: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //   178: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frame_:Ljava/util/List;
                //   181: aload_0        
                //   182: aload_0        
                //   183: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //   186: bipush          -3
                //   188: iand           
                //   189: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //   192: aload_0        
                //   193: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19400:()Z
                //   196: ifeq            217
                //   199: goto            206
                //   202: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   205: athrow         
                //   206: aload_0        
                //   207: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:()Lcom/google/protobuf/RepeatedFieldBuilder;
                //   210: goto            218
                //   213: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   216: athrow         
                //   217: aconst_null    
                //   218: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   221: goto            236
                //   224: aload_0        
                //   225: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.frameBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   228: aload_1        
                //   229: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.access$19100:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Ljava/util/List;
                //   232: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.addAllMessages:(Ljava/lang/Iterable;)Lcom/google/protobuf/RepeatedFieldBuilder;
                //   235: pop            
                //   236: aload_1        
                //   237: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.hasHasMore:()Z
                //   240: ifeq            259
                //   243: aload_0        
                //   244: aload_1        
                //   245: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.getHasMore:()Z
                //   248: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.setHasMore:(Z)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder;
                //   251: pop            
                //   252: goto            259
                //   255: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   258: athrow         
                //   259: aload_0        
                //   260: aload_1        
                //   261: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.getUnknownFields:()Lcom/google/protobuf/UnknownFieldSet;
                //   264: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.mergeUnknownFields:(Lcom/google/protobuf/UnknownFieldSet;)Lcom/google/protobuf/GeneratedMessage$Builder;
                //   267: pop            
                //   268: aload_0        
                //   269: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      9      9      13     Ljava/lang/NullPointerException;
                //  13     29     32     36     Ljava/lang/NullPointerException;
                //  36     55     58     62     Ljava/lang/NullPointerException;
                //  43     74     77     81     Ljava/lang/NullPointerException;
                //  62     103    103    107    Ljava/lang/NullPointerException;
                //  132    154    157    161    Ljava/lang/NullPointerException;
                //  144    199    202    206    Ljava/lang/NullPointerException;
                //  161    213    213    217    Ljava/lang/NullPointerException;
                //  236    252    255    259    Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0062:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasHasMore()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                int n = 0;
                while (true) {
                    Label_0076: {
                        try {
                            if (n >= this.getFrameCount()) {
                                break;
                            }
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBFrame lldbFrame = builder.getFrame(n2);
                            final boolean b = lldbFrame.isInitialized();
                            if (!b) {
                                return false;
                            }
                            break Label_0076;
                        }
                        catch (NullPointerException ex4) {
                            throw b(ex4);
                        }
                        try {
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBFrame lldbFrame = builder.getFrame(n2);
                            final boolean b = lldbFrame.isInitialized();
                            if (!b) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex5) {
                            throw b(ex5);
                        }
                    }
                    ++n;
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetFrames_Res getFrames_Res = null;
                try {
                    getFrames_Res = (GetFrames_Res)GetFrames_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getFrames_Res = (GetFrames_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getFrames_Res != null) {
                            this.mergeFrom(getFrames_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void a() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.frame_ = new ArrayList<Model.LLDBFrame>(this.frame_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<Model.LLDBFrame> getFrameList() {
                try {
                    if (this.frameBuilder_ == null) {
                        return Collections.unmodifiableList((List<? extends Model.LLDBFrame>)this.frame_);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (List<Model.LLDBFrame>)this.frameBuilder_.getMessageList();
            }
            
            public int getFrameCount() {
                try {
                    if (this.frameBuilder_ == null) {
                        return this.frame_.size();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.frameBuilder_.getCount();
            }
            
            public Model.LLDBFrame getFrame(final int n) {
                try {
                    if (this.frameBuilder_ == null) {
                        return this.frame_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBFrame)this.frameBuilder_.getMessage(n);
            }
            
            public Builder setFrame(final int n, final Model.LLDBFrame lldbFrame) {
                Label_0053: {
                    Label_0018: {
                        try {
                            if (this.frameBuilder_ != null) {
                                break Label_0053;
                            }
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.a();
                    this.frame_.set(n, lldbFrame);
                    this.onChanged();
                    return this;
                }
                this.frameBuilder_.setMessage(n, (GeneratedMessage)lldbFrame);
                return this;
            }
            
            public Builder setFrame(final int n, final Model.LLDBFrame.Builder builder) {
                try {
                    if (this.frameBuilder_ == null) {
                        this.a();
                        this.frame_.set(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.setMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addFrame(final Model.LLDBFrame lldbFrame) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.frameBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.a();
                    this.frame_.add(lldbFrame);
                    this.onChanged();
                    return this;
                }
                this.frameBuilder_.addMessage((GeneratedMessage)lldbFrame);
                return this;
            }
            
            public Builder addFrame(final int n, final Model.LLDBFrame lldbFrame) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.frameBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBFrame lldbFrame2 = lldbFrame;
                            if (lldbFrame2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.a();
                    this.frame_.add(n, lldbFrame);
                    this.onChanged();
                    return this;
                }
                this.frameBuilder_.addMessage(n, (GeneratedMessage)lldbFrame);
                return this;
            }
            
            public Builder addFrame(final Model.LLDBFrame.Builder builder) {
                try {
                    if (this.frameBuilder_ == null) {
                        this.a();
                        this.frame_.add(builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.addMessage((GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addFrame(final int n, final Model.LLDBFrame.Builder builder) {
                try {
                    if (this.frameBuilder_ == null) {
                        this.a();
                        this.frame_.add(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.addMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addAllFrame(final Iterable<? extends Model.LLDBFrame> iterable) {
                try {
                    if (this.frameBuilder_ == null) {
                        this.a();
                        GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.frame_);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.addAllMessages((Iterable)iterable);
                return this;
            }
            
            public Builder clearFrame() {
                try {
                    if (this.frameBuilder_ == null) {
                        this.frame_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.clear();
                return this;
            }
            
            public Builder removeFrame(final int n) {
                try {
                    if (this.frameBuilder_ == null) {
                        this.a();
                        this.frame_.remove(n);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.frameBuilder_.remove(n);
                return this;
            }
            
            public Model.LLDBFrame.Builder getFrameBuilder(final int n) {
                return (Model.LLDBFrame.Builder)this.b().getBuilder(n);
            }
            
            public Model.LLDBFrameOrBuilder getFrameOrBuilder(final int n) {
                try {
                    if (this.frameBuilder_ == null) {
                        return this.frame_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBFrameOrBuilder)this.frameBuilder_.getMessageOrBuilder(n);
            }
            
            public List<? extends Model.LLDBFrameOrBuilder> getFrameOrBuilderList() {
                try {
                    if (this.frameBuilder_ != null) {
                        return (List<? extends Model.LLDBFrameOrBuilder>)this.frameBuilder_.getMessageOrBuilderList();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return Collections.unmodifiableList((List<? extends Model.LLDBFrameOrBuilder>)this.frame_);
            }
            
            public Model.LLDBFrame.Builder addFrameBuilder() {
                return (Model.LLDBFrame.Builder)this.b().addBuilder((GeneratedMessage)Model.LLDBFrame.getDefaultInstance());
            }
            
            public Model.LLDBFrame.Builder addFrameBuilder(final int n) {
                return (Model.LLDBFrame.Builder)this.b().addBuilder(n, (GeneratedMessage)Model.LLDBFrame.getDefaultInstance());
            }
            
            public List<Model.LLDBFrame.Builder> getFrameBuilderList() {
                return (List<Model.LLDBFrame.Builder>)this.b().getBuilderList();
            }
            
            private RepeatedFieldBuilder<Model.LLDBFrame, Model.LLDBFrame.Builder, Model.LLDBFrameOrBuilder> b() {
                Builder builder = null;
                RepeatedFieldBuilder frameBuilder_ = null;
                List<Model.LLDBFrame> list = null;
                boolean b = false;
                Label_0042: {
                    Label_0033: {
                        try {
                            if (this.frameBuilder_ != null) {
                                return this.frameBuilder_;
                            }
                            builder = this;
                            frameBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.frame_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                break Label_0033;
                            }
                            break Label_0033;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            builder = this;
                            frameBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.frame_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                b = true;
                                break Label_0042;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    b = false;
                }
                new RepeatedFieldBuilder((List)list, b, this.getParentForChildren(), this.isClean());
                builder.frameBuilder_ = (RepeatedFieldBuilder<Model.LLDBFrame, Model.LLDBFrame.Builder, Model.LLDBFrameOrBuilder>)frameBuilder_;
                this.frame_ = null;
                return this.frameBuilder_;
            }
            
            public boolean hasHasMore() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getHasMore() {
                return this.hasMore_;
            }
            
            public Builder setHasMore(final boolean hasMore_) {
                this.bitField0_ |= 0x4;
                this.hasMore_ = hasMore_;
                this.onChanged();
                return this;
            }
            
            public Builder clearHasMore() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.hasMore_ = false;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AddBreakpoint_Req extends GeneratedMessage implements AddBreakpoint_ReqOrBuilder
    {
        private static final AddBreakpoint_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AddBreakpoint_Req> PARSER;
        private int bitField0_;
        public static final int FILE_FIELD_NUMBER = 2;
        private Object file_;
        public static final int LINE_FIELD_NUMBER = 3;
        private int line_;
        public static final int CONDITION_FIELD_NUMBER = 4;
        private Object condition_;
        public static final int SYMBOL_PATTERN_FIELD_NUMBER = 5;
        private Object symbolPattern_;
        public static final int MODULE_NAME_FIELD_NUMBER = 6;
        private Object moduleName_;
        public static final int THREAD_ID_FIELD_NUMBER = 7;
        private int threadId_;
        public static final int REGEXP_FIELD_NUMBER = 8;
        private boolean regexp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AddBreakpoint_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AddBreakpoint_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AddBreakpoint_Req getDefaultInstance() {
            return AddBreakpoint_Req.defaultInstance;
        }
        
        public AddBreakpoint_Req getDefaultInstanceForType() {
            return AddBreakpoint_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AddBreakpoint_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.file_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.line_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x4;
                            this.condition_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 42: {
                            this.bitField0_ |= 0x8;
                            this.symbolPattern_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 50: {
                            this.bitField0_ |= 0x10;
                            this.moduleName_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 56: {
                            this.bitField0_ |= 0x20;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                        case 64: {
                            this.bitField0_ |= 0x40;
                            this.regexp_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AddBreakpoint_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AddBreakpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddBreakpoint_Req.class, (Class)Builder.class);
        }
        
        public Parser<AddBreakpoint_Req> getParserForType() {
            return AddBreakpoint_Req.PARSER;
        }
        
        public boolean hasFile() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getFile() {
            final Object file_ = this.file_;
            if (file_ instanceof String) {
                return (String)file_;
            }
            final ByteString byteString = (ByteString)file_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.file_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getFileBytes() {
            final Object file_ = this.file_;
            if (file_ instanceof String) {
                return (ByteString)(this.file_ = ByteString.copyFromUtf8((String)file_));
            }
            return (ByteString)file_;
        }
        
        public boolean hasLine() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getLine() {
            return this.line_;
        }
        
        public boolean hasCondition() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public String getCondition() {
            final Object condition_ = this.condition_;
            if (condition_ instanceof String) {
                return (String)condition_;
            }
            final ByteString byteString = (ByteString)condition_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.condition_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getConditionBytes() {
            final Object condition_ = this.condition_;
            if (condition_ instanceof String) {
                return (ByteString)(this.condition_ = ByteString.copyFromUtf8((String)condition_));
            }
            return (ByteString)condition_;
        }
        
        public boolean hasSymbolPattern() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public String getSymbolPattern() {
            final Object symbolPattern_ = this.symbolPattern_;
            if (symbolPattern_ instanceof String) {
                return (String)symbolPattern_;
            }
            final ByteString byteString = (ByteString)symbolPattern_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.symbolPattern_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getSymbolPatternBytes() {
            final Object symbolPattern_ = this.symbolPattern_;
            if (symbolPattern_ instanceof String) {
                return (ByteString)(this.symbolPattern_ = ByteString.copyFromUtf8((String)symbolPattern_));
            }
            return (ByteString)symbolPattern_;
        }
        
        public boolean hasModuleName() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        public String getModuleName() {
            final Object moduleName_ = this.moduleName_;
            if (moduleName_ instanceof String) {
                return (String)moduleName_;
            }
            final ByteString byteString = (ByteString)moduleName_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.moduleName_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getModuleNameBytes() {
            final Object moduleName_ = this.moduleName_;
            if (moduleName_ instanceof String) {
                return (ByteString)(this.moduleName_ = ByteString.copyFromUtf8((String)moduleName_));
            }
            return (ByteString)moduleName_;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        public boolean hasRegexp() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        public boolean getRegexp() {
            return this.regexp_;
        }
        
        private void a() {
            this.file_ = "";
            this.line_ = 0;
            this.condition_ = "";
            this.symbolPattern_ = "";
            this.moduleName_ = "";
            this.threadId_ = 0;
            this.regexp_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getFileBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.line_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBytes(4, this.getConditionBytes());
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBytes(5, this.getSymbolPatternBytes());
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            try {
                if ((this.bitField0_ & 0x10) == 0x10) {
                    codedOutputStream.writeBytes(6, this.getModuleNameBytes());
                }
            }
            catch (IOException ex5) {
                throw a(ex5);
            }
            try {
                if ((this.bitField0_ & 0x20) == 0x20) {
                    codedOutputStream.writeUInt32(7, this.threadId_);
                }
            }
            catch (IOException ex6) {
                throw a(ex6);
            }
            try {
                if ((this.bitField0_ & 0x40) == 0x40) {
                    codedOutputStream.writeBool(8, this.regexp_);
                }
            }
            catch (IOException ex7) {
                throw a(ex7);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getFileBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.line_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBytesSize(4, this.getConditionBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBytesSize(5, this.getSymbolPatternBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                n += CodedOutputStream.computeBytesSize(6, this.getModuleNameBytes());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                n += CodedOutputStream.computeUInt32Size(7, this.threadId_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                n += CodedOutputStream.computeBoolSize(8, this.regexp_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AddBreakpoint_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(byteString);
        }
        
        public static AddBreakpoint_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(array);
        }
        
        public static AddBreakpoint_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Req parseFrom(final InputStream inputStream) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(inputStream);
        }
        
        public static AddBreakpoint_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AddBreakpoint_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static AddBreakpoint_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AddBreakpoint_Req addBreakpoint_Req) {
            return newBuilder().mergeFrom(addBreakpoint_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AddBreakpoint_Req.PARSER = (Parser<AddBreakpoint_Req>)new AbstractParser<AddBreakpoint_Req>() {
                public AddBreakpoint_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AddBreakpoint_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AddBreakpoint_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AddBreakpoint_ReqOrBuilder
        {
            private int bitField0_;
            private Object file_;
            private int line_;
            private Object condition_;
            private Object symbolPattern_;
            private Object moduleName_;
            private int threadId_;
            private boolean regexp_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AddBreakpoint_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AddBreakpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddBreakpoint_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.file_ = "";
                this.condition_ = "";
                this.symbolPattern_ = "";
                this.moduleName_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.file_ = "";
                this.condition_ = "";
                this.symbolPattern_ = "";
                this.moduleName_ = "";
                this.b();
            }
            
            private void b() {
                if (AddBreakpoint_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.file_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.line_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.condition_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.symbolPattern_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.moduleName_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.regexp_ = false;
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AddBreakpoint_Req_descriptor;
            }
            
            public AddBreakpoint_Req getDefaultInstanceForType() {
                return AddBreakpoint_Req.getDefaultInstance();
            }
            
            public AddBreakpoint_Req build() {
                final AddBreakpoint_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AddBreakpoint_Req buildPartial() {
                final AddBreakpoint_Req addBreakpoint_Req = new AddBreakpoint_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                addBreakpoint_Req.file_ = this.file_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                addBreakpoint_Req.line_ = this.line_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                addBreakpoint_Req.condition_ = this.condition_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                addBreakpoint_Req.symbolPattern_ = this.symbolPattern_;
                if ((bitField0_ & 0x10) == 0x10) {
                    n |= 0x10;
                }
                addBreakpoint_Req.moduleName_ = this.moduleName_;
                if ((bitField0_ & 0x20) == 0x20) {
                    n |= 0x20;
                }
                addBreakpoint_Req.threadId_ = this.threadId_;
                if ((bitField0_ & 0x40) == 0x40) {
                    n |= 0x40;
                }
                addBreakpoint_Req.regexp_ = this.regexp_;
                addBreakpoint_Req.bitField0_ = n;
                this.onBuilt();
                return addBreakpoint_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AddBreakpoint_Req) {
                        return this.mergeFrom((AddBreakpoint_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AddBreakpoint_Req addBreakpoint_Req) {
                try {
                    if (addBreakpoint_Req == AddBreakpoint_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (addBreakpoint_Req.hasFile()) {
                        this.bitField0_ |= 0x1;
                        this.file_ = addBreakpoint_Req.file_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (addBreakpoint_Req.hasLine()) {
                        this.setLine(addBreakpoint_Req.getLine());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (addBreakpoint_Req.hasCondition()) {
                        this.bitField0_ |= 0x4;
                        this.condition_ = addBreakpoint_Req.condition_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (addBreakpoint_Req.hasSymbolPattern()) {
                        this.bitField0_ |= 0x8;
                        this.symbolPattern_ = addBreakpoint_Req.symbolPattern_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                try {
                    if (addBreakpoint_Req.hasModuleName()) {
                        this.bitField0_ |= 0x10;
                        this.moduleName_ = addBreakpoint_Req.moduleName_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex6) {
                    throw b(ex6);
                }
                try {
                    if (addBreakpoint_Req.hasThreadId()) {
                        this.setThreadId(addBreakpoint_Req.getThreadId());
                    }
                }
                catch (NullPointerException ex7) {
                    throw b(ex7);
                }
                try {
                    if (addBreakpoint_Req.hasRegexp()) {
                        this.setRegexp(addBreakpoint_Req.getRegexp());
                    }
                }
                catch (NullPointerException ex8) {
                    throw b(ex8);
                }
                this.mergeUnknownFields(addBreakpoint_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AddBreakpoint_Req addBreakpoint_Req = null;
                try {
                    addBreakpoint_Req = (AddBreakpoint_Req)AddBreakpoint_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    addBreakpoint_Req = (AddBreakpoint_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (addBreakpoint_Req != null) {
                            this.mergeFrom(addBreakpoint_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasFile() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getFile() {
                final Object file_ = this.file_;
                if (!(file_ instanceof String)) {
                    return (String)(this.file_ = ((ByteString)file_).toStringUtf8());
                }
                return (String)file_;
            }
            
            public ByteString getFileBytes() {
                final Object file_ = this.file_;
                if (file_ instanceof String) {
                    return (ByteString)(this.file_ = ByteString.copyFromUtf8((String)file_));
                }
                return (ByteString)file_;
            }
            
            public Builder setFile(final String file_) {
                try {
                    if (file_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.file_ = file_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFile() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.file_ = AddBreakpoint_Req.getDefaultInstance().getFile();
                this.onChanged();
                return this;
            }
            
            public Builder setFileBytes(final ByteString file_) {
                try {
                    if (file_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.file_ = file_;
                this.onChanged();
                return this;
            }
            
            public boolean hasLine() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getLine() {
                return this.line_;
            }
            
            public Builder setLine(final int line_) {
                this.bitField0_ |= 0x2;
                this.line_ = line_;
                this.onChanged();
                return this;
            }
            
            public Builder clearLine() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.line_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCondition() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getCondition() {
                final Object condition_ = this.condition_;
                if (!(condition_ instanceof String)) {
                    return (String)(this.condition_ = ((ByteString)condition_).toStringUtf8());
                }
                return (String)condition_;
            }
            
            public ByteString getConditionBytes() {
                final Object condition_ = this.condition_;
                if (condition_ instanceof String) {
                    return (ByteString)(this.condition_ = ByteString.copyFromUtf8((String)condition_));
                }
                return (ByteString)condition_;
            }
            
            public Builder setCondition(final String condition_) {
                try {
                    if (condition_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.condition_ = condition_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCondition() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.condition_ = AddBreakpoint_Req.getDefaultInstance().getCondition();
                this.onChanged();
                return this;
            }
            
            public Builder setConditionBytes(final ByteString condition_) {
                try {
                    if (condition_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.condition_ = condition_;
                this.onChanged();
                return this;
            }
            
            public boolean hasSymbolPattern() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getSymbolPattern() {
                final Object symbolPattern_ = this.symbolPattern_;
                if (!(symbolPattern_ instanceof String)) {
                    return (String)(this.symbolPattern_ = ((ByteString)symbolPattern_).toStringUtf8());
                }
                return (String)symbolPattern_;
            }
            
            public ByteString getSymbolPatternBytes() {
                final Object symbolPattern_ = this.symbolPattern_;
                if (symbolPattern_ instanceof String) {
                    return (ByteString)(this.symbolPattern_ = ByteString.copyFromUtf8((String)symbolPattern_));
                }
                return (ByteString)symbolPattern_;
            }
            
            public Builder setSymbolPattern(final String symbolPattern_) {
                try {
                    if (symbolPattern_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.symbolPattern_ = symbolPattern_;
                this.onChanged();
                return this;
            }
            
            public Builder clearSymbolPattern() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.symbolPattern_ = AddBreakpoint_Req.getDefaultInstance().getSymbolPattern();
                this.onChanged();
                return this;
            }
            
            public Builder setSymbolPatternBytes(final ByteString symbolPattern_) {
                try {
                    if (symbolPattern_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.symbolPattern_ = symbolPattern_;
                this.onChanged();
                return this;
            }
            
            public boolean hasModuleName() {
                try {
                    if ((this.bitField0_ & 0x10) == 0x10) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getModuleName() {
                final Object moduleName_ = this.moduleName_;
                if (!(moduleName_ instanceof String)) {
                    return (String)(this.moduleName_ = ((ByteString)moduleName_).toStringUtf8());
                }
                return (String)moduleName_;
            }
            
            public ByteString getModuleNameBytes() {
                final Object moduleName_ = this.moduleName_;
                if (moduleName_ instanceof String) {
                    return (ByteString)(this.moduleName_ = ByteString.copyFromUtf8((String)moduleName_));
                }
                return (ByteString)moduleName_;
            }
            
            public Builder setModuleName(final String moduleName_) {
                try {
                    if (moduleName_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.moduleName_ = moduleName_;
                this.onChanged();
                return this;
            }
            
            public Builder clearModuleName() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.moduleName_ = AddBreakpoint_Req.getDefaultInstance().getModuleName();
                this.onChanged();
                return this;
            }
            
            public Builder setModuleNameBytes(final ByteString moduleName_) {
                try {
                    if (moduleName_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.moduleName_ = moduleName_;
                this.onChanged();
                return this;
            }
            
            public boolean hasThreadId() {
                try {
                    if ((this.bitField0_ & 0x20) == 0x20) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x20;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasRegexp() {
                try {
                    if ((this.bitField0_ & 0x40) == 0x40) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getRegexp() {
                return this.regexp_;
            }
            
            public Builder setRegexp(final boolean regexp_) {
                this.bitField0_ |= 0x40;
                this.regexp_ = regexp_;
                this.onChanged();
                return this;
            }
            
            public Builder clearRegexp() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.regexp_ = false;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class RemoveBreakpoint_Req extends GeneratedMessage implements RemoveBreakpoint_ReqOrBuilder
    {
        private static final RemoveBreakpoint_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<RemoveBreakpoint_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private RemoveBreakpoint_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private RemoveBreakpoint_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static RemoveBreakpoint_Req getDefaultInstance() {
            return RemoveBreakpoint_Req.defaultInstance;
        }
        
        public RemoveBreakpoint_Req getDefaultInstanceForType() {
            return RemoveBreakpoint_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private RemoveBreakpoint_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_RemoveBreakpoint_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_RemoveBreakpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveBreakpoint_Req.class, (Class)Builder.class);
        }
        
        public Parser<RemoveBreakpoint_Req> getParserForType() {
            return RemoveBreakpoint_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        private void a() {
            this.id_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static RemoveBreakpoint_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(byteString);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(array);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final InputStream inputStream) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(inputStream);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static RemoveBreakpoint_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static RemoveBreakpoint_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final RemoveBreakpoint_Req removeBreakpoint_Req) {
            return newBuilder().mergeFrom(removeBreakpoint_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            RemoveBreakpoint_Req.PARSER = (Parser<RemoveBreakpoint_Req>)new AbstractParser<RemoveBreakpoint_Req>() {
                public RemoveBreakpoint_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new RemoveBreakpoint_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new RemoveBreakpoint_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements RemoveBreakpoint_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_RemoveBreakpoint_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_RemoveBreakpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveBreakpoint_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (RemoveBreakpoint_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_RemoveBreakpoint_Req_descriptor;
            }
            
            public RemoveBreakpoint_Req getDefaultInstanceForType() {
                return RemoveBreakpoint_Req.getDefaultInstance();
            }
            
            public RemoveBreakpoint_Req build() {
                final RemoveBreakpoint_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public RemoveBreakpoint_Req buildPartial() {
                final RemoveBreakpoint_Req removeBreakpoint_Req = new RemoveBreakpoint_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                removeBreakpoint_Req.id_ = this.id_;
                removeBreakpoint_Req.bitField0_ = n;
                this.onBuilt();
                return removeBreakpoint_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof RemoveBreakpoint_Req) {
                    return this.mergeFrom((RemoveBreakpoint_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final RemoveBreakpoint_Req removeBreakpoint_Req) {
                if (removeBreakpoint_Req == RemoveBreakpoint_Req.getDefaultInstance()) {
                    return this;
                }
                if (removeBreakpoint_Req.hasId()) {
                    this.setId(removeBreakpoint_Req.getId());
                }
                this.mergeUnknownFields(removeBreakpoint_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                RemoveBreakpoint_Req removeBreakpoint_Req = null;
                try {
                    removeBreakpoint_Req = (RemoveBreakpoint_Req)RemoveBreakpoint_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    removeBreakpoint_Req = (RemoveBreakpoint_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (removeBreakpoint_Req != null) {
                            this.mergeFrom(removeBreakpoint_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class RemoveBreakpoint_Res extends GeneratedMessage implements RemoveBreakpoint_ResOrBuilder
    {
        private static final RemoveBreakpoint_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<RemoveBreakpoint_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private RemoveBreakpoint_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private RemoveBreakpoint_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static RemoveBreakpoint_Res getDefaultInstance() {
            return RemoveBreakpoint_Res.defaultInstance;
        }
        
        public RemoveBreakpoint_Res getDefaultInstanceForType() {
            return RemoveBreakpoint_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private RemoveBreakpoint_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_RemoveBreakpoint_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_RemoveBreakpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveBreakpoint_Res.class, (Class)Builder.class);
        }
        
        public Parser<RemoveBreakpoint_Res> getParserForType() {
            return RemoveBreakpoint_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static RemoveBreakpoint_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(byteString);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(array);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final InputStream inputStream) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(inputStream);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static RemoveBreakpoint_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static RemoveBreakpoint_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final RemoveBreakpoint_Res removeBreakpoint_Res) {
            return newBuilder().mergeFrom(removeBreakpoint_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            RemoveBreakpoint_Res.PARSER = (Parser<RemoveBreakpoint_Res>)new AbstractParser<RemoveBreakpoint_Res>() {
                public RemoveBreakpoint_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new RemoveBreakpoint_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new RemoveBreakpoint_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements RemoveBreakpoint_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_RemoveBreakpoint_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_RemoveBreakpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveBreakpoint_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (RemoveBreakpoint_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_RemoveBreakpoint_Res_descriptor;
            }
            
            public RemoveBreakpoint_Res getDefaultInstanceForType() {
                return RemoveBreakpoint_Res.getDefaultInstance();
            }
            
            public RemoveBreakpoint_Res build() {
                final RemoveBreakpoint_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public RemoveBreakpoint_Res buildPartial() {
                final RemoveBreakpoint_Res removeBreakpoint_Res = new RemoveBreakpoint_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            removeBreakpoint_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    removeBreakpoint_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                removeBreakpoint_Res.bitField0_ = n;
                this.onBuilt();
                return removeBreakpoint_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof RemoveBreakpoint_Res) {
                        return this.mergeFrom((RemoveBreakpoint_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final RemoveBreakpoint_Res removeBreakpoint_Res) {
                try {
                    if (removeBreakpoint_Res == RemoveBreakpoint_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (removeBreakpoint_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(removeBreakpoint_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(removeBreakpoint_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                RemoveBreakpoint_Res removeBreakpoint_Res = null;
                try {
                    removeBreakpoint_Res = (RemoveBreakpoint_Res)RemoveBreakpoint_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    removeBreakpoint_Res = (RemoveBreakpoint_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (removeBreakpoint_Res != null) {
                            this.mergeFrom(removeBreakpoint_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AddBreakpoint_Res extends GeneratedMessage implements AddBreakpoint_ResOrBuilder
    {
        private static final AddBreakpoint_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AddBreakpoint_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AddBreakpoint_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AddBreakpoint_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AddBreakpoint_Res getDefaultInstance() {
            return AddBreakpoint_Res.defaultInstance;
        }
        
        public AddBreakpoint_Res getDefaultInstanceForType() {
            return AddBreakpoint_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AddBreakpoint_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AddBreakpoint_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AddBreakpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddBreakpoint_Res.class, (Class)Builder.class);
        }
        
        public Parser<AddBreakpoint_Res> getParserForType() {
            return AddBreakpoint_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getId() {
            return this.id_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.id_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AddBreakpoint_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(byteString);
        }
        
        public static AddBreakpoint_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(array);
        }
        
        public static AddBreakpoint_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Res parseFrom(final InputStream inputStream) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(inputStream);
        }
        
        public static AddBreakpoint_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AddBreakpoint_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddBreakpoint_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static AddBreakpoint_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AddBreakpoint_Res addBreakpoint_Res) {
            return newBuilder().mergeFrom(addBreakpoint_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AddBreakpoint_Res.PARSER = (Parser<AddBreakpoint_Res>)new AbstractParser<AddBreakpoint_Res>() {
                public AddBreakpoint_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AddBreakpoint_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AddBreakpoint_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AddBreakpoint_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private int id_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AddBreakpoint_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AddBreakpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddBreakpoint_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (AddBreakpoint_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AddBreakpoint_Res_descriptor;
            }
            
            public AddBreakpoint_Res getDefaultInstanceForType() {
                return AddBreakpoint_Res.getDefaultInstance();
            }
            
            public AddBreakpoint_Res build() {
                final AddBreakpoint_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AddBreakpoint_Res buildPartial() {
                final AddBreakpoint_Res addBreakpoint_Res = new AddBreakpoint_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            addBreakpoint_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    addBreakpoint_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                addBreakpoint_Res.id_ = this.id_;
                addBreakpoint_Res.bitField0_ = n;
                this.onBuilt();
                return addBreakpoint_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AddBreakpoint_Res) {
                        return this.mergeFrom((AddBreakpoint_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AddBreakpoint_Res addBreakpoint_Res) {
                try {
                    if (addBreakpoint_Res == AddBreakpoint_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (addBreakpoint_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(addBreakpoint_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (addBreakpoint_Res.hasId()) {
                        this.setId(addBreakpoint_Res.getId());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(addBreakpoint_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AddBreakpoint_Res addBreakpoint_Res = null;
                try {
                    addBreakpoint_Res = (AddBreakpoint_Res)AddBreakpoint_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    addBreakpoint_Res = (AddBreakpoint_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (addBreakpoint_Res != null) {
                            this.mergeFrom(addBreakpoint_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasId() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x2;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class StepInto_Req extends GeneratedMessage implements StepInto_ReqOrBuilder
    {
        private static final StepInto_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepInto_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepInto_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepInto_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepInto_Req getDefaultInstance() {
            return StepInto_Req.defaultInstance;
        }
        
        public StepInto_Req getDefaultInstanceForType() {
            return StepInto_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepInto_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepInto_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepInto_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepInto_Req.class, (Class)Builder.class);
        }
        
        public Parser<StepInto_Req> getParserForType() {
            return StepInto_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        private void a() {
            this.threadId_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeUInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeUInt32Size(2, this.threadId_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepInto_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(byteString);
        }
        
        public static StepInto_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepInto_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(array);
        }
        
        public static StepInto_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepInto_Req parseFrom(final InputStream inputStream) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(inputStream);
        }
        
        public static StepInto_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepInto_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepInto_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepInto_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepInto_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Req)StepInto_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepInto_Req stepInto_Req) {
            return newBuilder().mergeFrom(stepInto_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepInto_Req.PARSER = (Parser<StepInto_Req>)new AbstractParser<StepInto_Req>() {
                public StepInto_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepInto_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepInto_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepInto_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepInto_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepInto_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepInto_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (StepInto_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepInto_Req_descriptor;
            }
            
            public StepInto_Req getDefaultInstanceForType() {
                return StepInto_Req.getDefaultInstance();
            }
            
            public StepInto_Req build() {
                final StepInto_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public StepInto_Req buildPartial() {
                final StepInto_Req stepInto_Req = new StepInto_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                stepInto_Req.threadId_ = this.threadId_;
                stepInto_Req.bitField0_ = n;
                this.onBuilt();
                return stepInto_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof StepInto_Req) {
                    return this.mergeFrom((StepInto_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepInto_Req stepInto_Req) {
                if (stepInto_Req == StepInto_Req.getDefaultInstance()) {
                    return this;
                }
                if (stepInto_Req.hasThreadId()) {
                    this.setThreadId(stepInto_Req.getThreadId());
                }
                this.mergeUnknownFields(stepInto_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasThreadId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepInto_Req stepInto_Req = null;
                try {
                    stepInto_Req = (StepInto_Req)StepInto_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepInto_Req = (StepInto_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepInto_Req != null) {
                            this.mergeFrom(stepInto_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class StepInto_Res extends GeneratedMessage implements StepInto_ResOrBuilder
    {
        private static final StepInto_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepInto_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepInto_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepInto_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepInto_Res getDefaultInstance() {
            return StepInto_Res.defaultInstance;
        }
        
        public StepInto_Res getDefaultInstanceForType() {
            return StepInto_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepInto_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepInto_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepInto_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepInto_Res.class, (Class)Builder.class);
        }
        
        public Parser<StepInto_Res> getParserForType() {
            return StepInto_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepInto_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(byteString);
        }
        
        public static StepInto_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepInto_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(array);
        }
        
        public static StepInto_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepInto_Res parseFrom(final InputStream inputStream) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(inputStream);
        }
        
        public static StepInto_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepInto_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepInto_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepInto_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepInto_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepInto_Res)StepInto_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepInto_Res stepInto_Res) {
            return newBuilder().mergeFrom(stepInto_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepInto_Res.PARSER = (Parser<StepInto_Res>)new AbstractParser<StepInto_Res>() {
                public StepInto_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepInto_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepInto_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepInto_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepInto_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepInto_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepInto_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (StepInto_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepInto_Res_descriptor;
            }
            
            public StepInto_Res getDefaultInstanceForType() {
                return StepInto_Res.getDefaultInstance();
            }
            
            public StepInto_Res build() {
                final StepInto_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public StepInto_Res buildPartial() {
                final StepInto_Res stepInto_Res = new StepInto_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            stepInto_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    stepInto_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                stepInto_Res.bitField0_ = n;
                this.onBuilt();
                return stepInto_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof StepInto_Res) {
                        return this.mergeFrom((StepInto_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepInto_Res stepInto_Res) {
                try {
                    if (stepInto_Res == StepInto_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (stepInto_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(stepInto_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(stepInto_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepInto_Res stepInto_Res = null;
                try {
                    stepInto_Res = (StepInto_Res)StepInto_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepInto_Res = (StepInto_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepInto_Res != null) {
                            this.mergeFrom(stepInto_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class StepOver_Req extends GeneratedMessage implements StepOver_ReqOrBuilder
    {
        private static final StepOver_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepOver_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepOver_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepOver_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepOver_Req getDefaultInstance() {
            return StepOver_Req.defaultInstance;
        }
        
        public StepOver_Req getDefaultInstanceForType() {
            return StepOver_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepOver_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepOver_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepOver_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOver_Req.class, (Class)Builder.class);
        }
        
        public Parser<StepOver_Req> getParserForType() {
            return StepOver_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        private void a() {
            this.threadId_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeUInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeUInt32Size(2, this.threadId_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepOver_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(byteString);
        }
        
        public static StepOver_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepOver_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(array);
        }
        
        public static StepOver_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepOver_Req parseFrom(final InputStream inputStream) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(inputStream);
        }
        
        public static StepOver_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOver_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepOver_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOver_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepOver_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Req)StepOver_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepOver_Req stepOver_Req) {
            return newBuilder().mergeFrom(stepOver_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepOver_Req.PARSER = (Parser<StepOver_Req>)new AbstractParser<StepOver_Req>() {
                public StepOver_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepOver_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepOver_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepOver_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepOver_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepOver_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOver_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (StepOver_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepOver_Req_descriptor;
            }
            
            public StepOver_Req getDefaultInstanceForType() {
                return StepOver_Req.getDefaultInstance();
            }
            
            public StepOver_Req build() {
                final StepOver_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public StepOver_Req buildPartial() {
                final StepOver_Req stepOver_Req = new StepOver_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                stepOver_Req.threadId_ = this.threadId_;
                stepOver_Req.bitField0_ = n;
                this.onBuilt();
                return stepOver_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof StepOver_Req) {
                    return this.mergeFrom((StepOver_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepOver_Req stepOver_Req) {
                if (stepOver_Req == StepOver_Req.getDefaultInstance()) {
                    return this;
                }
                if (stepOver_Req.hasThreadId()) {
                    this.setThreadId(stepOver_Req.getThreadId());
                }
                this.mergeUnknownFields(stepOver_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasThreadId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepOver_Req stepOver_Req = null;
                try {
                    stepOver_Req = (StepOver_Req)StepOver_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepOver_Req = (StepOver_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepOver_Req != null) {
                            this.mergeFrom(stepOver_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class StepOver_Res extends GeneratedMessage implements StepOver_ResOrBuilder
    {
        private static final StepOver_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepOver_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepOver_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepOver_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepOver_Res getDefaultInstance() {
            return StepOver_Res.defaultInstance;
        }
        
        public StepOver_Res getDefaultInstanceForType() {
            return StepOver_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepOver_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepOver_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepOver_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOver_Res.class, (Class)Builder.class);
        }
        
        public Parser<StepOver_Res> getParserForType() {
            return StepOver_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepOver_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(byteString);
        }
        
        public static StepOver_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepOver_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(array);
        }
        
        public static StepOver_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepOver_Res parseFrom(final InputStream inputStream) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(inputStream);
        }
        
        public static StepOver_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOver_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepOver_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOver_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepOver_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOver_Res)StepOver_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepOver_Res stepOver_Res) {
            return newBuilder().mergeFrom(stepOver_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepOver_Res.PARSER = (Parser<StepOver_Res>)new AbstractParser<StepOver_Res>() {
                public StepOver_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepOver_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepOver_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepOver_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepOver_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepOver_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOver_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.c();
            }
            
            private void c() {
                try {
                    if (StepOver_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepOver_Res_descriptor;
            }
            
            public StepOver_Res getDefaultInstanceForType() {
                return StepOver_Res.getDefaultInstance();
            }
            
            public StepOver_Res build() {
                final StepOver_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public StepOver_Res buildPartial() {
                final StepOver_Res stepOver_Res = new StepOver_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            stepOver_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    stepOver_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                stepOver_Res.bitField0_ = n;
                this.onBuilt();
                return stepOver_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof StepOver_Res) {
                        return this.mergeFrom((StepOver_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepOver_Res stepOver_Res) {
                try {
                    if (stepOver_Res == StepOver_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (stepOver_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(stepOver_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(stepOver_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepOver_Res stepOver_Res = null;
                try {
                    stepOver_Res = (StepOver_Res)StepOver_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepOver_Res = (StepOver_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepOver_Res != null) {
                            this.mergeFrom(stepOver_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class StepOut_Req extends GeneratedMessage implements StepOut_ReqOrBuilder
    {
        private static final StepOut_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepOut_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepOut_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepOut_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepOut_Req getDefaultInstance() {
            return StepOut_Req.defaultInstance;
        }
        
        public StepOut_Req getDefaultInstanceForType() {
            return StepOut_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepOut_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepOut_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepOut_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOut_Req.class, (Class)Builder.class);
        }
        
        public Parser<StepOut_Req> getParserForType() {
            return StepOut_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        private void a() {
            this.threadId_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeUInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeUInt32Size(2, this.threadId_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepOut_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(byteString);
        }
        
        public static StepOut_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepOut_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(array);
        }
        
        public static StepOut_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepOut_Req parseFrom(final InputStream inputStream) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(inputStream);
        }
        
        public static StepOut_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOut_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepOut_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOut_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepOut_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Req)StepOut_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepOut_Req stepOut_Req) {
            return newBuilder().mergeFrom(stepOut_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepOut_Req.PARSER = (Parser<StepOut_Req>)new AbstractParser<StepOut_Req>() {
                public StepOut_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepOut_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepOut_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepOut_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepOut_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepOut_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOut_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (StepOut_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepOut_Req_descriptor;
            }
            
            public StepOut_Req getDefaultInstanceForType() {
                return StepOut_Req.getDefaultInstance();
            }
            
            public StepOut_Req build() {
                final StepOut_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public StepOut_Req buildPartial() {
                final StepOut_Req stepOut_Req = new StepOut_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                stepOut_Req.threadId_ = this.threadId_;
                stepOut_Req.bitField0_ = n;
                this.onBuilt();
                return stepOut_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof StepOut_Req) {
                    return this.mergeFrom((StepOut_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepOut_Req stepOut_Req) {
                if (stepOut_Req == StepOut_Req.getDefaultInstance()) {
                    return this;
                }
                if (stepOut_Req.hasThreadId()) {
                    this.setThreadId(stepOut_Req.getThreadId());
                }
                this.mergeUnknownFields(stepOut_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasThreadId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepOut_Req stepOut_Req = null;
                try {
                    stepOut_Req = (StepOut_Req)StepOut_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepOut_Req = (StepOut_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepOut_Req != null) {
                            this.mergeFrom(stepOut_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class StepOut_Res extends GeneratedMessage implements StepOut_ResOrBuilder
    {
        private static final StepOut_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StepOut_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private StepOut_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StepOut_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StepOut_Res getDefaultInstance() {
            return StepOut_Res.defaultInstance;
        }
        
        public StepOut_Res getDefaultInstanceForType() {
            return StepOut_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StepOut_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_StepOut_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_StepOut_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOut_Res.class, (Class)Builder.class);
        }
        
        public Parser<StepOut_Res> getParserForType() {
            return StepOut_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static StepOut_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(byteString);
        }
        
        public static StepOut_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static StepOut_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(array);
        }
        
        public static StepOut_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static StepOut_Res parseFrom(final InputStream inputStream) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(inputStream);
        }
        
        public static StepOut_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOut_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static StepOut_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static StepOut_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static StepOut_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (StepOut_Res)StepOut_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StepOut_Res stepOut_Res) {
            return newBuilder().mergeFrom(stepOut_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            StepOut_Res.PARSER = (Parser<StepOut_Res>)new AbstractParser<StepOut_Res>() {
                public StepOut_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new StepOut_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new StepOut_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StepOut_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_StepOut_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_StepOut_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)StepOut_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (StepOut_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_StepOut_Res_descriptor;
            }
            
            public StepOut_Res getDefaultInstanceForType() {
                return StepOut_Res.getDefaultInstance();
            }
            
            public StepOut_Res build() {
                final StepOut_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public StepOut_Res buildPartial() {
                final StepOut_Res stepOut_Res = new StepOut_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            stepOut_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    stepOut_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                stepOut_Res.bitField0_ = n;
                this.onBuilt();
                return stepOut_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof StepOut_Res) {
                        return this.mergeFrom((StepOut_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final StepOut_Res stepOut_Res) {
                try {
                    if (stepOut_Res == StepOut_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (stepOut_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(stepOut_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(stepOut_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                StepOut_Res stepOut_Res = null;
                try {
                    stepOut_Res = (StepOut_Res)StepOut_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    stepOut_Res = (StepOut_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (stepOut_Res != null) {
                            this.mergeFrom(stepOut_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class EvaluateExpression_Req extends GeneratedMessage implements EvaluateExpression_ReqOrBuilder
    {
        private static final EvaluateExpression_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<EvaluateExpression_Req> PARSER;
        private int bitField0_;
        public static final int EXPRESSION_FIELD_NUMBER = 2;
        private Object expression_;
        public static final int THREAD_ID_FIELD_NUMBER = 3;
        private int threadId_;
        public static final int FRAME_INDEX_FIELD_NUMBER = 4;
        private int frameIndex_;
        public static final int LANGUAGE_FIELD_NUMBER = 5;
        private Model.Language language_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private EvaluateExpression_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private EvaluateExpression_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static EvaluateExpression_Req getDefaultInstance() {
            return EvaluateExpression_Req.defaultInstance;
        }
        
        public EvaluateExpression_Req getDefaultInstanceForType() {
            return EvaluateExpression_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private EvaluateExpression_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.expression_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.frameIndex_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 40: {
                            final int enum1 = codedInputStream.readEnum();
                            final Model.Language value = Model.Language.valueOf(enum1);
                            try {
                                if (value == null) {
                                    builder.mergeVarintField(5, enum1);
                                    continue;
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x8;
                            this.language_ = value;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_EvaluateExpression_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_EvaluateExpression_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EvaluateExpression_Req.class, (Class)Builder.class);
        }
        
        public Parser<EvaluateExpression_Req> getParserForType() {
            return EvaluateExpression_Req.PARSER;
        }
        
        public boolean hasExpression() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getExpression() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (String)expression_;
            }
            final ByteString byteString = (ByteString)expression_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.expression_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getExpressionBytes() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
            }
            return (ByteString)expression_;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        public boolean hasFrameIndex() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getFrameIndex() {
            return this.frameIndex_;
        }
        
        public boolean hasLanguage() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public Model.Language getLanguage() {
            return this.language_;
        }
        
        private void a() {
            this.expression_ = "";
            this.threadId_ = 0;
            this.frameIndex_ = 0;
            this.language_ = Model.Language.LanguageUnknown;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasExpression()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasFrameIndex()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getExpressionBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeUInt32(3, this.threadId_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.frameIndex_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeEnum(5, this.language_.getNumber());
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getExpressionBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeUInt32Size(3, this.threadId_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.frameIndex_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeEnumSize(5, this.language_.getNumber());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static EvaluateExpression_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(byteString);
        }
        
        public static EvaluateExpression_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(array);
        }
        
        public static EvaluateExpression_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Req parseFrom(final InputStream inputStream) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(inputStream);
        }
        
        public static EvaluateExpression_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static EvaluateExpression_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static EvaluateExpression_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final EvaluateExpression_Req evaluateExpression_Req) {
            return newBuilder().mergeFrom(evaluateExpression_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            EvaluateExpression_Req.PARSER = (Parser<EvaluateExpression_Req>)new AbstractParser<EvaluateExpression_Req>() {
                public EvaluateExpression_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new EvaluateExpression_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new EvaluateExpression_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements EvaluateExpression_ReqOrBuilder
        {
            private int bitField0_;
            private Object expression_;
            private int threadId_;
            private int frameIndex_;
            private Model.Language language_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_EvaluateExpression_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_EvaluateExpression_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EvaluateExpression_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.expression_ = "";
                this.language_ = Model.Language.LanguageUnknown;
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.expression_ = "";
                this.language_ = Model.Language.LanguageUnknown;
                this.b();
            }
            
            private void b() {
                if (EvaluateExpression_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.expression_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.frameIndex_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.language_ = Model.Language.LanguageUnknown;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_EvaluateExpression_Req_descriptor;
            }
            
            public EvaluateExpression_Req getDefaultInstanceForType() {
                return EvaluateExpression_Req.getDefaultInstance();
            }
            
            public EvaluateExpression_Req build() {
                final EvaluateExpression_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public EvaluateExpression_Req buildPartial() {
                final EvaluateExpression_Req evaluateExpression_Req = new EvaluateExpression_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                evaluateExpression_Req.expression_ = this.expression_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                evaluateExpression_Req.threadId_ = this.threadId_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                evaluateExpression_Req.frameIndex_ = this.frameIndex_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                evaluateExpression_Req.language_ = this.language_;
                evaluateExpression_Req.bitField0_ = n;
                this.onBuilt();
                return evaluateExpression_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof EvaluateExpression_Req) {
                        return this.mergeFrom((EvaluateExpression_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final EvaluateExpression_Req evaluateExpression_Req) {
                try {
                    if (evaluateExpression_Req == EvaluateExpression_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (evaluateExpression_Req.hasExpression()) {
                        this.bitField0_ |= 0x1;
                        this.expression_ = evaluateExpression_Req.expression_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (evaluateExpression_Req.hasThreadId()) {
                        this.setThreadId(evaluateExpression_Req.getThreadId());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (evaluateExpression_Req.hasFrameIndex()) {
                        this.setFrameIndex(evaluateExpression_Req.getFrameIndex());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (evaluateExpression_Req.hasLanguage()) {
                        this.setLanguage(evaluateExpression_Req.getLanguage());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                this.mergeUnknownFields(evaluateExpression_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasExpression()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasThreadId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasFrameIndex()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                EvaluateExpression_Req evaluateExpression_Req = null;
                try {
                    evaluateExpression_Req = (EvaluateExpression_Req)EvaluateExpression_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    evaluateExpression_Req = (EvaluateExpression_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (evaluateExpression_Req != null) {
                            this.mergeFrom(evaluateExpression_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasExpression() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getExpression() {
                final Object expression_ = this.expression_;
                if (!(expression_ instanceof String)) {
                    return (String)(this.expression_ = ((ByteString)expression_).toStringUtf8());
                }
                return (String)expression_;
            }
            
            public ByteString getExpressionBytes() {
                final Object expression_ = this.expression_;
                if (expression_ instanceof String) {
                    return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
                }
                return (ByteString)expression_;
            }
            
            public Builder setExpression(final String expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            public Builder clearExpression() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.expression_ = EvaluateExpression_Req.getDefaultInstance().getExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setExpressionBytes(final ByteString expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            public boolean hasThreadId() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x2;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasFrameIndex() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getFrameIndex() {
                return this.frameIndex_;
            }
            
            public Builder setFrameIndex(final int frameIndex_) {
                this.bitField0_ |= 0x4;
                this.frameIndex_ = frameIndex_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFrameIndex() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.frameIndex_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasLanguage() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Model.Language getLanguage() {
                return this.language_;
            }
            
            public Builder setLanguage(final Model.Language language_) {
                try {
                    if (language_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.language_ = language_;
                this.onChanged();
                return this;
            }
            
            public Builder clearLanguage() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.language_ = Model.Language.LanguageUnknown;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class EvaluateExpression_Res extends GeneratedMessage implements EvaluateExpression_ResOrBuilder
    {
        private static final EvaluateExpression_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<EvaluateExpression_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int RESULT_FIELD_NUMBER = 2;
        private Model.LLDBValue result_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private EvaluateExpression_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private EvaluateExpression_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static EvaluateExpression_Res getDefaultInstance() {
            return EvaluateExpression_Res.defaultInstance;
        }
        
        public EvaluateExpression_Res getDefaultInstanceForType() {
            return EvaluateExpression_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private EvaluateExpression_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            Model.LLDBValue.Builder builder3 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                builder3 = this.result_.toBuilder();
                            }
                            try {
                                this.result_ = (Model.LLDBValue)codedInputStream.readMessage((Parser)Model.LLDBValue.PARSER, extensionRegistryLite);
                                if (builder3 != null) {
                                    builder3.mergeFrom(this.result_);
                                    this.result_ = builder3.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex2) {
                                throw a((IOException)ex2);
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex3) {
                throw ex3.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex4) {
                throw new InvalidProtocolBufferException(ex4.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_EvaluateExpression_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_EvaluateExpression_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EvaluateExpression_Res.class, (Class)Builder.class);
        }
        
        public Parser<EvaluateExpression_Res> getParserForType() {
            return EvaluateExpression_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasResult() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public Model.LLDBValue getResult() {
            return this.result_;
        }
        
        public Model.LLDBValueOrBuilder getResultOrBuilder() {
            return this.result_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.result_ = Model.LLDBValue.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasResult() && !this.getResult().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.result_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.result_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static EvaluateExpression_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(byteString);
        }
        
        public static EvaluateExpression_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(array);
        }
        
        public static EvaluateExpression_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Res parseFrom(final InputStream inputStream) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(inputStream);
        }
        
        public static EvaluateExpression_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static EvaluateExpression_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static EvaluateExpression_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static EvaluateExpression_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return d();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final EvaluateExpression_Res evaluateExpression_Res) {
            return newBuilder().mergeFrom(evaluateExpression_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            EvaluateExpression_Res.PARSER = (Parser<EvaluateExpression_Res>)new AbstractParser<EvaluateExpression_Res>() {
                public EvaluateExpression_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new EvaluateExpression_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new EvaluateExpression_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements EvaluateExpression_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private Model.LLDBValue result_;
            private SingleFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> resultBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_EvaluateExpression_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_EvaluateExpression_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EvaluateExpression_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.result_ = Model.LLDBValue.getDefaultInstance();
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.result_ = Model.LLDBValue.getDefaultInstance();
                this.c();
            }
            
            private void c() {
                try {
                    if (EvaluateExpression_Res.alwaysUseFieldBuilders) {
                        this.a();
                        this.b();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder d() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0074: {
                    Label_0034: {
                        try {
                            super.clear();
                            if (this.commonResponseBuilder_ == null) {
                                this.commonResponse_ = CommonResponse.getDefaultInstance();
                                break Label_0034;
                            }
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        this.commonResponseBuilder_.clear();
                        try {
                            this.bitField0_ &= 0xFFFFFFFE;
                            if (this.resultBuilder_ == null) {
                                this.result_ = Model.LLDBValue.getDefaultInstance();
                                break Label_0074;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.resultBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return d().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_EvaluateExpression_Res_descriptor;
            }
            
            public EvaluateExpression_Res getDefaultInstanceForType() {
                return EvaluateExpression_Res.getDefaultInstance();
            }
            
            public EvaluateExpression_Res build() {
                final EvaluateExpression_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public EvaluateExpression_Res buildPartial() {
                final EvaluateExpression_Res evaluateExpression_Res = new EvaluateExpression_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            evaluateExpression_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    evaluateExpression_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                Label_0115: {
                    try {
                        if (this.resultBuilder_ == null) {
                            evaluateExpression_Res.result_ = this.result_;
                            break Label_0115;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                    evaluateExpression_Res.result_ = (Model.LLDBValue)this.resultBuilder_.build();
                }
                evaluateExpression_Res.bitField0_ = n;
                this.onBuilt();
                return evaluateExpression_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof EvaluateExpression_Res) {
                        return this.mergeFrom((EvaluateExpression_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final EvaluateExpression_Res evaluateExpression_Res) {
                try {
                    if (evaluateExpression_Res == EvaluateExpression_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (evaluateExpression_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(evaluateExpression_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (evaluateExpression_Res.hasResult()) {
                        this.mergeResult(evaluateExpression_Res.getResult());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(evaluateExpression_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasResult()) {
                        return true;
                    }
                    final Builder builder = this;
                    final Model.LLDBValue lldbValue = builder.getResult();
                    final boolean b = lldbValue.isInitialized();
                    if (!b) {
                        return false;
                    }
                    return true;
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    final Builder builder = this;
                    final Model.LLDBValue lldbValue = builder.getResult();
                    final boolean b = lldbValue.isInitialized();
                    if (!b) {
                        return false;
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                EvaluateExpression_Res evaluateExpression_Res = null;
                try {
                    evaluateExpression_Res = (EvaluateExpression_Res)EvaluateExpression_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    evaluateExpression_Res = (EvaluateExpression_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (evaluateExpression_Res != null) {
                            this.mergeFrom(evaluateExpression_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasResult() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Model.LLDBValue getResult() {
                try {
                    if (this.resultBuilder_ == null) {
                        return this.result_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValue)this.resultBuilder_.getMessage();
            }
            
            public Builder setResult(final Model.LLDBValue lldbValue) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.resultBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Model.LLDBValue lldbValue2 = lldbValue;
                                if (lldbValue2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Model.LLDBValue lldbValue2 = lldbValue;
                                if (lldbValue2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.result_ = lldbValue;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.resultBuilder_.setMessage((GeneratedMessage)lldbValue);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setResult(final Model.LLDBValue.Builder builder) {
                Label_0038: {
                    try {
                        if (this.resultBuilder_ == null) {
                            this.result_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.resultBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeResult(final Model.LLDBValue p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.resultBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    11: iconst_2       
                //    12: iand           
                //    13: iconst_2       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.result_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.result_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.result_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.result_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValue;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.resultBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    92: iconst_2       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearResult() {
                Label_0033: {
                    try {
                        if (this.resultBuilder_ == null) {
                            this.result_ = Model.LLDBValue.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.resultBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Model.LLDBValue.Builder getResultBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return (Model.LLDBValue.Builder)this.b().getBuilder();
            }
            
            public Model.LLDBValueOrBuilder getResultOrBuilder() {
                try {
                    if (this.resultBuilder_ != null) {
                        return (Model.LLDBValueOrBuilder)this.resultBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.result_;
            }
            
            private SingleFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> b() {
                try {
                    if (this.resultBuilder_ == null) {
                        this.resultBuilder_ = (SingleFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.result_, this.getParentForChildren(), this.isClean());
                        this.result_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.resultBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AddWatchpoint_Req extends GeneratedMessage implements AddWatchpoint_ReqOrBuilder
    {
        private static final AddWatchpoint_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AddWatchpoint_Req> PARSER;
        private int bitField0_;
        public static final int VALUE_ID_FIELD_NUMBER = 2;
        private int valueId_;
        public static final int TO_RESOLVE_LOCATION_FIELD_NUMBER = 3;
        private int toResolveLocation_;
        public static final int READ_FIELD_NUMBER = 4;
        private int read_;
        public static final int WRITE_FIELD_NUMBER = 5;
        private int write_;
        public static final int CONDITION_FIELD_NUMBER = 6;
        private Object condition_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AddWatchpoint_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AddWatchpoint_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AddWatchpoint_Req getDefaultInstance() {
            return AddWatchpoint_Req.defaultInstance;
        }
        
        public AddWatchpoint_Req getDefaultInstanceForType() {
            return AddWatchpoint_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AddWatchpoint_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.valueId_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.toResolveLocation_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.read_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x8;
                            this.write_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 50: {
                            this.bitField0_ |= 0x10;
                            this.condition_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AddWatchpoint_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AddWatchpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddWatchpoint_Req.class, (Class)Builder.class);
        }
        
        public Parser<AddWatchpoint_Req> getParserForType() {
            return AddWatchpoint_Req.PARSER;
        }
        
        public boolean hasValueId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getValueId() {
            return this.valueId_;
        }
        
        public boolean hasToResolveLocation() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getToResolveLocation() {
            return this.toResolveLocation_;
        }
        
        public boolean hasRead() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getRead() {
            return this.read_;
        }
        
        public boolean hasWrite() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public int getWrite() {
            return this.write_;
        }
        
        public boolean hasCondition() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        public String getCondition() {
            final Object condition_ = this.condition_;
            if (condition_ instanceof String) {
                return (String)condition_;
            }
            final ByteString byteString = (ByteString)condition_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.condition_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getConditionBytes() {
            final Object condition_ = this.condition_;
            if (condition_ instanceof String) {
                return (ByteString)(this.condition_ = ByteString.copyFromUtf8((String)condition_));
            }
            return (ByteString)condition_;
        }
        
        private void a() {
            this.valueId_ = 0;
            this.toResolveLocation_ = 0;
            this.read_ = 0;
            this.write_ = 0;
            this.condition_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasValueId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasToResolveLocation()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasRead()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasWrite()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.valueId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.toResolveLocation_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.read_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeInt32(5, this.write_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            try {
                if ((this.bitField0_ & 0x10) == 0x10) {
                    codedOutputStream.writeBytes(6, this.getConditionBytes());
                }
            }
            catch (IOException ex5) {
                throw a(ex5);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.valueId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.toResolveLocation_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.read_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeInt32Size(5, this.write_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                n += CodedOutputStream.computeBytesSize(6, this.getConditionBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AddWatchpoint_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(byteString);
        }
        
        public static AddWatchpoint_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(array);
        }
        
        public static AddWatchpoint_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Req parseFrom(final InputStream inputStream) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(inputStream);
        }
        
        public static AddWatchpoint_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AddWatchpoint_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static AddWatchpoint_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AddWatchpoint_Req addWatchpoint_Req) {
            return newBuilder().mergeFrom(addWatchpoint_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AddWatchpoint_Req.PARSER = (Parser<AddWatchpoint_Req>)new AbstractParser<AddWatchpoint_Req>() {
                public AddWatchpoint_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AddWatchpoint_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AddWatchpoint_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AddWatchpoint_ReqOrBuilder
        {
            private int bitField0_;
            private int valueId_;
            private int toResolveLocation_;
            private int read_;
            private int write_;
            private Object condition_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AddWatchpoint_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AddWatchpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddWatchpoint_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.condition_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.condition_ = "";
                this.b();
            }
            
            private void b() {
                if (AddWatchpoint_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.valueId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.toResolveLocation_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.read_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.write_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.condition_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AddWatchpoint_Req_descriptor;
            }
            
            public AddWatchpoint_Req getDefaultInstanceForType() {
                return AddWatchpoint_Req.getDefaultInstance();
            }
            
            public AddWatchpoint_Req build() {
                final AddWatchpoint_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AddWatchpoint_Req buildPartial() {
                final AddWatchpoint_Req addWatchpoint_Req = new AddWatchpoint_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                addWatchpoint_Req.valueId_ = this.valueId_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                addWatchpoint_Req.toResolveLocation_ = this.toResolveLocation_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                addWatchpoint_Req.read_ = this.read_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                addWatchpoint_Req.write_ = this.write_;
                if ((bitField0_ & 0x10) == 0x10) {
                    n |= 0x10;
                }
                addWatchpoint_Req.condition_ = this.condition_;
                addWatchpoint_Req.bitField0_ = n;
                this.onBuilt();
                return addWatchpoint_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AddWatchpoint_Req) {
                        return this.mergeFrom((AddWatchpoint_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AddWatchpoint_Req addWatchpoint_Req) {
                try {
                    if (addWatchpoint_Req == AddWatchpoint_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (addWatchpoint_Req.hasValueId()) {
                        this.setValueId(addWatchpoint_Req.getValueId());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (addWatchpoint_Req.hasToResolveLocation()) {
                        this.setToResolveLocation(addWatchpoint_Req.getToResolveLocation());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (addWatchpoint_Req.hasRead()) {
                        this.setRead(addWatchpoint_Req.getRead());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (addWatchpoint_Req.hasWrite()) {
                        this.setWrite(addWatchpoint_Req.getWrite());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                try {
                    if (addWatchpoint_Req.hasCondition()) {
                        this.bitField0_ |= 0x10;
                        this.condition_ = addWatchpoint_Req.condition_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex6) {
                    throw b(ex6);
                }
                this.mergeUnknownFields(addWatchpoint_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasValueId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasToResolveLocation()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasRead()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (!this.hasWrite()) {
                        return false;
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AddWatchpoint_Req addWatchpoint_Req = null;
                try {
                    addWatchpoint_Req = (AddWatchpoint_Req)AddWatchpoint_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    addWatchpoint_Req = (AddWatchpoint_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (addWatchpoint_Req != null) {
                            this.mergeFrom(addWatchpoint_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasValueId() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getValueId() {
                return this.valueId_;
            }
            
            public Builder setValueId(final int valueId_) {
                this.bitField0_ |= 0x1;
                this.valueId_ = valueId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearValueId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.valueId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasToResolveLocation() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getToResolveLocation() {
                return this.toResolveLocation_;
            }
            
            public Builder setToResolveLocation(final int toResolveLocation_) {
                this.bitField0_ |= 0x2;
                this.toResolveLocation_ = toResolveLocation_;
                this.onChanged();
                return this;
            }
            
            public Builder clearToResolveLocation() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.toResolveLocation_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasRead() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getRead() {
                return this.read_;
            }
            
            public Builder setRead(final int read_) {
                this.bitField0_ |= 0x4;
                this.read_ = read_;
                this.onChanged();
                return this;
            }
            
            public Builder clearRead() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.read_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasWrite() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getWrite() {
                return this.write_;
            }
            
            public Builder setWrite(final int write_) {
                this.bitField0_ |= 0x8;
                this.write_ = write_;
                this.onChanged();
                return this;
            }
            
            public Builder clearWrite() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.write_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCondition() {
                try {
                    if ((this.bitField0_ & 0x10) == 0x10) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getCondition() {
                final Object condition_ = this.condition_;
                if (!(condition_ instanceof String)) {
                    return (String)(this.condition_ = ((ByteString)condition_).toStringUtf8());
                }
                return (String)condition_;
            }
            
            public ByteString getConditionBytes() {
                final Object condition_ = this.condition_;
                if (condition_ instanceof String) {
                    return (ByteString)(this.condition_ = ByteString.copyFromUtf8((String)condition_));
                }
                return (ByteString)condition_;
            }
            
            public Builder setCondition(final String condition_) {
                try {
                    if (condition_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.condition_ = condition_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCondition() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.condition_ = AddWatchpoint_Req.getDefaultInstance().getCondition();
                this.onChanged();
                return this;
            }
            
            public Builder setConditionBytes(final ByteString condition_) {
                try {
                    if (condition_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x10;
                this.condition_ = condition_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class RemoveWatchpoint_Req extends GeneratedMessage implements RemoveWatchpoint_ReqOrBuilder
    {
        private static final RemoveWatchpoint_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<RemoveWatchpoint_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private RemoveWatchpoint_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private RemoveWatchpoint_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static RemoveWatchpoint_Req getDefaultInstance() {
            return RemoveWatchpoint_Req.defaultInstance;
        }
        
        public RemoveWatchpoint_Req getDefaultInstanceForType() {
            return RemoveWatchpoint_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private RemoveWatchpoint_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_RemoveWatchpoint_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_RemoveWatchpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveWatchpoint_Req.class, (Class)Builder.class);
        }
        
        public Parser<RemoveWatchpoint_Req> getParserForType() {
            return RemoveWatchpoint_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        private void a() {
            this.id_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static RemoveWatchpoint_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(byteString);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(array);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final InputStream inputStream) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(inputStream);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static RemoveWatchpoint_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static RemoveWatchpoint_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final RemoveWatchpoint_Req removeWatchpoint_Req) {
            return newBuilder().mergeFrom(removeWatchpoint_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            RemoveWatchpoint_Req.PARSER = (Parser<RemoveWatchpoint_Req>)new AbstractParser<RemoveWatchpoint_Req>() {
                public RemoveWatchpoint_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new RemoveWatchpoint_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new RemoveWatchpoint_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements RemoveWatchpoint_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_RemoveWatchpoint_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_RemoveWatchpoint_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveWatchpoint_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (RemoveWatchpoint_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_RemoveWatchpoint_Req_descriptor;
            }
            
            public RemoveWatchpoint_Req getDefaultInstanceForType() {
                return RemoveWatchpoint_Req.getDefaultInstance();
            }
            
            public RemoveWatchpoint_Req build() {
                final RemoveWatchpoint_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public RemoveWatchpoint_Req buildPartial() {
                final RemoveWatchpoint_Req removeWatchpoint_Req = new RemoveWatchpoint_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                removeWatchpoint_Req.id_ = this.id_;
                removeWatchpoint_Req.bitField0_ = n;
                this.onBuilt();
                return removeWatchpoint_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof RemoveWatchpoint_Req) {
                    return this.mergeFrom((RemoveWatchpoint_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final RemoveWatchpoint_Req removeWatchpoint_Req) {
                if (removeWatchpoint_Req == RemoveWatchpoint_Req.getDefaultInstance()) {
                    return this;
                }
                if (removeWatchpoint_Req.hasId()) {
                    this.setId(removeWatchpoint_Req.getId());
                }
                this.mergeUnknownFields(removeWatchpoint_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                RemoveWatchpoint_Req removeWatchpoint_Req = null;
                try {
                    removeWatchpoint_Req = (RemoveWatchpoint_Req)RemoveWatchpoint_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    removeWatchpoint_Req = (RemoveWatchpoint_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (removeWatchpoint_Req != null) {
                            this.mergeFrom(removeWatchpoint_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class RemoveWatchpoint_Res extends GeneratedMessage implements RemoveWatchpoint_ResOrBuilder
    {
        private static final RemoveWatchpoint_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<RemoveWatchpoint_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private RemoveWatchpoint_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private RemoveWatchpoint_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static RemoveWatchpoint_Res getDefaultInstance() {
            return RemoveWatchpoint_Res.defaultInstance;
        }
        
        public RemoveWatchpoint_Res getDefaultInstanceForType() {
            return RemoveWatchpoint_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private RemoveWatchpoint_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_RemoveWatchpoint_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_RemoveWatchpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveWatchpoint_Res.class, (Class)Builder.class);
        }
        
        public Parser<RemoveWatchpoint_Res> getParserForType() {
            return RemoveWatchpoint_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static RemoveWatchpoint_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(byteString);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(array);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final InputStream inputStream) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(inputStream);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static RemoveWatchpoint_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static RemoveWatchpoint_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final RemoveWatchpoint_Res removeWatchpoint_Res) {
            return newBuilder().mergeFrom(removeWatchpoint_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            RemoveWatchpoint_Res.PARSER = (Parser<RemoveWatchpoint_Res>)new AbstractParser<RemoveWatchpoint_Res>() {
                public RemoveWatchpoint_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new RemoveWatchpoint_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new RemoveWatchpoint_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements RemoveWatchpoint_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_RemoveWatchpoint_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_RemoveWatchpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)RemoveWatchpoint_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (RemoveWatchpoint_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_RemoveWatchpoint_Res_descriptor;
            }
            
            public RemoveWatchpoint_Res getDefaultInstanceForType() {
                return RemoveWatchpoint_Res.getDefaultInstance();
            }
            
            public RemoveWatchpoint_Res build() {
                final RemoveWatchpoint_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public RemoveWatchpoint_Res buildPartial() {
                final RemoveWatchpoint_Res removeWatchpoint_Res = new RemoveWatchpoint_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            removeWatchpoint_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    removeWatchpoint_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                removeWatchpoint_Res.bitField0_ = n;
                this.onBuilt();
                return removeWatchpoint_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof RemoveWatchpoint_Res) {
                        return this.mergeFrom((RemoveWatchpoint_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final RemoveWatchpoint_Res removeWatchpoint_Res) {
                try {
                    if (removeWatchpoint_Res == RemoveWatchpoint_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (removeWatchpoint_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(removeWatchpoint_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(removeWatchpoint_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                RemoveWatchpoint_Res removeWatchpoint_Res = null;
                try {
                    removeWatchpoint_Res = (RemoveWatchpoint_Res)RemoveWatchpoint_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    removeWatchpoint_Res = (RemoveWatchpoint_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (removeWatchpoint_Res != null) {
                            this.mergeFrom(removeWatchpoint_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class AddWatchpoint_Res extends GeneratedMessage implements AddWatchpoint_ResOrBuilder
    {
        private static final AddWatchpoint_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<AddWatchpoint_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int WATCHPOINT_ID_FIELD_NUMBER = 2;
        private int watchpointId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private AddWatchpoint_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private AddWatchpoint_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static AddWatchpoint_Res getDefaultInstance() {
            return AddWatchpoint_Res.defaultInstance;
        }
        
        public AddWatchpoint_Res getDefaultInstanceForType() {
            return AddWatchpoint_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private AddWatchpoint_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.watchpointId_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_AddWatchpoint_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_AddWatchpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddWatchpoint_Res.class, (Class)Builder.class);
        }
        
        public Parser<AddWatchpoint_Res> getParserForType() {
            return AddWatchpoint_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasWatchpointId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getWatchpointId() {
            return this.watchpointId_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.watchpointId_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasWatchpointId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(2, this.watchpointId_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(2, this.watchpointId_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static AddWatchpoint_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(byteString);
        }
        
        public static AddWatchpoint_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(array);
        }
        
        public static AddWatchpoint_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Res parseFrom(final InputStream inputStream) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(inputStream);
        }
        
        public static AddWatchpoint_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static AddWatchpoint_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static AddWatchpoint_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static AddWatchpoint_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final AddWatchpoint_Res addWatchpoint_Res) {
            return newBuilder().mergeFrom(addWatchpoint_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            AddWatchpoint_Res.PARSER = (Parser<AddWatchpoint_Res>)new AbstractParser<AddWatchpoint_Res>() {
                public AddWatchpoint_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new AddWatchpoint_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new AddWatchpoint_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements AddWatchpoint_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private int watchpointId_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_AddWatchpoint_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_AddWatchpoint_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)AddWatchpoint_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (AddWatchpoint_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.watchpointId_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_AddWatchpoint_Res_descriptor;
            }
            
            public AddWatchpoint_Res getDefaultInstanceForType() {
                return AddWatchpoint_Res.getDefaultInstance();
            }
            
            public AddWatchpoint_Res build() {
                final AddWatchpoint_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public AddWatchpoint_Res buildPartial() {
                final AddWatchpoint_Res addWatchpoint_Res = new AddWatchpoint_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            addWatchpoint_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    addWatchpoint_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                addWatchpoint_Res.watchpointId_ = this.watchpointId_;
                addWatchpoint_Res.bitField0_ = n;
                this.onBuilt();
                return addWatchpoint_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof AddWatchpoint_Res) {
                        return this.mergeFrom((AddWatchpoint_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final AddWatchpoint_Res addWatchpoint_Res) {
                try {
                    if (addWatchpoint_Res == AddWatchpoint_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (addWatchpoint_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(addWatchpoint_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (addWatchpoint_Res.hasWatchpointId()) {
                        this.setWatchpointId(addWatchpoint_Res.getWatchpointId());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(addWatchpoint_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasWatchpointId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                AddWatchpoint_Res addWatchpoint_Res = null;
                try {
                    addWatchpoint_Res = (AddWatchpoint_Res)AddWatchpoint_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    addWatchpoint_Res = (AddWatchpoint_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (addWatchpoint_Res != null) {
                            this.mergeFrom(addWatchpoint_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasWatchpointId() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getWatchpointId() {
                return this.watchpointId_;
            }
            
            public Builder setWatchpointId(final int watchpointId_) {
                this.bitField0_ |= 0x2;
                this.watchpointId_ = watchpointId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearWatchpointId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.watchpointId_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueChildren_Req extends GeneratedMessage implements GetValueChildren_ReqOrBuilder
    {
        private static final GetValueChildren_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueChildren_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        public static final int EXPRESSION_FIELD_NUMBER = 3;
        private Object expression_;
        public static final int OFFSET_FIELD_NUMBER = 4;
        private int offset_;
        public static final int COUNT_FIELD_NUMBER = 5;
        private int count_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueChildren_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueChildren_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueChildren_Req getDefaultInstance() {
            return GetValueChildren_Req.defaultInstance;
        }
        
        public GetValueChildren_Req getDefaultInstanceForType() {
            return GetValueChildren_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueChildren_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.expression_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.offset_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x8;
                            this.count_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueChildren_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueChildren_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueChildren_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetValueChildren_Req> getParserForType() {
            return GetValueChildren_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        public boolean hasExpression() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getExpression() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (String)expression_;
            }
            final ByteString byteString = (ByteString)expression_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.expression_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getExpressionBytes() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
            }
            return (ByteString)expression_;
        }
        
        public boolean hasOffset() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getOffset() {
            return this.offset_;
        }
        
        public boolean hasCount() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public int getCount() {
            return this.count_;
        }
        
        private void a() {
            this.id_ = 0;
            this.expression_ = "";
            this.offset_ = 0;
            this.count_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasOffset()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasCount()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getExpressionBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.offset_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeInt32(5, this.count_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getExpressionBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.offset_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeInt32Size(5, this.count_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueChildren_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetValueChildren_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueChildren_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(array);
        }
        
        public static GetValueChildren_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueChildren_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueChildren_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueChildren_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueChildren_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueChildren_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueChildren_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Req)GetValueChildren_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueChildren_Req getValueChildren_Req) {
            return newBuilder().mergeFrom(getValueChildren_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueChildren_Req.PARSER = (Parser<GetValueChildren_Req>)new AbstractParser<GetValueChildren_Req>() {
                public GetValueChildren_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueChildren_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueChildren_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueChildren_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            private Object expression_;
            private int offset_;
            private int count_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueChildren_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueChildren_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueChildren_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.expression_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.expression_ = "";
                this.b();
            }
            
            private void b() {
                if (GetValueChildren_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.expression_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.offset_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.count_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueChildren_Req_descriptor;
            }
            
            public GetValueChildren_Req getDefaultInstanceForType() {
                return GetValueChildren_Req.getDefaultInstance();
            }
            
            public GetValueChildren_Req build() {
                final GetValueChildren_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetValueChildren_Req buildPartial() {
                final GetValueChildren_Req getValueChildren_Req = new GetValueChildren_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getValueChildren_Req.id_ = this.id_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getValueChildren_Req.expression_ = this.expression_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                getValueChildren_Req.offset_ = this.offset_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                getValueChildren_Req.count_ = this.count_;
                getValueChildren_Req.bitField0_ = n;
                this.onBuilt();
                return getValueChildren_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetValueChildren_Req) {
                        return this.mergeFrom((GetValueChildren_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueChildren_Req getValueChildren_Req) {
                try {
                    if (getValueChildren_Req == GetValueChildren_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getValueChildren_Req.hasId()) {
                        this.setId(getValueChildren_Req.getId());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getValueChildren_Req.hasExpression()) {
                        this.bitField0_ |= 0x2;
                        this.expression_ = getValueChildren_Req.expression_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (getValueChildren_Req.hasOffset()) {
                        this.setOffset(getValueChildren_Req.getOffset());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (getValueChildren_Req.hasCount()) {
                        this.setCount(getValueChildren_Req.getCount());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                this.mergeUnknownFields(getValueChildren_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasOffset()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasCount()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueChildren_Req getValueChildren_Req = null;
                try {
                    getValueChildren_Req = (GetValueChildren_Req)GetValueChildren_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueChildren_Req = (GetValueChildren_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueChildren_Req != null) {
                            this.mergeFrom(getValueChildren_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasExpression() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getExpression() {
                final Object expression_ = this.expression_;
                if (!(expression_ instanceof String)) {
                    return (String)(this.expression_ = ((ByteString)expression_).toStringUtf8());
                }
                return (String)expression_;
            }
            
            public ByteString getExpressionBytes() {
                final Object expression_ = this.expression_;
                if (expression_ instanceof String) {
                    return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
                }
                return (ByteString)expression_;
            }
            
            public Builder setExpression(final String expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            public Builder clearExpression() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.expression_ = GetValueChildren_Req.getDefaultInstance().getExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setExpressionBytes(final ByteString expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            public boolean hasOffset() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getOffset() {
                return this.offset_;
            }
            
            public Builder setOffset(final int offset_) {
                this.bitField0_ |= 0x4;
                this.offset_ = offset_;
                this.onChanged();
                return this;
            }
            
            public Builder clearOffset() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.offset_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCount() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getCount() {
                return this.count_;
            }
            
            public Builder setCount(final int count_) {
                this.bitField0_ |= 0x8;
                this.count_ = count_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCount() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.count_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetArraySlice_Req extends GeneratedMessage implements GetArraySlice_ReqOrBuilder
    {
        private static final GetArraySlice_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetArraySlice_Req> PARSER;
        private int bitField0_;
        public static final int VALUE_ID_FIELD_NUMBER = 2;
        private int valueId_;
        public static final int OFFSET_FIELD_NUMBER = 3;
        private int offset_;
        public static final int COUNT_FIELD_NUMBER = 4;
        private int count_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetArraySlice_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetArraySlice_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetArraySlice_Req getDefaultInstance() {
            return GetArraySlice_Req.defaultInstance;
        }
        
        public GetArraySlice_Req getDefaultInstanceForType() {
            return GetArraySlice_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetArraySlice_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.valueId_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.offset_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.count_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetArraySlice_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetArraySlice_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetArraySlice_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetArraySlice_Req> getParserForType() {
            return GetArraySlice_Req.PARSER;
        }
        
        public boolean hasValueId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getValueId() {
            return this.valueId_;
        }
        
        public boolean hasOffset() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getOffset() {
            return this.offset_;
        }
        
        public boolean hasCount() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getCount() {
            return this.count_;
        }
        
        private void a() {
            this.valueId_ = 0;
            this.offset_ = 0;
            this.count_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasValueId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasOffset()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasCount()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.valueId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.offset_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.count_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.valueId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.offset_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.count_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetArraySlice_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetArraySlice_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetArraySlice_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(array);
        }
        
        public static GetArraySlice_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetArraySlice_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetArraySlice_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetArraySlice_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetArraySlice_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetArraySlice_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetArraySlice_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Req)GetArraySlice_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetArraySlice_Req getArraySlice_Req) {
            return newBuilder().mergeFrom(getArraySlice_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetArraySlice_Req.PARSER = (Parser<GetArraySlice_Req>)new AbstractParser<GetArraySlice_Req>() {
                public GetArraySlice_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetArraySlice_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetArraySlice_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetArraySlice_ReqOrBuilder
        {
            private int bitField0_;
            private int valueId_;
            private int offset_;
            private int count_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetArraySlice_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetArraySlice_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetArraySlice_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (GetArraySlice_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.valueId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.offset_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.count_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetArraySlice_Req_descriptor;
            }
            
            public GetArraySlice_Req getDefaultInstanceForType() {
                return GetArraySlice_Req.getDefaultInstance();
            }
            
            public GetArraySlice_Req build() {
                final GetArraySlice_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetArraySlice_Req buildPartial() {
                final GetArraySlice_Req getArraySlice_Req = new GetArraySlice_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getArraySlice_Req.valueId_ = this.valueId_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getArraySlice_Req.offset_ = this.offset_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                getArraySlice_Req.count_ = this.count_;
                getArraySlice_Req.bitField0_ = n;
                this.onBuilt();
                return getArraySlice_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetArraySlice_Req) {
                    return this.mergeFrom((GetArraySlice_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetArraySlice_Req getArraySlice_Req) {
                if (getArraySlice_Req == GetArraySlice_Req.getDefaultInstance()) {
                    return this;
                }
                if (getArraySlice_Req.hasValueId()) {
                    this.setValueId(getArraySlice_Req.getValueId());
                }
                if (getArraySlice_Req.hasOffset()) {
                    this.setOffset(getArraySlice_Req.getOffset());
                }
                if (getArraySlice_Req.hasCount()) {
                    this.setCount(getArraySlice_Req.getCount());
                }
                this.mergeUnknownFields(getArraySlice_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasValueId() && this.hasOffset() && this.hasCount();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetArraySlice_Req getArraySlice_Req = null;
                try {
                    getArraySlice_Req = (GetArraySlice_Req)GetArraySlice_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getArraySlice_Req = (GetArraySlice_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getArraySlice_Req != null) {
                            this.mergeFrom(getArraySlice_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasValueId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getValueId() {
                return this.valueId_;
            }
            
            public Builder setValueId(final int valueId_) {
                this.bitField0_ |= 0x1;
                this.valueId_ = valueId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearValueId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.valueId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasOffset() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            public int getOffset() {
                return this.offset_;
            }
            
            public Builder setOffset(final int offset_) {
                this.bitField0_ |= 0x2;
                this.offset_ = offset_;
                this.onChanged();
                return this;
            }
            
            public Builder clearOffset() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.offset_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCount() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            public int getCount() {
                return this.count_;
            }
            
            public Builder setCount(final int count_) {
                this.bitField0_ |= 0x4;
                this.count_ = count_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCount() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.count_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetArraySlice_Res extends GeneratedMessage implements GetArraySlice_ResOrBuilder
    {
        private static final GetArraySlice_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetArraySlice_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private List<Model.LLDBValue> value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetArraySlice_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetArraySlice_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetArraySlice_Res getDefaultInstance() {
            return GetArraySlice_Res.defaultInstance;
        }
        
        public GetArraySlice_Res getDefaultInstanceForType() {
            return GetArraySlice_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetArraySlice_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.value_ = new ArrayList<Model.LLDBValue>();
                                n |= 0x2;
                            }
                            this.value_.add((Model.LLDBValue)codedInputStream.readMessage((Parser)Model.LLDBValue.PARSER, extensionRegistryLite));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetArraySlice_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetArraySlice_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetArraySlice_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetArraySlice_Res> getParserForType() {
            return GetArraySlice_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<Model.LLDBValue> getValueList() {
            return this.value_;
        }
        
        public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
            return this.value_;
        }
        
        public int getValueCount() {
            return this.value_.size();
        }
        
        public Model.LLDBValue getValue(final int n) {
            return this.value_.get(n);
        }
        
        public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
            return this.value_.get(n);
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.value_ = Collections.emptyList();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < this.getValueCount(); ++i) {
                if (!this.getValue(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.value_.size()) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.value_.get(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            for (int i = 0; i < this.value_.size(); ++i) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_.get(i));
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetArraySlice_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetArraySlice_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetArraySlice_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(array);
        }
        
        public static GetArraySlice_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetArraySlice_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetArraySlice_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetArraySlice_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetArraySlice_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetArraySlice_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetArraySlice_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetArraySlice_Res)GetArraySlice_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetArraySlice_Res getArraySlice_Res) {
            return newBuilder().mergeFrom(getArraySlice_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetArraySlice_Res.PARSER = (Parser<GetArraySlice_Res>)new AbstractParser<GetArraySlice_Res>() {
                public GetArraySlice_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetArraySlice_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetArraySlice_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetArraySlice_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private List<Model.LLDBValue> value_;
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> valueBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetArraySlice_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetArraySlice_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetArraySlice_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.c();
            }
            
            private void c() {
                try {
                    if (GetArraySlice_Res.alwaysUseFieldBuilders) {
                        this.e();
                        this.d();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                    try {
                        this.bitField0_ &= 0xFFFFFFFE;
                        if (this.valueBuilder_ == null) {
                            this.value_ = Collections.emptyList();
                            this.bitField0_ &= 0xFFFFFFFD;
                            return this;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetArraySlice_Res_descriptor;
            }
            
            public GetArraySlice_Res getDefaultInstanceForType() {
                return GetArraySlice_Res.getDefaultInstance();
            }
            
            public GetArraySlice_Res build() {
                final GetArraySlice_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetArraySlice_Res buildPartial() {
                final GetArraySlice_Res getArraySlice_Res = new GetArraySlice_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0143: {
                    Label_0131: {
                        Label_0090: {
                            Label_0066: {
                                try {
                                    if (this.commonResponseBuilder_ == null) {
                                        getArraySlice_Res.commonResponse_ = this.commonResponse_;
                                        break Label_0066;
                                    }
                                }
                                catch (NullPointerException ex) {
                                    throw b(ex);
                                }
                                getArraySlice_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                                try {
                                    if (this.valueBuilder_ != null) {
                                        break Label_0131;
                                    }
                                    final Builder builder = this;
                                    final int n2 = builder.bitField0_;
                                    final int n3 = 2;
                                    final int n4 = n2 & n3;
                                    final int n5 = 2;
                                    if (n4 == n5) {
                                        break Label_0090;
                                    }
                                    break Label_0090;
                                }
                                catch (NullPointerException ex2) {
                                    throw b(ex2);
                                }
                            }
                            try {
                                final Builder builder = this;
                                final int n2 = builder.bitField0_;
                                final int n3 = 2;
                                final int n4 = n2 & n3;
                                final int n5 = 2;
                                if (n4 == n5) {
                                    this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                                    this.bitField0_ &= 0xFFFFFFFD;
                                }
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                        }
                        getArraySlice_Res.value_ = this.value_;
                        break Label_0143;
                    }
                    getArraySlice_Res.value_ = (List<Model.LLDBValue>)this.valueBuilder_.build();
                }
                getArraySlice_Res.bitField0_ = n;
                this.onBuilt();
                return getArraySlice_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetArraySlice_Res) {
                        return this.mergeFrom((GetArraySlice_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetArraySlice_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_1        
                //     1: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //     4: if_acmpne       13
                //     7: aload_0        
                //     8: areturn        
                //     9: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    12: athrow         
                //    13: aload_1        
                //    14: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.hasCommonResponse:()Z
                //    17: ifeq            36
                //    20: aload_0        
                //    21: aload_1        
                //    22: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.getCommonResponse:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    25: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.mergeCommonResponse:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder;
                //    28: pop            
                //    29: goto            36
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    35: athrow         
                //    36: aload_0        
                //    37: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //    40: ifnonnull       132
                //    43: aload_1        
                //    44: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //    47: invokeinterface java/util/List.isEmpty:()Z
                //    52: ifne            236
                //    55: goto            62
                //    58: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    61: athrow         
                //    62: aload_0        
                //    63: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.value_:Ljava/util/List;
                //    66: invokeinterface java/util/List.isEmpty:()Z
                //    71: ifeq            107
                //    74: goto            81
                //    77: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    80: athrow         
                //    81: aload_0        
                //    82: aload_1        
                //    83: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //    86: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.value_:Ljava/util/List;
                //    89: aload_0        
                //    90: aload_0        
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //    94: bipush          -3
                //    96: iand           
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //   100: goto            125
                //   103: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   106: athrow         
                //   107: aload_0        
                //   108: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:()V
                //   111: aload_0        
                //   112: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.value_:Ljava/util/List;
                //   115: aload_1        
                //   116: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //   119: invokeinterface java/util/List.addAll:(Ljava/util/Collection;)Z
                //   124: pop            
                //   125: aload_0        
                //   126: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.onChanged:()V
                //   129: goto            236
                //   132: aload_1        
                //   133: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //   136: invokeinterface java/util/List.isEmpty:()Z
                //   141: ifne            236
                //   144: aload_0        
                //   145: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   148: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.isEmpty:()Z
                //   151: ifeq            224
                //   154: goto            161
                //   157: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   160: athrow         
                //   161: aload_0        
                //   162: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   165: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.dispose:()V
                //   168: aload_0        
                //   169: aconst_null    
                //   170: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   173: aload_0        
                //   174: aload_1        
                //   175: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //   178: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.value_:Ljava/util/List;
                //   181: aload_0        
                //   182: aload_0        
                //   183: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //   186: bipush          -3
                //   188: iand           
                //   189: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //   192: aload_0        
                //   193: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38800:()Z
                //   196: ifeq            217
                //   199: goto            206
                //   202: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   205: athrow         
                //   206: aload_0        
                //   207: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.d:()Lcom/google/protobuf/RepeatedFieldBuilder;
                //   210: goto            218
                //   213: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   216: athrow         
                //   217: aconst_null    
                //   218: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   221: goto            236
                //   224: aload_0        
                //   225: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   228: aload_1        
                //   229: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.access$38600:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Ljava/util/List;
                //   232: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.addAllMessages:(Ljava/lang/Iterable;)Lcom/google/protobuf/RepeatedFieldBuilder;
                //   235: pop            
                //   236: aload_0        
                //   237: aload_1        
                //   238: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.getUnknownFields:()Lcom/google/protobuf/UnknownFieldSet;
                //   241: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.mergeUnknownFields:(Lcom/google/protobuf/UnknownFieldSet;)Lcom/google/protobuf/GeneratedMessage$Builder;
                //   244: pop            
                //   245: aload_0        
                //   246: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      9      9      13     Ljava/lang/NullPointerException;
                //  13     29     32     36     Ljava/lang/NullPointerException;
                //  36     55     58     62     Ljava/lang/NullPointerException;
                //  43     74     77     81     Ljava/lang/NullPointerException;
                //  62     103    103    107    Ljava/lang/NullPointerException;
                //  132    154    157    161    Ljava/lang/NullPointerException;
                //  144    199    202    206    Ljava/lang/NullPointerException;
                //  161    213    213    217    Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0062:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                int n = 0;
                while (true) {
                    Label_0063: {
                        try {
                            if (n >= this.getValueCount()) {
                                break;
                            }
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                            break Label_0063;
                        }
                        catch (NullPointerException ex3) {
                            throw b(ex3);
                        }
                        try {
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex4) {
                            throw b(ex4);
                        }
                    }
                    ++n;
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetArraySlice_Res getArraySlice_Res = null;
                try {
                    getArraySlice_Res = (GetArraySlice_Res)GetArraySlice_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getArraySlice_Res = (GetArraySlice_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getArraySlice_Res != null) {
                            this.mergeFrom(getArraySlice_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.e().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> e() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void b() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.value_ = new ArrayList<Model.LLDBValue>(this.value_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<Model.LLDBValue> getValueList() {
                try {
                    if (this.valueBuilder_ == null) {
                        return Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (List<Model.LLDBValue>)this.valueBuilder_.getMessageList();
            }
            
            public int getValueCount() {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.size();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valueBuilder_.getCount();
            }
            
            public Model.LLDBValue getValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValue)this.valueBuilder_.getMessage(n);
            }
            
            public Builder setValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0053: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0053;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.set(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder setValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.set(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.add(lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage((GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.add(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.add(builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage((GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.add(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addAllValue(final Iterable<? extends Model.LLDBValue> iterable) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.value_);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addAllMessages((Iterable)iterable);
                return this;
            }
            
            public Builder clearValue() {
                try {
                    if (this.valueBuilder_ == null) {
                        this.value_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder removeValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.remove(n);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.remove(n);
                return this;
            }
            
            public Model.LLDBValue.Builder getValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.d().getBuilder(n);
            }
            
            public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValueOrBuilder)this.valueBuilder_.getMessageOrBuilder(n);
            }
            
            public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
                try {
                    if (this.valueBuilder_ != null) {
                        return (List<? extends Model.LLDBValueOrBuilder>)this.valueBuilder_.getMessageOrBuilderList();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return Collections.unmodifiableList((List<? extends Model.LLDBValueOrBuilder>)this.value_);
            }
            
            public Model.LLDBValue.Builder addValueBuilder() {
                return (Model.LLDBValue.Builder)this.d().addBuilder((GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public Model.LLDBValue.Builder addValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.d().addBuilder(n, (GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public List<Model.LLDBValue.Builder> getValueBuilderList() {
                return (List<Model.LLDBValue.Builder>)this.d().getBuilderList();
            }
            
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> d() {
                Builder builder = null;
                RepeatedFieldBuilder valueBuilder_ = null;
                List<Model.LLDBValue> list = null;
                boolean b = false;
                Label_0042: {
                    Label_0033: {
                        try {
                            if (this.valueBuilder_ != null) {
                                return this.valueBuilder_;
                            }
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                break Label_0033;
                            }
                            break Label_0033;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                b = true;
                                break Label_0042;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    b = false;
                }
                new RepeatedFieldBuilder((List)list, b, this.getParentForChildren(), this.isClean());
                builder.valueBuilder_ = (RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder>)valueBuilder_;
                this.value_ = null;
                return this.valueBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueData_Req extends GeneratedMessage implements GetValueData_ReqOrBuilder
    {
        private static final GetValueData_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueData_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        public static final int MAX_DESCRIPTION_LENGTH_FIELD_NUMBER = 3;
        private int maxDescriptionLength_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueData_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueData_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueData_Req getDefaultInstance() {
            return GetValueData_Req.defaultInstance;
        }
        
        public GetValueData_Req getDefaultInstanceForType() {
            return GetValueData_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueData_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.maxDescriptionLength_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueData_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueData_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueData_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetValueData_Req> getParserForType() {
            return GetValueData_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        public boolean hasMaxDescriptionLength() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getMaxDescriptionLength() {
            return this.maxDescriptionLength_;
        }
        
        private void a() {
            this.id_ = 0;
            this.maxDescriptionLength_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasMaxDescriptionLength()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.maxDescriptionLength_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.maxDescriptionLength_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueData_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetValueData_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueData_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(array);
        }
        
        public static GetValueData_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueData_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueData_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueData_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueData_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueData_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueData_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Req)GetValueData_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueData_Req getValueData_Req) {
            return newBuilder().mergeFrom(getValueData_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueData_Req.PARSER = (Parser<GetValueData_Req>)new AbstractParser<GetValueData_Req>() {
                public GetValueData_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueData_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueData_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueData_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            private int maxDescriptionLength_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueData_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueData_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueData_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (GetValueData_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.maxDescriptionLength_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueData_Req_descriptor;
            }
            
            public GetValueData_Req getDefaultInstanceForType() {
                return GetValueData_Req.getDefaultInstance();
            }
            
            public GetValueData_Req build() {
                final GetValueData_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetValueData_Req buildPartial() {
                final GetValueData_Req getValueData_Req = new GetValueData_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getValueData_Req.id_ = this.id_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getValueData_Req.maxDescriptionLength_ = this.maxDescriptionLength_;
                getValueData_Req.bitField0_ = n;
                this.onBuilt();
                return getValueData_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetValueData_Req) {
                    return this.mergeFrom((GetValueData_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueData_Req getValueData_Req) {
                if (getValueData_Req == GetValueData_Req.getDefaultInstance()) {
                    return this;
                }
                if (getValueData_Req.hasId()) {
                    this.setId(getValueData_Req.getId());
                }
                if (getValueData_Req.hasMaxDescriptionLength()) {
                    this.setMaxDescriptionLength(getValueData_Req.getMaxDescriptionLength());
                }
                this.mergeUnknownFields(getValueData_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasId() && this.hasMaxDescriptionLength();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueData_Req getValueData_Req = null;
                try {
                    getValueData_Req = (GetValueData_Req)GetValueData_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueData_Req = (GetValueData_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueData_Req != null) {
                            this.mergeFrom(getValueData_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasMaxDescriptionLength() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            public int getMaxDescriptionLength() {
                return this.maxDescriptionLength_;
            }
            
            public Builder setMaxDescriptionLength(final int maxDescriptionLength_) {
                this.bitField0_ |= 0x2;
                this.maxDescriptionLength_ = maxDescriptionLength_;
                this.onChanged();
                return this;
            }
            
            public Builder clearMaxDescriptionLength() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.maxDescriptionLength_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueData_Res extends GeneratedMessage implements GetValueData_ResOrBuilder
    {
        private static final GetValueData_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueData_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private Model.LLDBValueData value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueData_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueData_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueData_Res getDefaultInstance() {
            return GetValueData_Res.defaultInstance;
        }
        
        public GetValueData_Res getDefaultInstanceForType() {
            return GetValueData_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueData_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            Model.LLDBValueData.Builder builder3 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                builder3 = this.value_.toBuilder();
                            }
                            try {
                                this.value_ = (Model.LLDBValueData)codedInputStream.readMessage((Parser)Model.LLDBValueData.PARSER, extensionRegistryLite);
                                if (builder3 != null) {
                                    builder3.mergeFrom(this.value_);
                                    this.value_ = builder3.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex2) {
                                throw a((IOException)ex2);
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex3) {
                throw ex3.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex4) {
                throw new InvalidProtocolBufferException(ex4.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueData_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueData_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueData_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetValueData_Res> getParserForType() {
            return GetValueData_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasValue() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public Model.LLDBValueData getValue() {
            return this.value_;
        }
        
        public Model.LLDBValueDataOrBuilder getValueOrBuilder() {
            return this.value_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.value_ = Model.LLDBValueData.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasValue() && !this.getValue().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.value_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueData_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetValueData_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueData_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(array);
        }
        
        public static GetValueData_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueData_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueData_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueData_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueData_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueData_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueData_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueData_Res)GetValueData_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return d();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueData_Res getValueData_Res) {
            return newBuilder().mergeFrom(getValueData_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueData_Res.PARSER = (Parser<GetValueData_Res>)new AbstractParser<GetValueData_Res>() {
                public GetValueData_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueData_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueData_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueData_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private Model.LLDBValueData value_;
            private SingleFieldBuilder<Model.LLDBValueData, Model.LLDBValueData.Builder, Model.LLDBValueDataOrBuilder> valueBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueData_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueData_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueData_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Model.LLDBValueData.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Model.LLDBValueData.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (GetValueData_Res.alwaysUseFieldBuilders) {
                        this.b();
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder d() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0074: {
                    Label_0034: {
                        try {
                            super.clear();
                            if (this.commonResponseBuilder_ == null) {
                                this.commonResponse_ = CommonResponse.getDefaultInstance();
                                break Label_0034;
                            }
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        this.commonResponseBuilder_.clear();
                        try {
                            this.bitField0_ &= 0xFFFFFFFE;
                            if (this.valueBuilder_ == null) {
                                this.value_ = Model.LLDBValueData.getDefaultInstance();
                                break Label_0074;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.valueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return d().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueData_Res_descriptor;
            }
            
            public GetValueData_Res getDefaultInstanceForType() {
                return GetValueData_Res.getDefaultInstance();
            }
            
            public GetValueData_Res build() {
                final GetValueData_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetValueData_Res buildPartial() {
                final GetValueData_Res getValueData_Res = new GetValueData_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            getValueData_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    getValueData_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                Label_0115: {
                    try {
                        if (this.valueBuilder_ == null) {
                            getValueData_Res.value_ = this.value_;
                            break Label_0115;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                    getValueData_Res.value_ = (Model.LLDBValueData)this.valueBuilder_.build();
                }
                getValueData_Res.bitField0_ = n;
                this.onBuilt();
                return getValueData_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetValueData_Res) {
                        return this.mergeFrom((GetValueData_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueData_Res getValueData_Res) {
                try {
                    if (getValueData_Res == GetValueData_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getValueData_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(getValueData_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getValueData_Res.hasValue()) {
                        this.mergeValue(getValueData_Res.getValue());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(getValueData_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasValue()) {
                        return true;
                    }
                    final Builder builder = this;
                    final Model.LLDBValueData lldbValueData = builder.getValue();
                    final boolean b = lldbValueData.isInitialized();
                    if (!b) {
                        return false;
                    }
                    return true;
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    final Builder builder = this;
                    final Model.LLDBValueData lldbValueData = builder.getValue();
                    final boolean b = lldbValueData.isInitialized();
                    if (!b) {
                        return false;
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueData_Res getValueData_Res = null;
                try {
                    getValueData_Res = (GetValueData_Res)GetValueData_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueData_Res = (GetValueData_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueData_Res != null) {
                            this.mergeFrom(getValueData_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.b().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> b() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasValue() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Model.LLDBValueData getValue() {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValueData)this.valueBuilder_.getMessage();
            }
            
            public Builder setValue(final Model.LLDBValueData lldbValueData) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.valueBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Model.LLDBValueData lldbValueData2 = lldbValueData;
                                if (lldbValueData2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Model.LLDBValueData lldbValueData2 = lldbValueData;
                                if (lldbValueData2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.value_ = lldbValueData;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.valueBuilder_.setMessage((GeneratedMessage)lldbValueData);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setValue(final Model.LLDBValueData.Builder builder) {
                Label_0038: {
                    try {
                        if (this.valueBuilder_ == null) {
                            this.value_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valueBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeValue(final Model.LLDBValueData p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.valueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    11: iconst_2       
                //    12: iand           
                //    13: iconst_2       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.value_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.value_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.value_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.value_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Model$LLDBValueData;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.valueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    92: iconst_2       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearValue() {
                Label_0033: {
                    try {
                        if (this.valueBuilder_ == null) {
                            this.value_ = Model.LLDBValueData.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Model.LLDBValueData.Builder getValueBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return (Model.LLDBValueData.Builder)this.c().getBuilder();
            }
            
            public Model.LLDBValueDataOrBuilder getValueOrBuilder() {
                try {
                    if (this.valueBuilder_ != null) {
                        return (Model.LLDBValueDataOrBuilder)this.valueBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.value_;
            }
            
            private SingleFieldBuilder<Model.LLDBValueData, Model.LLDBValueData.Builder, Model.LLDBValueDataOrBuilder> c() {
                try {
                    if (this.valueBuilder_ == null) {
                        this.valueBuilder_ = (SingleFieldBuilder<Model.LLDBValueData, Model.LLDBValueData.Builder, Model.LLDBValueDataOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.value_, this.getParentForChildren(), this.isClean());
                        this.value_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valueBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueDescription_Req extends GeneratedMessage implements GetValueDescription_ReqOrBuilder
    {
        private static final GetValueDescription_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueDescription_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        public static final int MAX_LENGTH_FIELD_NUMBER = 3;
        private int maxLength_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueDescription_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueDescription_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueDescription_Req getDefaultInstance() {
            return GetValueDescription_Req.defaultInstance;
        }
        
        public GetValueDescription_Req getDefaultInstanceForType() {
            return GetValueDescription_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueDescription_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.maxLength_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueDescription_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueDescription_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueDescription_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetValueDescription_Req> getParserForType() {
            return GetValueDescription_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        public boolean hasMaxLength() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getMaxLength() {
            return this.maxLength_;
        }
        
        private void a() {
            this.id_ = 0;
            this.maxLength_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasMaxLength()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.maxLength_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.maxLength_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueDescription_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetValueDescription_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueDescription_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(array);
        }
        
        public static GetValueDescription_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueDescription_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueDescription_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueDescription_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueDescription_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueDescription_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueDescription_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Req)GetValueDescription_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueDescription_Req getValueDescription_Req) {
            return newBuilder().mergeFrom(getValueDescription_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueDescription_Req.PARSER = (Parser<GetValueDescription_Req>)new AbstractParser<GetValueDescription_Req>() {
                public GetValueDescription_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueDescription_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueDescription_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueDescription_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            private int maxLength_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueDescription_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueDescription_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueDescription_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (GetValueDescription_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.maxLength_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueDescription_Req_descriptor;
            }
            
            public GetValueDescription_Req getDefaultInstanceForType() {
                return GetValueDescription_Req.getDefaultInstance();
            }
            
            public GetValueDescription_Req build() {
                final GetValueDescription_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetValueDescription_Req buildPartial() {
                final GetValueDescription_Req getValueDescription_Req = new GetValueDescription_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getValueDescription_Req.id_ = this.id_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getValueDescription_Req.maxLength_ = this.maxLength_;
                getValueDescription_Req.bitField0_ = n;
                this.onBuilt();
                return getValueDescription_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetValueDescription_Req) {
                    return this.mergeFrom((GetValueDescription_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueDescription_Req getValueDescription_Req) {
                if (getValueDescription_Req == GetValueDescription_Req.getDefaultInstance()) {
                    return this;
                }
                if (getValueDescription_Req.hasId()) {
                    this.setId(getValueDescription_Req.getId());
                }
                if (getValueDescription_Req.hasMaxLength()) {
                    this.setMaxLength(getValueDescription_Req.getMaxLength());
                }
                this.mergeUnknownFields(getValueDescription_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasId() && this.hasMaxLength();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueDescription_Req getValueDescription_Req = null;
                try {
                    getValueDescription_Req = (GetValueDescription_Req)GetValueDescription_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueDescription_Req = (GetValueDescription_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueDescription_Req != null) {
                            this.mergeFrom(getValueDescription_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasMaxLength() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            public int getMaxLength() {
                return this.maxLength_;
            }
            
            public Builder setMaxLength(final int maxLength_) {
                this.bitField0_ |= 0x2;
                this.maxLength_ = maxLength_;
                this.onChanged();
                return this;
            }
            
            public Builder clearMaxLength() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.maxLength_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueDescription_Res extends GeneratedMessage implements GetValueDescription_ResOrBuilder
    {
        private static final GetValueDescription_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueDescription_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int DESCRIPTION_FIELD_NUMBER = 2;
        private Object description_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueDescription_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueDescription_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueDescription_Res getDefaultInstance() {
            return GetValueDescription_Res.defaultInstance;
        }
        
        public GetValueDescription_Res getDefaultInstanceForType() {
            return GetValueDescription_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueDescription_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.description_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueDescription_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueDescription_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueDescription_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetValueDescription_Res> getParserForType() {
            return GetValueDescription_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasDescription() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getDescription() {
            final Object description_ = this.description_;
            if (description_ instanceof String) {
                return (String)description_;
            }
            final ByteString byteString = (ByteString)description_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.description_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getDescriptionBytes() {
            final Object description_ = this.description_;
            if (description_ instanceof String) {
                return (ByteString)(this.description_ = ByteString.copyFromUtf8((String)description_));
            }
            return (ByteString)description_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.description_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(2, this.getDescriptionBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(2, this.getDescriptionBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueDescription_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetValueDescription_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueDescription_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(array);
        }
        
        public static GetValueDescription_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueDescription_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueDescription_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueDescription_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueDescription_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueDescription_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueDescription_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueDescription_Res)GetValueDescription_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueDescription_Res getValueDescription_Res) {
            return newBuilder().mergeFrom(getValueDescription_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueDescription_Res.PARSER = (Parser<GetValueDescription_Res>)new AbstractParser<GetValueDescription_Res>() {
                public GetValueDescription_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueDescription_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueDescription_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueDescription_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private Object description_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueDescription_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueDescription_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueDescription_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.description_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.description_ = "";
                this.a();
            }
            
            private void a() {
                try {
                    if (GetValueDescription_Res.alwaysUseFieldBuilders) {
                        this.b();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.description_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueDescription_Res_descriptor;
            }
            
            public GetValueDescription_Res getDefaultInstanceForType() {
                return GetValueDescription_Res.getDefaultInstance();
            }
            
            public GetValueDescription_Res build() {
                final GetValueDescription_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetValueDescription_Res buildPartial() {
                final GetValueDescription_Res getValueDescription_Res = new GetValueDescription_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            getValueDescription_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    getValueDescription_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getValueDescription_Res.description_ = this.description_;
                getValueDescription_Res.bitField0_ = n;
                this.onBuilt();
                return getValueDescription_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetValueDescription_Res) {
                        return this.mergeFrom((GetValueDescription_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueDescription_Res getValueDescription_Res) {
                try {
                    if (getValueDescription_Res == GetValueDescription_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getValueDescription_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(getValueDescription_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getValueDescription_Res.hasDescription()) {
                        this.bitField0_ |= 0x2;
                        this.description_ = getValueDescription_Res.description_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(getValueDescription_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueDescription_Res getValueDescription_Res = null;
                try {
                    getValueDescription_Res = (GetValueDescription_Res)GetValueDescription_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueDescription_Res = (GetValueDescription_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueDescription_Res != null) {
                            this.mergeFrom(getValueDescription_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.b().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> b() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasDescription() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getDescription() {
                final Object description_ = this.description_;
                if (!(description_ instanceof String)) {
                    return (String)(this.description_ = ((ByteString)description_).toStringUtf8());
                }
                return (String)description_;
            }
            
            public ByteString getDescriptionBytes() {
                final Object description_ = this.description_;
                if (description_ instanceof String) {
                    return (ByteString)(this.description_ = ByteString.copyFromUtf8((String)description_));
                }
                return (ByteString)description_;
            }
            
            public Builder setDescription(final String description_) {
                try {
                    if (description_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.description_ = description_;
                this.onChanged();
                return this;
            }
            
            public Builder clearDescription() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.description_ = GetValueDescription_Res.getDefaultInstance().getDescription();
                this.onChanged();
                return this;
            }
            
            public Builder setDescriptionBytes(final ByteString description_) {
                try {
                    if (description_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.description_ = description_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetChildrenCount_Req extends GeneratedMessage implements GetChildrenCount_ReqOrBuilder
    {
        private static final GetChildrenCount_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetChildrenCount_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        public static final int EXPRESSION_FIELD_NUMBER = 3;
        private Object expression_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetChildrenCount_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetChildrenCount_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetChildrenCount_Req getDefaultInstance() {
            return GetChildrenCount_Req.defaultInstance;
        }
        
        public GetChildrenCount_Req getDefaultInstanceForType() {
            return GetChildrenCount_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetChildrenCount_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.expression_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetChildrenCount_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetChildrenCount_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetChildrenCount_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetChildrenCount_Req> getParserForType() {
            return GetChildrenCount_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        public boolean hasExpression() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getExpression() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (String)expression_;
            }
            final ByteString byteString = (ByteString)expression_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.expression_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getExpressionBytes() {
            final Object expression_ = this.expression_;
            if (expression_ instanceof String) {
                return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
            }
            return (ByteString)expression_;
        }
        
        private void a() {
            this.id_ = 0;
            this.expression_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getExpressionBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getExpressionBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetChildrenCount_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetChildrenCount_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(array);
        }
        
        public static GetChildrenCount_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetChildrenCount_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetChildrenCount_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetChildrenCount_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetChildrenCount_Req getChildrenCount_Req) {
            return newBuilder().mergeFrom(getChildrenCount_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetChildrenCount_Req.PARSER = (Parser<GetChildrenCount_Req>)new AbstractParser<GetChildrenCount_Req>() {
                public GetChildrenCount_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetChildrenCount_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetChildrenCount_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetChildrenCount_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            private Object expression_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetChildrenCount_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetChildrenCount_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetChildrenCount_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.expression_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.expression_ = "";
                this.b();
            }
            
            private void b() {
                if (GetChildrenCount_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.expression_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetChildrenCount_Req_descriptor;
            }
            
            public GetChildrenCount_Req getDefaultInstanceForType() {
                return GetChildrenCount_Req.getDefaultInstance();
            }
            
            public GetChildrenCount_Req build() {
                final GetChildrenCount_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetChildrenCount_Req buildPartial() {
                final GetChildrenCount_Req getChildrenCount_Req = new GetChildrenCount_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getChildrenCount_Req.id_ = this.id_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getChildrenCount_Req.expression_ = this.expression_;
                getChildrenCount_Req.bitField0_ = n;
                this.onBuilt();
                return getChildrenCount_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetChildrenCount_Req) {
                        return this.mergeFrom((GetChildrenCount_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetChildrenCount_Req getChildrenCount_Req) {
                try {
                    if (getChildrenCount_Req == GetChildrenCount_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getChildrenCount_Req.hasId()) {
                        this.setId(getChildrenCount_Req.getId());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getChildrenCount_Req.hasExpression()) {
                        this.bitField0_ |= 0x2;
                        this.expression_ = getChildrenCount_Req.expression_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(getChildrenCount_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetChildrenCount_Req getChildrenCount_Req = null;
                try {
                    getChildrenCount_Req = (GetChildrenCount_Req)GetChildrenCount_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getChildrenCount_Req = (GetChildrenCount_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getChildrenCount_Req != null) {
                            this.mergeFrom(getChildrenCount_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasExpression() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getExpression() {
                final Object expression_ = this.expression_;
                if (!(expression_ instanceof String)) {
                    return (String)(this.expression_ = ((ByteString)expression_).toStringUtf8());
                }
                return (String)expression_;
            }
            
            public ByteString getExpressionBytes() {
                final Object expression_ = this.expression_;
                if (expression_ instanceof String) {
                    return (ByteString)(this.expression_ = ByteString.copyFromUtf8((String)expression_));
                }
                return (ByteString)expression_;
            }
            
            public Builder setExpression(final String expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            public Builder clearExpression() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.expression_ = GetChildrenCount_Req.getDefaultInstance().getExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setExpressionBytes(final ByteString expression_) {
                try {
                    if (expression_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.expression_ = expression_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetChildrenCount_Res extends GeneratedMessage implements GetChildrenCount_ResOrBuilder
    {
        private static final GetChildrenCount_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetChildrenCount_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int COUNT_FIELD_NUMBER = 2;
        private int count_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetChildrenCount_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetChildrenCount_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetChildrenCount_Res getDefaultInstance() {
            return GetChildrenCount_Res.defaultInstance;
        }
        
        public GetChildrenCount_Res getDefaultInstanceForType() {
            return GetChildrenCount_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetChildrenCount_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.count_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetChildrenCount_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetChildrenCount_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetChildrenCount_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetChildrenCount_Res> getParserForType() {
            return GetChildrenCount_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasCount() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getCount() {
            return this.count_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.count_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasCount()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(2, this.count_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(2, this.count_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetChildrenCount_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetChildrenCount_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(array);
        }
        
        public static GetChildrenCount_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetChildrenCount_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetChildrenCount_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetChildrenCount_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetChildrenCount_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetChildrenCount_Res getChildrenCount_Res) {
            return newBuilder().mergeFrom(getChildrenCount_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetChildrenCount_Res.PARSER = (Parser<GetChildrenCount_Res>)new AbstractParser<GetChildrenCount_Res>() {
                public GetChildrenCount_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetChildrenCount_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetChildrenCount_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetChildrenCount_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private int count_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetChildrenCount_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetChildrenCount_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetChildrenCount_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (GetChildrenCount_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.count_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetChildrenCount_Res_descriptor;
            }
            
            public GetChildrenCount_Res getDefaultInstanceForType() {
                return GetChildrenCount_Res.getDefaultInstance();
            }
            
            public GetChildrenCount_Res build() {
                final GetChildrenCount_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetChildrenCount_Res buildPartial() {
                final GetChildrenCount_Res getChildrenCount_Res = new GetChildrenCount_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            getChildrenCount_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    getChildrenCount_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getChildrenCount_Res.count_ = this.count_;
                getChildrenCount_Res.bitField0_ = n;
                this.onBuilt();
                return getChildrenCount_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetChildrenCount_Res) {
                        return this.mergeFrom((GetChildrenCount_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetChildrenCount_Res getChildrenCount_Res) {
                try {
                    if (getChildrenCount_Res == GetChildrenCount_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getChildrenCount_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(getChildrenCount_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getChildrenCount_Res.hasCount()) {
                        this.setCount(getChildrenCount_Res.getCount());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(getChildrenCount_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasCount()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetChildrenCount_Res getChildrenCount_Res = null;
                try {
                    getChildrenCount_Res = (GetChildrenCount_Res)GetChildrenCount_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getChildrenCount_Res = (GetChildrenCount_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getChildrenCount_Res != null) {
                            this.mergeFrom(getChildrenCount_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasCount() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getCount() {
                return this.count_;
            }
            
            public Builder setCount(final int count_) {
                this.bitField0_ |= 0x2;
                this.count_ = count_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCount() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.count_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueChildren_Res extends GeneratedMessage implements GetValueChildren_ResOrBuilder
    {
        private static final GetValueChildren_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueChildren_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private List<Model.LLDBValue> value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueChildren_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueChildren_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueChildren_Res getDefaultInstance() {
            return GetValueChildren_Res.defaultInstance;
        }
        
        public GetValueChildren_Res getDefaultInstanceForType() {
            return GetValueChildren_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueChildren_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.value_ = new ArrayList<Model.LLDBValue>();
                                n |= 0x2;
                            }
                            this.value_.add((Model.LLDBValue)codedInputStream.readMessage((Parser)Model.LLDBValue.PARSER, extensionRegistryLite));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueChildren_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueChildren_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueChildren_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetValueChildren_Res> getParserForType() {
            return GetValueChildren_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<Model.LLDBValue> getValueList() {
            return this.value_;
        }
        
        public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
            return this.value_;
        }
        
        public int getValueCount() {
            return this.value_.size();
        }
        
        public Model.LLDBValue getValue(final int n) {
            return this.value_.get(n);
        }
        
        public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
            return this.value_.get(n);
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.value_ = Collections.emptyList();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < this.getValueCount(); ++i) {
                if (!this.getValue(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.value_.size()) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.value_.get(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            for (int i = 0; i < this.value_.size(); ++i) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_.get(i));
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueChildren_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetValueChildren_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueChildren_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(array);
        }
        
        public static GetValueChildren_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueChildren_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueChildren_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueChildren_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueChildren_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueChildren_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueChildren_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueChildren_Res)GetValueChildren_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return d();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueChildren_Res getValueChildren_Res) {
            return newBuilder().mergeFrom(getValueChildren_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueChildren_Res.PARSER = (Parser<GetValueChildren_Res>)new AbstractParser<GetValueChildren_Res>() {
                public GetValueChildren_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueChildren_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueChildren_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueChildren_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private List<Model.LLDBValue> value_;
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> valueBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueChildren_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueChildren_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueChildren_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.a();
            }
            
            private void a() {
                try {
                    if (GetValueChildren_Res.alwaysUseFieldBuilders) {
                        this.b();
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder d() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                    try {
                        this.bitField0_ &= 0xFFFFFFFE;
                        if (this.valueBuilder_ == null) {
                            this.value_ = Collections.emptyList();
                            this.bitField0_ &= 0xFFFFFFFD;
                            return this;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder clone() {
                return d().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueChildren_Res_descriptor;
            }
            
            public GetValueChildren_Res getDefaultInstanceForType() {
                return GetValueChildren_Res.getDefaultInstance();
            }
            
            public GetValueChildren_Res build() {
                final GetValueChildren_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetValueChildren_Res buildPartial() {
                final GetValueChildren_Res getValueChildren_Res = new GetValueChildren_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0143: {
                    Label_0131: {
                        Label_0090: {
                            Label_0066: {
                                try {
                                    if (this.commonResponseBuilder_ == null) {
                                        getValueChildren_Res.commonResponse_ = this.commonResponse_;
                                        break Label_0066;
                                    }
                                }
                                catch (NullPointerException ex) {
                                    throw b(ex);
                                }
                                getValueChildren_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                                try {
                                    if (this.valueBuilder_ != null) {
                                        break Label_0131;
                                    }
                                    final Builder builder = this;
                                    final int n2 = builder.bitField0_;
                                    final int n3 = 2;
                                    final int n4 = n2 & n3;
                                    final int n5 = 2;
                                    if (n4 == n5) {
                                        break Label_0090;
                                    }
                                    break Label_0090;
                                }
                                catch (NullPointerException ex2) {
                                    throw b(ex2);
                                }
                            }
                            try {
                                final Builder builder = this;
                                final int n2 = builder.bitField0_;
                                final int n3 = 2;
                                final int n4 = n2 & n3;
                                final int n5 = 2;
                                if (n4 == n5) {
                                    this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                                    this.bitField0_ &= 0xFFFFFFFD;
                                }
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                        }
                        getValueChildren_Res.value_ = this.value_;
                        break Label_0143;
                    }
                    getValueChildren_Res.value_ = (List<Model.LLDBValue>)this.valueBuilder_.build();
                }
                getValueChildren_Res.bitField0_ = n;
                this.onBuilt();
                return getValueChildren_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetValueChildren_Res) {
                        return this.mergeFrom((GetValueChildren_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueChildren_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_1        
                //     1: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //     4: if_acmpne       13
                //     7: aload_0        
                //     8: areturn        
                //     9: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    12: athrow         
                //    13: aload_1        
                //    14: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.hasCommonResponse:()Z
                //    17: ifeq            36
                //    20: aload_0        
                //    21: aload_1        
                //    22: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.getCommonResponse:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    25: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.mergeCommonResponse:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder;
                //    28: pop            
                //    29: goto            36
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    35: athrow         
                //    36: aload_0        
                //    37: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //    40: ifnonnull       132
                //    43: aload_1        
                //    44: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //    47: invokeinterface java/util/List.isEmpty:()Z
                //    52: ifne            236
                //    55: goto            62
                //    58: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    61: athrow         
                //    62: aload_0        
                //    63: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.value_:Ljava/util/List;
                //    66: invokeinterface java/util/List.isEmpty:()Z
                //    71: ifeq            107
                //    74: goto            81
                //    77: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    80: athrow         
                //    81: aload_0        
                //    82: aload_1        
                //    83: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //    86: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.value_:Ljava/util/List;
                //    89: aload_0        
                //    90: aload_0        
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //    94: bipush          -3
                //    96: iand           
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //   100: goto            125
                //   103: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   106: athrow         
                //   107: aload_0        
                //   108: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.e:()V
                //   111: aload_0        
                //   112: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.value_:Ljava/util/List;
                //   115: aload_1        
                //   116: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //   119: invokeinterface java/util/List.addAll:(Ljava/util/Collection;)Z
                //   124: pop            
                //   125: aload_0        
                //   126: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.onChanged:()V
                //   129: goto            236
                //   132: aload_1        
                //   133: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //   136: invokeinterface java/util/List.isEmpty:()Z
                //   141: ifne            236
                //   144: aload_0        
                //   145: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   148: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.isEmpty:()Z
                //   151: ifeq            224
                //   154: goto            161
                //   157: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   160: athrow         
                //   161: aload_0        
                //   162: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   165: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.dispose:()V
                //   168: aload_0        
                //   169: aconst_null    
                //   170: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   173: aload_0        
                //   174: aload_1        
                //   175: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //   178: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.value_:Ljava/util/List;
                //   181: aload_0        
                //   182: aload_0        
                //   183: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //   186: bipush          -3
                //   188: iand           
                //   189: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //   192: aload_0        
                //   193: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45900:()Z
                //   196: ifeq            217
                //   199: goto            206
                //   202: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   205: athrow         
                //   206: aload_0        
                //   207: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.c:()Lcom/google/protobuf/RepeatedFieldBuilder;
                //   210: goto            218
                //   213: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   216: athrow         
                //   217: aconst_null    
                //   218: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   221: goto            236
                //   224: aload_0        
                //   225: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   228: aload_1        
                //   229: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.access$45700:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Ljava/util/List;
                //   232: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.addAllMessages:(Ljava/lang/Iterable;)Lcom/google/protobuf/RepeatedFieldBuilder;
                //   235: pop            
                //   236: aload_0        
                //   237: aload_1        
                //   238: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.getUnknownFields:()Lcom/google/protobuf/UnknownFieldSet;
                //   241: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.mergeUnknownFields:(Lcom/google/protobuf/UnknownFieldSet;)Lcom/google/protobuf/GeneratedMessage$Builder;
                //   244: pop            
                //   245: aload_0        
                //   246: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      9      9      13     Ljava/lang/NullPointerException;
                //  13     29     32     36     Ljava/lang/NullPointerException;
                //  36     55     58     62     Ljava/lang/NullPointerException;
                //  43     74     77     81     Ljava/lang/NullPointerException;
                //  62     103    103    107    Ljava/lang/NullPointerException;
                //  132    154    157    161    Ljava/lang/NullPointerException;
                //  144    199    202    206    Ljava/lang/NullPointerException;
                //  161    213    213    217    Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0062:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                int n = 0;
                while (true) {
                    Label_0063: {
                        try {
                            if (n >= this.getValueCount()) {
                                break;
                            }
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                            break Label_0063;
                        }
                        catch (NullPointerException ex3) {
                            throw b(ex3);
                        }
                        try {
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex4) {
                            throw b(ex4);
                        }
                    }
                    ++n;
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueChildren_Res getValueChildren_Res = null;
                try {
                    getValueChildren_Res = (GetValueChildren_Res)GetValueChildren_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueChildren_Res = (GetValueChildren_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueChildren_Res != null) {
                            this.mergeFrom(getValueChildren_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.b().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> b() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void e() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.value_ = new ArrayList<Model.LLDBValue>(this.value_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<Model.LLDBValue> getValueList() {
                try {
                    if (this.valueBuilder_ == null) {
                        return Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (List<Model.LLDBValue>)this.valueBuilder_.getMessageList();
            }
            
            public int getValueCount() {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.size();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valueBuilder_.getCount();
            }
            
            public Model.LLDBValue getValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValue)this.valueBuilder_.getMessage(n);
            }
            
            public Builder setValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0053: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0053;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.e();
                    this.value_.set(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder setValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.e();
                        this.value_.set(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.e();
                    this.value_.add(lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage((GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.e();
                    this.value_.add(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.e();
                        this.value_.add(builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage((GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.e();
                        this.value_.add(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addAllValue(final Iterable<? extends Model.LLDBValue> iterable) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.e();
                        GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.value_);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addAllMessages((Iterable)iterable);
                return this;
            }
            
            public Builder clearValue() {
                try {
                    if (this.valueBuilder_ == null) {
                        this.value_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder removeValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.e();
                        this.value_.remove(n);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.remove(n);
                return this;
            }
            
            public Model.LLDBValue.Builder getValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.c().getBuilder(n);
            }
            
            public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValueOrBuilder)this.valueBuilder_.getMessageOrBuilder(n);
            }
            
            public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
                try {
                    if (this.valueBuilder_ != null) {
                        return (List<? extends Model.LLDBValueOrBuilder>)this.valueBuilder_.getMessageOrBuilderList();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return Collections.unmodifiableList((List<? extends Model.LLDBValueOrBuilder>)this.value_);
            }
            
            public Model.LLDBValue.Builder addValueBuilder() {
                return (Model.LLDBValue.Builder)this.c().addBuilder((GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public Model.LLDBValue.Builder addValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.c().addBuilder(n, (GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public List<Model.LLDBValue.Builder> getValueBuilderList() {
                return (List<Model.LLDBValue.Builder>)this.c().getBuilderList();
            }
            
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> c() {
                Builder builder = null;
                RepeatedFieldBuilder valueBuilder_ = null;
                List<Model.LLDBValue> list = null;
                boolean b = false;
                Label_0042: {
                    Label_0033: {
                        try {
                            if (this.valueBuilder_ != null) {
                                return this.valueBuilder_;
                            }
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                break Label_0033;
                            }
                            break Label_0033;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                b = true;
                                break Label_0042;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    b = false;
                }
                new RepeatedFieldBuilder((List)list, b, this.getParentForChildren(), this.isClean());
                builder.valueBuilder_ = (RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder>)valueBuilder_;
                this.value_ = null;
                return this.valueBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class GetVars_Req extends GeneratedMessage implements GetVars_ReqOrBuilder
    {
        private static final GetVars_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetVars_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        public static final int FRAME_INDEX_FIELD_NUMBER = 3;
        private int frameIndex_;
        public static final int STATICS_FIELD_NUMBER = 4;
        private boolean statics_;
        public static final int GLOBALS_FIELD_NUMBER = 5;
        private boolean globals_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetVars_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetVars_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetVars_Req getDefaultInstance() {
            return GetVars_Req.defaultInstance;
        }
        
        public GetVars_Req getDefaultInstanceForType() {
            return GetVars_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetVars_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.frameIndex_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.statics_ = codedInputStream.readBool();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x8;
                            this.globals_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetVars_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetVars_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetVars_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetVars_Req> getParserForType() {
            return GetVars_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        public boolean hasFrameIndex() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getFrameIndex() {
            return this.frameIndex_;
        }
        
        public boolean hasStatics() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public boolean getStatics() {
            return this.statics_;
        }
        
        public boolean hasGlobals() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public boolean getGlobals() {
            return this.globals_;
        }
        
        private void a() {
            this.threadId_ = 0;
            this.frameIndex_ = 0;
            this.statics_ = false;
            this.globals_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasFrameIndex()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasStatics()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasGlobals()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.frameIndex_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBool(4, this.statics_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBool(5, this.globals_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.threadId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.frameIndex_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBoolSize(4, this.statics_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBoolSize(5, this.globals_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetVars_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetVars_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetVars_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(array);
        }
        
        public static GetVars_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetVars_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetVars_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetVars_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetVars_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetVars_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetVars_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Req)GetVars_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetVars_Req getVars_Req) {
            return newBuilder().mergeFrom(getVars_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetVars_Req.PARSER = (Parser<GetVars_Req>)new AbstractParser<GetVars_Req>() {
                public GetVars_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetVars_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetVars_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetVars_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            private int frameIndex_;
            private boolean statics_;
            private boolean globals_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetVars_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetVars_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetVars_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (GetVars_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.frameIndex_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.statics_ = false;
                this.bitField0_ &= 0xFFFFFFFB;
                this.globals_ = false;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetVars_Req_descriptor;
            }
            
            public GetVars_Req getDefaultInstanceForType() {
                return GetVars_Req.getDefaultInstance();
            }
            
            public GetVars_Req build() {
                final GetVars_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetVars_Req buildPartial() {
                final GetVars_Req getVars_Req = new GetVars_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getVars_Req.threadId_ = this.threadId_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getVars_Req.frameIndex_ = this.frameIndex_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                getVars_Req.statics_ = this.statics_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                getVars_Req.globals_ = this.globals_;
                getVars_Req.bitField0_ = n;
                this.onBuilt();
                return getVars_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetVars_Req) {
                    return this.mergeFrom((GetVars_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetVars_Req getVars_Req) {
                if (getVars_Req == GetVars_Req.getDefaultInstance()) {
                    return this;
                }
                if (getVars_Req.hasThreadId()) {
                    this.setThreadId(getVars_Req.getThreadId());
                }
                if (getVars_Req.hasFrameIndex()) {
                    this.setFrameIndex(getVars_Req.getFrameIndex());
                }
                if (getVars_Req.hasStatics()) {
                    this.setStatics(getVars_Req.getStatics());
                }
                if (getVars_Req.hasGlobals()) {
                    this.setGlobals(getVars_Req.getGlobals());
                }
                this.mergeUnknownFields(getVars_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasThreadId() && this.hasFrameIndex() && this.hasStatics() && this.hasGlobals();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetVars_Req getVars_Req = null;
                try {
                    getVars_Req = (GetVars_Req)GetVars_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getVars_Req = (GetVars_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getVars_Req != null) {
                            this.mergeFrom(getVars_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasFrameIndex() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            public int getFrameIndex() {
                return this.frameIndex_;
            }
            
            public Builder setFrameIndex(final int frameIndex_) {
                this.bitField0_ |= 0x2;
                this.frameIndex_ = frameIndex_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFrameIndex() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.frameIndex_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasStatics() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            public boolean getStatics() {
                return this.statics_;
            }
            
            public Builder setStatics(final boolean statics_) {
                this.bitField0_ |= 0x4;
                this.statics_ = statics_;
                this.onChanged();
                return this;
            }
            
            public Builder clearStatics() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.statics_ = false;
                this.onChanged();
                return this;
            }
            
            public boolean hasGlobals() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            public boolean getGlobals() {
                return this.globals_;
            }
            
            public Builder setGlobals(final boolean globals_) {
                this.bitField0_ |= 0x8;
                this.globals_ = globals_;
                this.onChanged();
                return this;
            }
            
            public Builder clearGlobals() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.globals_ = false;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetVars_Res extends GeneratedMessage implements GetVars_ResOrBuilder
    {
        private static final GetVars_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetVars_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private List<Model.LLDBValue> value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetVars_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetVars_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetVars_Res getDefaultInstance() {
            return GetVars_Res.defaultInstance;
        }
        
        public GetVars_Res getDefaultInstanceForType() {
            return GetVars_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetVars_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.value_ = new ArrayList<Model.LLDBValue>();
                                n |= 0x2;
                            }
                            this.value_.add((Model.LLDBValue)codedInputStream.readMessage((Parser)Model.LLDBValue.PARSER, extensionRegistryLite));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetVars_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetVars_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetVars_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetVars_Res> getParserForType() {
            return GetVars_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<Model.LLDBValue> getValueList() {
            return this.value_;
        }
        
        public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
            return this.value_;
        }
        
        public int getValueCount() {
            return this.value_.size();
        }
        
        public Model.LLDBValue getValue(final int n) {
            return this.value_.get(n);
        }
        
        public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
            return this.value_.get(n);
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.value_ = Collections.emptyList();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < this.getValueCount(); ++i) {
                if (!this.getValue(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.value_.size()) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.value_.get(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            for (int i = 0; i < this.value_.size(); ++i) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_.get(i));
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetVars_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetVars_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetVars_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(array);
        }
        
        public static GetVars_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetVars_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetVars_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetVars_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetVars_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetVars_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetVars_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetVars_Res)GetVars_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetVars_Res getVars_Res) {
            return newBuilder().mergeFrom(getVars_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetVars_Res.PARSER = (Parser<GetVars_Res>)new AbstractParser<GetVars_Res>() {
                public GetVars_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetVars_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetVars_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetVars_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private List<Model.LLDBValue> value_;
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> valueBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetVars_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetVars_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetVars_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.d();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.value_ = Collections.emptyList();
                this.d();
            }
            
            private void d() {
                try {
                    if (GetVars_Res.alwaysUseFieldBuilders) {
                        this.c();
                        this.e();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                    try {
                        this.bitField0_ &= 0xFFFFFFFE;
                        if (this.valueBuilder_ == null) {
                            this.value_ = Collections.emptyList();
                            this.bitField0_ &= 0xFFFFFFFD;
                            return this;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetVars_Res_descriptor;
            }
            
            public GetVars_Res getDefaultInstanceForType() {
                return GetVars_Res.getDefaultInstance();
            }
            
            public GetVars_Res build() {
                final GetVars_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetVars_Res buildPartial() {
                final GetVars_Res getVars_Res = new GetVars_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0143: {
                    Label_0131: {
                        Label_0090: {
                            Label_0066: {
                                try {
                                    if (this.commonResponseBuilder_ == null) {
                                        getVars_Res.commonResponse_ = this.commonResponse_;
                                        break Label_0066;
                                    }
                                }
                                catch (NullPointerException ex) {
                                    throw b(ex);
                                }
                                getVars_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                                try {
                                    if (this.valueBuilder_ != null) {
                                        break Label_0131;
                                    }
                                    final Builder builder = this;
                                    final int n2 = builder.bitField0_;
                                    final int n3 = 2;
                                    final int n4 = n2 & n3;
                                    final int n5 = 2;
                                    if (n4 == n5) {
                                        break Label_0090;
                                    }
                                    break Label_0090;
                                }
                                catch (NullPointerException ex2) {
                                    throw b(ex2);
                                }
                            }
                            try {
                                final Builder builder = this;
                                final int n2 = builder.bitField0_;
                                final int n3 = 2;
                                final int n4 = n2 & n3;
                                final int n5 = 2;
                                if (n4 == n5) {
                                    this.value_ = Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                                    this.bitField0_ &= 0xFFFFFFFD;
                                }
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                        }
                        getVars_Res.value_ = this.value_;
                        break Label_0143;
                    }
                    getVars_Res.value_ = (List<Model.LLDBValue>)this.valueBuilder_.build();
                }
                getVars_Res.bitField0_ = n;
                this.onBuilt();
                return getVars_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetVars_Res) {
                        return this.mergeFrom((GetVars_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetVars_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_1        
                //     1: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //     4: if_acmpne       13
                //     7: aload_0        
                //     8: areturn        
                //     9: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    12: athrow         
                //    13: aload_1        
                //    14: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.hasCommonResponse:()Z
                //    17: ifeq            36
                //    20: aload_0        
                //    21: aload_1        
                //    22: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.getCommonResponse:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    25: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.mergeCommonResponse:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder;
                //    28: pop            
                //    29: goto            36
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    35: athrow         
                //    36: aload_0        
                //    37: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //    40: ifnonnull       132
                //    43: aload_1        
                //    44: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //    47: invokeinterface java/util/List.isEmpty:()Z
                //    52: ifne            236
                //    55: goto            62
                //    58: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    61: athrow         
                //    62: aload_0        
                //    63: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.value_:Ljava/util/List;
                //    66: invokeinterface java/util/List.isEmpty:()Z
                //    71: ifeq            107
                //    74: goto            81
                //    77: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    80: athrow         
                //    81: aload_0        
                //    82: aload_1        
                //    83: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //    86: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.value_:Ljava/util/List;
                //    89: aload_0        
                //    90: aload_0        
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //    94: bipush          -3
                //    96: iand           
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //   100: goto            125
                //   103: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   106: athrow         
                //   107: aload_0        
                //   108: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:()V
                //   111: aload_0        
                //   112: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.value_:Ljava/util/List;
                //   115: aload_1        
                //   116: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //   119: invokeinterface java/util/List.addAll:(Ljava/util/Collection;)Z
                //   124: pop            
                //   125: aload_0        
                //   126: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.onChanged:()V
                //   129: goto            236
                //   132: aload_1        
                //   133: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //   136: invokeinterface java/util/List.isEmpty:()Z
                //   141: ifne            236
                //   144: aload_0        
                //   145: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   148: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.isEmpty:()Z
                //   151: ifeq            224
                //   154: goto            161
                //   157: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   160: athrow         
                //   161: aload_0        
                //   162: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   165: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.dispose:()V
                //   168: aload_0        
                //   169: aconst_null    
                //   170: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   173: aload_0        
                //   174: aload_1        
                //   175: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //   178: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.value_:Ljava/util/List;
                //   181: aload_0        
                //   182: aload_0        
                //   183: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //   186: bipush          -3
                //   188: iand           
                //   189: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //   192: aload_0        
                //   193: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48200:()Z
                //   196: ifeq            217
                //   199: goto            206
                //   202: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   205: athrow         
                //   206: aload_0        
                //   207: invokespecial   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.e:()Lcom/google/protobuf/RepeatedFieldBuilder;
                //   210: goto            218
                //   213: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //   216: athrow         
                //   217: aconst_null    
                //   218: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   221: goto            236
                //   224: aload_0        
                //   225: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.valueBuilder_:Lcom/google/protobuf/RepeatedFieldBuilder;
                //   228: aload_1        
                //   229: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.access$48000:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Ljava/util/List;
                //   232: invokevirtual   com/google/protobuf/RepeatedFieldBuilder.addAllMessages:(Ljava/lang/Iterable;)Lcom/google/protobuf/RepeatedFieldBuilder;
                //   235: pop            
                //   236: aload_0        
                //   237: aload_1        
                //   238: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.getUnknownFields:()Lcom/google/protobuf/UnknownFieldSet;
                //   241: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.mergeUnknownFields:(Lcom/google/protobuf/UnknownFieldSet;)Lcom/google/protobuf/GeneratedMessage$Builder;
                //   244: pop            
                //   245: aload_0        
                //   246: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      9      9      13     Ljava/lang/NullPointerException;
                //  13     29     32     36     Ljava/lang/NullPointerException;
                //  36     55     58     62     Ljava/lang/NullPointerException;
                //  43     74     77     81     Ljava/lang/NullPointerException;
                //  62     103    103    107    Ljava/lang/NullPointerException;
                //  132    154    157    161    Ljava/lang/NullPointerException;
                //  144    199    202    206    Ljava/lang/NullPointerException;
                //  161    213    213    217    Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0062:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                int n = 0;
                while (true) {
                    Label_0063: {
                        try {
                            if (n >= this.getValueCount()) {
                                break;
                            }
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                            break Label_0063;
                        }
                        catch (NullPointerException ex3) {
                            throw b(ex3);
                        }
                        try {
                            final Builder builder = this;
                            final int n2 = n;
                            final Model.LLDBValue lldbValue = builder.getValue(n2);
                            final boolean b = lldbValue.isInitialized();
                            if (!b) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex4) {
                            throw b(ex4);
                        }
                    }
                    ++n;
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetVars_Res getVars_Res = null;
                try {
                    getVars_Res = (GetVars_Res)GetVars_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getVars_Res = (GetVars_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getVars_Res != null) {
                            this.mergeFrom(getVars_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void b() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.value_ = new ArrayList<Model.LLDBValue>(this.value_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<Model.LLDBValue> getValueList() {
                try {
                    if (this.valueBuilder_ == null) {
                        return Collections.unmodifiableList((List<? extends Model.LLDBValue>)this.value_);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (List<Model.LLDBValue>)this.valueBuilder_.getMessageList();
            }
            
            public int getValueCount() {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.size();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valueBuilder_.getCount();
            }
            
            public Model.LLDBValue getValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValue)this.valueBuilder_.getMessage(n);
            }
            
            public Builder setValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0053: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0053;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.set(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder setValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.set(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.setMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.add(lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage((GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue lldbValue) {
                Label_0052: {
                    Label_0018: {
                        try {
                            if (this.valueBuilder_ != null) {
                                break Label_0052;
                            }
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                break Label_0018;
                            }
                            break Label_0018;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            final Model.LLDBValue lldbValue2 = lldbValue;
                            if (lldbValue2 == null) {
                                throw new NullPointerException();
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    this.b();
                    this.value_.add(n, lldbValue);
                    this.onChanged();
                    return this;
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)lldbValue);
                return this;
            }
            
            public Builder addValue(final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.add(builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage((GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addValue(final int n, final Model.LLDBValue.Builder builder) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.add(n, builder.build());
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addMessage(n, (GeneratedMessage)builder.build());
                return this;
            }
            
            public Builder addAllValue(final Iterable<? extends Model.LLDBValue> iterable) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.value_);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.addAllMessages((Iterable)iterable);
                return this;
            }
            
            public Builder clearValue() {
                try {
                    if (this.valueBuilder_ == null) {
                        this.value_ = Collections.emptyList();
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.clear();
                return this;
            }
            
            public Builder removeValue(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        this.b();
                        this.value_.remove(n);
                        this.onChanged();
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.valueBuilder_.remove(n);
                return this;
            }
            
            public Model.LLDBValue.Builder getValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.e().getBuilder(n);
            }
            
            public Model.LLDBValueOrBuilder getValueOrBuilder(final int n) {
                try {
                    if (this.valueBuilder_ == null) {
                        return this.value_.get(n);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Model.LLDBValueOrBuilder)this.valueBuilder_.getMessageOrBuilder(n);
            }
            
            public List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList() {
                try {
                    if (this.valueBuilder_ != null) {
                        return (List<? extends Model.LLDBValueOrBuilder>)this.valueBuilder_.getMessageOrBuilderList();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return Collections.unmodifiableList((List<? extends Model.LLDBValueOrBuilder>)this.value_);
            }
            
            public Model.LLDBValue.Builder addValueBuilder() {
                return (Model.LLDBValue.Builder)this.e().addBuilder((GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public Model.LLDBValue.Builder addValueBuilder(final int n) {
                return (Model.LLDBValue.Builder)this.e().addBuilder(n, (GeneratedMessage)Model.LLDBValue.getDefaultInstance());
            }
            
            public List<Model.LLDBValue.Builder> getValueBuilderList() {
                return (List<Model.LLDBValue.Builder>)this.e().getBuilderList();
            }
            
            private RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder> e() {
                Builder builder = null;
                RepeatedFieldBuilder valueBuilder_ = null;
                List<Model.LLDBValue> list = null;
                boolean b = false;
                Label_0042: {
                    Label_0033: {
                        try {
                            if (this.valueBuilder_ != null) {
                                return this.valueBuilder_;
                            }
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                break Label_0033;
                            }
                            break Label_0033;
                        }
                        catch (NullPointerException ex) {
                            throw b(ex);
                        }
                        try {
                            builder = this;
                            valueBuilder_ = new(com.google.protobuf.RepeatedFieldBuilder.class);
                            final Builder builder2 = this;
                            list = builder2.value_;
                            final Builder builder3 = this;
                            final int n = builder3.bitField0_;
                            final int n2 = 2;
                            final int n3 = n & n2;
                            final int n4 = 2;
                            if (n3 == n4) {
                                b = true;
                                break Label_0042;
                            }
                        }
                        catch (NullPointerException ex2) {
                            throw b(ex2);
                        }
                    }
                    b = false;
                }
                new RepeatedFieldBuilder((List)list, b, this.getParentForChildren(), this.isClean());
                builder.valueBuilder_ = (RepeatedFieldBuilder<Model.LLDBValue, Model.LLDBValue.Builder, Model.LLDBValueOrBuilder>)valueBuilder_;
                this.value_ = null;
                return this.valueBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class DispatchInput_Req extends GeneratedMessage implements DispatchInput_ReqOrBuilder
    {
        private static final DispatchInput_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<DispatchInput_Req> PARSER;
        private int bitField0_;
        public static final int INPUT_FIELD_NUMBER = 2;
        private Object input_;
        public static final int TARGET_FIELD_NUMBER = 3;
        private Model.DispatchTarget target_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private DispatchInput_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private DispatchInput_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static DispatchInput_Req getDefaultInstance() {
            return DispatchInput_Req.defaultInstance;
        }
        
        public DispatchInput_Req getDefaultInstanceForType() {
            return DispatchInput_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private DispatchInput_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.input_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            final int enum1 = codedInputStream.readEnum();
                            final Model.DispatchTarget value = Model.DispatchTarget.valueOf(enum1);
                            try {
                                if (value == null) {
                                    builder.mergeVarintField(3, enum1);
                                    continue;
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x2;
                            this.target_ = value;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_DispatchInput_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_DispatchInput_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DispatchInput_Req.class, (Class)Builder.class);
        }
        
        public Parser<DispatchInput_Req> getParserForType() {
            return DispatchInput_Req.PARSER;
        }
        
        public boolean hasInput() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getInput() {
            final Object input_ = this.input_;
            if (input_ instanceof String) {
                return (String)input_;
            }
            final ByteString byteString = (ByteString)input_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.input_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getInputBytes() {
            final Object input_ = this.input_;
            if (input_ instanceof String) {
                return (ByteString)(this.input_ = ByteString.copyFromUtf8((String)input_));
            }
            return (ByteString)input_;
        }
        
        public boolean hasTarget() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public Model.DispatchTarget getTarget() {
            return this.target_;
        }
        
        private void a() {
            this.input_ = "";
            this.target_ = Model.DispatchTarget.DispatchTargetProcess;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasInput()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasTarget()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getInputBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeEnum(3, this.target_.getNumber());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getInputBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeEnumSize(3, this.target_.getNumber());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static DispatchInput_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(byteString);
        }
        
        public static DispatchInput_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static DispatchInput_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(array);
        }
        
        public static DispatchInput_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static DispatchInput_Req parseFrom(final InputStream inputStream) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(inputStream);
        }
        
        public static DispatchInput_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static DispatchInput_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static DispatchInput_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static DispatchInput_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static DispatchInput_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Req)DispatchInput_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final DispatchInput_Req dispatchInput_Req) {
            return newBuilder().mergeFrom(dispatchInput_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            DispatchInput_Req.PARSER = (Parser<DispatchInput_Req>)new AbstractParser<DispatchInput_Req>() {
                public DispatchInput_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new DispatchInput_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new DispatchInput_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements DispatchInput_ReqOrBuilder
        {
            private int bitField0_;
            private Object input_;
            private Model.DispatchTarget target_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_DispatchInput_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_DispatchInput_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DispatchInput_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.input_ = "";
                this.target_ = Model.DispatchTarget.DispatchTargetProcess;
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.input_ = "";
                this.target_ = Model.DispatchTarget.DispatchTargetProcess;
                this.a();
            }
            
            private void a() {
                if (DispatchInput_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.input_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.target_ = Model.DispatchTarget.DispatchTargetProcess;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_DispatchInput_Req_descriptor;
            }
            
            public DispatchInput_Req getDefaultInstanceForType() {
                return DispatchInput_Req.getDefaultInstance();
            }
            
            public DispatchInput_Req build() {
                final DispatchInput_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public DispatchInput_Req buildPartial() {
                final DispatchInput_Req dispatchInput_Req = new DispatchInput_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                dispatchInput_Req.input_ = this.input_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                dispatchInput_Req.target_ = this.target_;
                dispatchInput_Req.bitField0_ = n;
                this.onBuilt();
                return dispatchInput_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof DispatchInput_Req) {
                        return this.mergeFrom((DispatchInput_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final DispatchInput_Req dispatchInput_Req) {
                try {
                    if (dispatchInput_Req == DispatchInput_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (dispatchInput_Req.hasInput()) {
                        this.bitField0_ |= 0x1;
                        this.input_ = dispatchInput_Req.input_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (dispatchInput_Req.hasTarget()) {
                        this.setTarget(dispatchInput_Req.getTarget());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(dispatchInput_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasInput()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasTarget()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                DispatchInput_Req dispatchInput_Req = null;
                try {
                    dispatchInput_Req = (DispatchInput_Req)DispatchInput_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    dispatchInput_Req = (DispatchInput_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (dispatchInput_Req != null) {
                            this.mergeFrom(dispatchInput_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasInput() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getInput() {
                final Object input_ = this.input_;
                if (!(input_ instanceof String)) {
                    return (String)(this.input_ = ((ByteString)input_).toStringUtf8());
                }
                return (String)input_;
            }
            
            public ByteString getInputBytes() {
                final Object input_ = this.input_;
                if (input_ instanceof String) {
                    return (ByteString)(this.input_ = ByteString.copyFromUtf8((String)input_));
                }
                return (ByteString)input_;
            }
            
            public Builder setInput(final String input_) {
                try {
                    if (input_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.input_ = input_;
                this.onChanged();
                return this;
            }
            
            public Builder clearInput() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.input_ = DispatchInput_Req.getDefaultInstance().getInput();
                this.onChanged();
                return this;
            }
            
            public Builder setInputBytes(final ByteString input_) {
                try {
                    if (input_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.input_ = input_;
                this.onChanged();
                return this;
            }
            
            public boolean hasTarget() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Model.DispatchTarget getTarget() {
                return this.target_;
            }
            
            public Builder setTarget(final Model.DispatchTarget target_) {
                try {
                    if (target_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.target_ = target_;
                this.onChanged();
                return this;
            }
            
            public Builder clearTarget() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.target_ = Model.DispatchTarget.DispatchTargetProcess;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class DispatchInput_Res extends GeneratedMessage implements DispatchInput_ResOrBuilder
    {
        private static final DispatchInput_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<DispatchInput_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private DispatchInput_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private DispatchInput_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static DispatchInput_Res getDefaultInstance() {
            return DispatchInput_Res.defaultInstance;
        }
        
        public DispatchInput_Res getDefaultInstanceForType() {
            return DispatchInput_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private DispatchInput_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_DispatchInput_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_DispatchInput_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DispatchInput_Res.class, (Class)Builder.class);
        }
        
        public Parser<DispatchInput_Res> getParserForType() {
            return DispatchInput_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static DispatchInput_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(byteString);
        }
        
        public static DispatchInput_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static DispatchInput_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(array);
        }
        
        public static DispatchInput_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static DispatchInput_Res parseFrom(final InputStream inputStream) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(inputStream);
        }
        
        public static DispatchInput_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static DispatchInput_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static DispatchInput_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static DispatchInput_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static DispatchInput_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (DispatchInput_Res)DispatchInput_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final DispatchInput_Res dispatchInput_Res) {
            return newBuilder().mergeFrom(dispatchInput_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            DispatchInput_Res.PARSER = (Parser<DispatchInput_Res>)new AbstractParser<DispatchInput_Res>() {
                public DispatchInput_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new DispatchInput_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new DispatchInput_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements DispatchInput_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_DispatchInput_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_DispatchInput_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DispatchInput_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (DispatchInput_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_DispatchInput_Res_descriptor;
            }
            
            public DispatchInput_Res getDefaultInstanceForType() {
                return DispatchInput_Res.getDefaultInstance();
            }
            
            public DispatchInput_Res build() {
                final DispatchInput_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public DispatchInput_Res buildPartial() {
                final DispatchInput_Res dispatchInput_Res = new DispatchInput_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            dispatchInput_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    dispatchInput_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                dispatchInput_Res.bitField0_ = n;
                this.onBuilt();
                return dispatchInput_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof DispatchInput_Res) {
                        return this.mergeFrom((DispatchInput_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final DispatchInput_Res dispatchInput_Res) {
                try {
                    if (dispatchInput_Res == DispatchInput_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (dispatchInput_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(dispatchInput_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(dispatchInput_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                DispatchInput_Res dispatchInput_Res = null;
                try {
                    dispatchInput_Res = (DispatchInput_Res)DispatchInput_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    dispatchInput_Res = (DispatchInput_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (dispatchInput_Res != null) {
                            this.mergeFrom(dispatchInput_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleConsoleCommand_Req extends GeneratedMessage implements HandleConsoleCommand_ReqOrBuilder
    {
        private static final HandleConsoleCommand_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleConsoleCommand_Req> PARSER;
        private int bitField0_;
        public static final int THREAD_ID_FIELD_NUMBER = 2;
        private int threadId_;
        public static final int FRAME_INDEX_FIELD_NUMBER = 3;
        private int frameIndex_;
        public static final int COMMAND_FIELD_NUMBER = 4;
        private Object command_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleConsoleCommand_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleConsoleCommand_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleConsoleCommand_Req getDefaultInstance() {
            return HandleConsoleCommand_Req.defaultInstance;
        }
        
        public HandleConsoleCommand_Req getDefaultInstanceForType() {
            return HandleConsoleCommand_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleConsoleCommand_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.threadId_ = codedInputStream.readUInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.frameIndex_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x4;
                            this.command_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleConsoleCommand_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleConsoleCommand_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleConsoleCommand_Req.class, (Class)Builder.class);
        }
        
        public Parser<HandleConsoleCommand_Req> getParserForType() {
            return HandleConsoleCommand_Req.PARSER;
        }
        
        public boolean hasThreadId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getThreadId() {
            return this.threadId_;
        }
        
        public boolean hasFrameIndex() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getFrameIndex() {
            return this.frameIndex_;
        }
        
        public boolean hasCommand() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public String getCommand() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (String)command_;
            }
            final ByteString byteString = (ByteString)command_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.command_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getCommandBytes() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
            }
            return (ByteString)command_;
        }
        
        private void a() {
            this.threadId_ = 0;
            this.frameIndex_ = 0;
            this.command_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasThreadId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasFrameIndex()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasCommand()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeUInt32(2, this.threadId_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.frameIndex_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBytes(4, this.getCommandBytes());
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeUInt32Size(2, this.threadId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.frameIndex_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBytesSize(4, this.getCommandBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleConsoleCommand_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(byteString);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(array);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final InputStream inputStream) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(inputStream);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleConsoleCommand_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleConsoleCommand_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleConsoleCommand_Req handleConsoleCommand_Req) {
            return newBuilder().mergeFrom(handleConsoleCommand_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleConsoleCommand_Req.PARSER = (Parser<HandleConsoleCommand_Req>)new AbstractParser<HandleConsoleCommand_Req>() {
                public HandleConsoleCommand_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleConsoleCommand_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleConsoleCommand_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleConsoleCommand_ReqOrBuilder
        {
            private int bitField0_;
            private int threadId_;
            private int frameIndex_;
            private Object command_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleConsoleCommand_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleConsoleCommand_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleConsoleCommand_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.command_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.command_ = "";
                this.b();
            }
            
            private void b() {
                if (HandleConsoleCommand_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.threadId_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.frameIndex_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.command_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleConsoleCommand_Req_descriptor;
            }
            
            public HandleConsoleCommand_Req getDefaultInstanceForType() {
                return HandleConsoleCommand_Req.getDefaultInstance();
            }
            
            public HandleConsoleCommand_Req build() {
                final HandleConsoleCommand_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleConsoleCommand_Req buildPartial() {
                final HandleConsoleCommand_Req handleConsoleCommand_Req = new HandleConsoleCommand_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                handleConsoleCommand_Req.threadId_ = this.threadId_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                handleConsoleCommand_Req.frameIndex_ = this.frameIndex_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                handleConsoleCommand_Req.command_ = this.command_;
                handleConsoleCommand_Req.bitField0_ = n;
                this.onBuilt();
                return handleConsoleCommand_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleConsoleCommand_Req) {
                        return this.mergeFrom((HandleConsoleCommand_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleConsoleCommand_Req handleConsoleCommand_Req) {
                try {
                    if (handleConsoleCommand_Req == HandleConsoleCommand_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleConsoleCommand_Req.hasThreadId()) {
                        this.setThreadId(handleConsoleCommand_Req.getThreadId());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (handleConsoleCommand_Req.hasFrameIndex()) {
                        this.setFrameIndex(handleConsoleCommand_Req.getFrameIndex());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (handleConsoleCommand_Req.hasCommand()) {
                        this.bitField0_ |= 0x4;
                        this.command_ = handleConsoleCommand_Req.command_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                this.mergeUnknownFields(handleConsoleCommand_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasThreadId()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasFrameIndex()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasCommand()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleConsoleCommand_Req handleConsoleCommand_Req = null;
                try {
                    handleConsoleCommand_Req = (HandleConsoleCommand_Req)HandleConsoleCommand_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleConsoleCommand_Req = (HandleConsoleCommand_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleConsoleCommand_Req != null) {
                            this.mergeFrom(handleConsoleCommand_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasThreadId() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getThreadId() {
                return this.threadId_;
            }
            
            public Builder setThreadId(final int threadId_) {
                this.bitField0_ |= 0x1;
                this.threadId_ = threadId_;
                this.onChanged();
                return this;
            }
            
            public Builder clearThreadId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.threadId_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasFrameIndex() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getFrameIndex() {
                return this.frameIndex_;
            }
            
            public Builder setFrameIndex(final int frameIndex_) {
                this.bitField0_ |= 0x2;
                this.frameIndex_ = frameIndex_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFrameIndex() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.frameIndex_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasCommand() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getCommand() {
                final Object command_ = this.command_;
                if (!(command_ instanceof String)) {
                    return (String)(this.command_ = ((ByteString)command_).toStringUtf8());
                }
                return (String)command_;
            }
            
            public ByteString getCommandBytes() {
                final Object command_ = this.command_;
                if (command_ instanceof String) {
                    return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
                }
                return (ByteString)command_;
            }
            
            public Builder setCommand(final String command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCommand() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.command_ = HandleConsoleCommand_Req.getDefaultInstance().getCommand();
                this.onChanged();
                return this;
            }
            
            public Builder setCommandBytes(final ByteString command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleConsoleCommand_Res extends GeneratedMessage implements HandleConsoleCommand_ResOrBuilder
    {
        private static final HandleConsoleCommand_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleConsoleCommand_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int SUCCESS_FIELD_NUMBER = 2;
        private int success_;
        public static final int ERR_FIELD_NUMBER = 3;
        private Object err_;
        public static final int OUT_FIELD_NUMBER = 4;
        private Object out_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleConsoleCommand_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleConsoleCommand_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleConsoleCommand_Res getDefaultInstance() {
            return HandleConsoleCommand_Res.defaultInstance;
        }
        
        public HandleConsoleCommand_Res getDefaultInstanceForType() {
            return HandleConsoleCommand_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleConsoleCommand_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.success_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.err_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x8;
                            this.out_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleConsoleCommand_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleConsoleCommand_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleConsoleCommand_Res.class, (Class)Builder.class);
        }
        
        public Parser<HandleConsoleCommand_Res> getParserForType() {
            return HandleConsoleCommand_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasSuccess() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getSuccess() {
            return this.success_;
        }
        
        public boolean hasErr() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public String getErr() {
            final Object err_ = this.err_;
            if (err_ instanceof String) {
                return (String)err_;
            }
            final ByteString byteString = (ByteString)err_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.err_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getErrBytes() {
            final Object err_ = this.err_;
            if (err_ instanceof String) {
                return (ByteString)(this.err_ = ByteString.copyFromUtf8((String)err_));
            }
            return (ByteString)err_;
        }
        
        public boolean hasOut() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public String getOut() {
            final Object out_ = this.out_;
            if (out_ instanceof String) {
                return (String)out_;
            }
            final ByteString byteString = (ByteString)out_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.out_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getOutBytes() {
            final Object out_ = this.out_;
            if (out_ instanceof String) {
                return (ByteString)(this.out_ = ByteString.copyFromUtf8((String)out_));
            }
            return (ByteString)out_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.success_ = 0;
            this.err_ = "";
            this.out_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasSuccess()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(2, this.success_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBytes(3, this.getErrBytes());
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBytes(4, this.getOutBytes());
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(2, this.success_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBytesSize(3, this.getErrBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBytesSize(4, this.getOutBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleConsoleCommand_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(byteString);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(array);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final InputStream inputStream) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(inputStream);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleConsoleCommand_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleConsoleCommand_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleConsoleCommand_Res handleConsoleCommand_Res) {
            return newBuilder().mergeFrom(handleConsoleCommand_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleConsoleCommand_Res.PARSER = (Parser<HandleConsoleCommand_Res>)new AbstractParser<HandleConsoleCommand_Res>() {
                public HandleConsoleCommand_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleConsoleCommand_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleConsoleCommand_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleConsoleCommand_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private int success_;
            private Object err_;
            private Object out_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleConsoleCommand_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleConsoleCommand_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleConsoleCommand_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.err_ = "";
                this.out_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.err_ = "";
                this.out_ = "";
                this.b();
            }
            
            private void b() {
                try {
                    if (HandleConsoleCommand_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.success_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                this.err_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.out_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleConsoleCommand_Res_descriptor;
            }
            
            public HandleConsoleCommand_Res getDefaultInstanceForType() {
                return HandleConsoleCommand_Res.getDefaultInstance();
            }
            
            public HandleConsoleCommand_Res build() {
                final HandleConsoleCommand_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleConsoleCommand_Res buildPartial() {
                final HandleConsoleCommand_Res handleConsoleCommand_Res = new HandleConsoleCommand_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            handleConsoleCommand_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    handleConsoleCommand_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                handleConsoleCommand_Res.success_ = this.success_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                handleConsoleCommand_Res.err_ = this.err_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                handleConsoleCommand_Res.out_ = this.out_;
                handleConsoleCommand_Res.bitField0_ = n;
                this.onBuilt();
                return handleConsoleCommand_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleConsoleCommand_Res) {
                        return this.mergeFrom((HandleConsoleCommand_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleConsoleCommand_Res handleConsoleCommand_Res) {
                try {
                    if (handleConsoleCommand_Res == HandleConsoleCommand_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleConsoleCommand_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(handleConsoleCommand_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (handleConsoleCommand_Res.hasSuccess()) {
                        this.setSuccess(handleConsoleCommand_Res.getSuccess());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (handleConsoleCommand_Res.hasErr()) {
                        this.bitField0_ |= 0x4;
                        this.err_ = handleConsoleCommand_Res.err_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (handleConsoleCommand_Res.hasOut()) {
                        this.bitField0_ |= 0x8;
                        this.out_ = handleConsoleCommand_Res.out_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                this.mergeUnknownFields(handleConsoleCommand_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasSuccess()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleConsoleCommand_Res handleConsoleCommand_Res = null;
                try {
                    handleConsoleCommand_Res = (HandleConsoleCommand_Res)HandleConsoleCommand_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleConsoleCommand_Res = (HandleConsoleCommand_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleConsoleCommand_Res != null) {
                            this.mergeFrom(handleConsoleCommand_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasSuccess() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getSuccess() {
                return this.success_;
            }
            
            public Builder setSuccess(final int success_) {
                this.bitField0_ |= 0x2;
                this.success_ = success_;
                this.onChanged();
                return this;
            }
            
            public Builder clearSuccess() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.success_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasErr() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getErr() {
                final Object err_ = this.err_;
                if (!(err_ instanceof String)) {
                    return (String)(this.err_ = ((ByteString)err_).toStringUtf8());
                }
                return (String)err_;
            }
            
            public ByteString getErrBytes() {
                final Object err_ = this.err_;
                if (err_ instanceof String) {
                    return (ByteString)(this.err_ = ByteString.copyFromUtf8((String)err_));
                }
                return (ByteString)err_;
            }
            
            public Builder setErr(final String err_) {
                try {
                    if (err_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.err_ = err_;
                this.onChanged();
                return this;
            }
            
            public Builder clearErr() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.err_ = HandleConsoleCommand_Res.getDefaultInstance().getErr();
                this.onChanged();
                return this;
            }
            
            public Builder setErrBytes(final ByteString err_) {
                try {
                    if (err_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x4;
                this.err_ = err_;
                this.onChanged();
                return this;
            }
            
            public boolean hasOut() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getOut() {
                final Object out_ = this.out_;
                if (!(out_ instanceof String)) {
                    return (String)(this.out_ = ((ByteString)out_).toStringUtf8());
                }
                return (String)out_;
            }
            
            public ByteString getOutBytes() {
                final Object out_ = this.out_;
                if (out_ instanceof String) {
                    return (ByteString)(this.out_ = ByteString.copyFromUtf8((String)out_));
                }
                return (ByteString)out_;
            }
            
            public Builder setOut(final String out_) {
                try {
                    if (out_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.out_ = out_;
                this.onChanged();
                return this;
            }
            
            public Builder clearOut() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.out_ = HandleConsoleCommand_Res.getDefaultInstance().getOut();
                this.onChanged();
                return this;
            }
            
            public Builder setOutBytes(final ByteString out_) {
                try {
                    if (out_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x8;
                this.out_ = out_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleCompletion_Req extends GeneratedMessage implements HandleCompletion_ReqOrBuilder
    {
        private static final HandleCompletion_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleCompletion_Req> PARSER;
        private int bitField0_;
        public static final int COMMAND_FIELD_NUMBER = 2;
        private Object command_;
        public static final int POS_FIELD_NUMBER = 3;
        private int pos_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleCompletion_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleCompletion_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleCompletion_Req getDefaultInstance() {
            return HandleCompletion_Req.defaultInstance;
        }
        
        public HandleCompletion_Req getDefaultInstanceForType() {
            return HandleCompletion_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleCompletion_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.command_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.pos_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleCompletion_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleCompletion_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleCompletion_Req.class, (Class)Builder.class);
        }
        
        public Parser<HandleCompletion_Req> getParserForType() {
            return HandleCompletion_Req.PARSER;
        }
        
        public boolean hasCommand() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getCommand() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (String)command_;
            }
            final ByteString byteString = (ByteString)command_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.command_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getCommandBytes() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
            }
            return (ByteString)command_;
        }
        
        public boolean hasPos() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public int getPos() {
            return this.pos_;
        }
        
        private void a() {
            this.command_ = "";
            this.pos_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommand()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasPos()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getCommandBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeInt32(3, this.pos_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getCommandBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeInt32Size(3, this.pos_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleCompletion_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(byteString);
        }
        
        public static HandleCompletion_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleCompletion_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(array);
        }
        
        public static HandleCompletion_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleCompletion_Req parseFrom(final InputStream inputStream) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(inputStream);
        }
        
        public static HandleCompletion_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleCompletion_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleCompletion_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleCompletion_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleCompletion_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Req)HandleCompletion_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleCompletion_Req handleCompletion_Req) {
            return newBuilder().mergeFrom(handleCompletion_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleCompletion_Req.PARSER = (Parser<HandleCompletion_Req>)new AbstractParser<HandleCompletion_Req>() {
                public HandleCompletion_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleCompletion_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleCompletion_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleCompletion_ReqOrBuilder
        {
            private int bitField0_;
            private Object command_;
            private int pos_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleCompletion_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleCompletion_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleCompletion_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.command_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.command_ = "";
                this.b();
            }
            
            private void b() {
                if (HandleCompletion_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.command_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.pos_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleCompletion_Req_descriptor;
            }
            
            public HandleCompletion_Req getDefaultInstanceForType() {
                return HandleCompletion_Req.getDefaultInstance();
            }
            
            public HandleCompletion_Req build() {
                final HandleCompletion_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleCompletion_Req buildPartial() {
                final HandleCompletion_Req handleCompletion_Req = new HandleCompletion_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                handleCompletion_Req.command_ = this.command_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                handleCompletion_Req.pos_ = this.pos_;
                handleCompletion_Req.bitField0_ = n;
                this.onBuilt();
                return handleCompletion_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleCompletion_Req) {
                        return this.mergeFrom((HandleCompletion_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleCompletion_Req handleCompletion_Req) {
                try {
                    if (handleCompletion_Req == HandleCompletion_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleCompletion_Req.hasCommand()) {
                        this.bitField0_ |= 0x1;
                        this.command_ = handleCompletion_Req.command_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (handleCompletion_Req.hasPos()) {
                        this.setPos(handleCompletion_Req.getPos());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(handleCompletion_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommand()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasPos()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleCompletion_Req handleCompletion_Req = null;
                try {
                    handleCompletion_Req = (HandleCompletion_Req)HandleCompletion_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleCompletion_Req = (HandleCompletion_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleCompletion_Req != null) {
                            this.mergeFrom(handleCompletion_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommand() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getCommand() {
                final Object command_ = this.command_;
                if (!(command_ instanceof String)) {
                    return (String)(this.command_ = ((ByteString)command_).toStringUtf8());
                }
                return (String)command_;
            }
            
            public ByteString getCommandBytes() {
                final Object command_ = this.command_;
                if (command_ instanceof String) {
                    return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
                }
                return (ByteString)command_;
            }
            
            public Builder setCommand(final String command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCommand() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.command_ = HandleCompletion_Req.getDefaultInstance().getCommand();
                this.onChanged();
                return this;
            }
            
            public Builder setCommandBytes(final ByteString command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            public boolean hasPos() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getPos() {
                return this.pos_;
            }
            
            public Builder setPos(final int pos_) {
                this.bitField0_ |= 0x2;
                this.pos_ = pos_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPos() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.pos_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleCompletion_Res extends GeneratedMessage implements HandleCompletion_ResOrBuilder
    {
        private static final HandleCompletion_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleCompletion_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int COMPLETION_FIELD_NUMBER = 2;
        private LazyStringList completion_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleCompletion_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleCompletion_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleCompletion_Res getDefaultInstance() {
            return HandleCompletion_Res.defaultInstance;
        }
        
        public HandleCompletion_Res getDefaultInstanceForType() {
            return HandleCompletion_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleCompletion_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            int n = 0;
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((n & 0x2) != 0x2) {
                                this.completion_ = (LazyStringList)new LazyStringArrayList();
                                n |= 0x2;
                            }
                            this.completion_.add(codedInputStream.readBytes());
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                try {
                    if ((n & 0x2) == 0x2) {
                        this.completion_ = (LazyStringList)new UnmodifiableLazyStringList(this.completion_);
                    }
                }
                catch (InvalidProtocolBufferException ex4) {
                    throw a((IOException)ex4);
                }
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleCompletion_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleCompletion_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleCompletion_Res.class, (Class)Builder.class);
        }
        
        public Parser<HandleCompletion_Res> getParserForType() {
            return HandleCompletion_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public List<String> getCompletionList() {
            return (List<String>)this.completion_;
        }
        
        public int getCompletionCount() {
            return this.completion_.size();
        }
        
        public String getCompletion(final int n) {
            return (String)this.completion_.get(n);
        }
        
        public ByteString getCompletionBytes(final int n) {
            return this.completion_.getByteString(n);
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.completion_ = LazyStringArrayList.EMPTY;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            int i = 0;
            try {
                while (i < this.completion_.size()) {
                    codedOutputStream.writeBytes(2, this.completion_.getByteString(i));
                    ++i;
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            int n2 = 0;
            for (int i = 0; i < this.completion_.size(); ++i) {
                n2 += CodedOutputStream.computeBytesSizeNoTag(this.completion_.getByteString(i));
            }
            return this.memoizedSerializedSize = n + n2 + 1 * this.getCompletionList().size() + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleCompletion_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(byteString);
        }
        
        public static HandleCompletion_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleCompletion_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(array);
        }
        
        public static HandleCompletion_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleCompletion_Res parseFrom(final InputStream inputStream) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(inputStream);
        }
        
        public static HandleCompletion_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleCompletion_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleCompletion_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleCompletion_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleCompletion_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleCompletion_Res)HandleCompletion_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return d();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleCompletion_Res handleCompletion_Res) {
            return newBuilder().mergeFrom(handleCompletion_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleCompletion_Res.PARSER = (Parser<HandleCompletion_Res>)new AbstractParser<HandleCompletion_Res>() {
                public HandleCompletion_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleCompletion_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleCompletion_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleCompletion_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private LazyStringList completion_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleCompletion_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleCompletion_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleCompletion_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.completion_ = LazyStringArrayList.EMPTY;
                this.c();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.completion_ = LazyStringArrayList.EMPTY;
                this.c();
            }
            
            private void c() {
                try {
                    if (HandleCompletion_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder d() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.completion_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return d().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleCompletion_Res_descriptor;
            }
            
            public HandleCompletion_Res getDefaultInstanceForType() {
                return HandleCompletion_Res.getDefaultInstance();
            }
            
            public HandleCompletion_Res build() {
                final HandleCompletion_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleCompletion_Res buildPartial() {
                final HandleCompletion_Res handleCompletion_Res = new HandleCompletion_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            handleCompletion_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    handleCompletion_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                    try {
                        if ((this.bitField0_ & 0x2) == 0x2) {
                            this.completion_ = (LazyStringList)new UnmodifiableLazyStringList(this.completion_);
                            this.bitField0_ &= 0xFFFFFFFD;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                }
                handleCompletion_Res.completion_ = this.completion_;
                handleCompletion_Res.bitField0_ = n;
                this.onBuilt();
                return handleCompletion_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleCompletion_Res) {
                        return this.mergeFrom((HandleCompletion_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleCompletion_Res handleCompletion_Res) {
                try {
                    if (handleCompletion_Res == HandleCompletion_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleCompletion_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(handleCompletion_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                Label_0115: {
                    Label_0111: {
                        Label_0067: {
                            try {
                                if (handleCompletion_Res.completion_.isEmpty()) {
                                    break Label_0115;
                                }
                                final Builder builder = this;
                                final LazyStringList list = builder.completion_;
                                final boolean b = list.isEmpty();
                                if (b) {
                                    break Label_0067;
                                }
                                break Label_0067;
                            }
                            catch (NullPointerException ex3) {
                                throw b(ex3);
                            }
                            try {
                                final Builder builder = this;
                                final LazyStringList list = builder.completion_;
                                final boolean b = list.isEmpty();
                                if (b) {
                                    this.completion_ = handleCompletion_Res.completion_;
                                    this.bitField0_ &= 0xFFFFFFFD;
                                    break Label_0111;
                                }
                            }
                            catch (NullPointerException ex4) {
                                throw b(ex4);
                            }
                        }
                        this.b();
                        this.completion_.addAll((Collection)handleCompletion_Res.completion_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(handleCompletion_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleCompletion_Res handleCompletion_Res = null;
                try {
                    handleCompletion_Res = (HandleCompletion_Res)HandleCompletion_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleCompletion_Res = (HandleCompletion_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleCompletion_Res != null) {
                            this.mergeFrom(handleCompletion_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private void b() {
                try {
                    if ((this.bitField0_ & 0x2) != 0x2) {
                        this.completion_ = (LazyStringList)new LazyStringArrayList(this.completion_);
                        this.bitField0_ |= 0x2;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            public List<String> getCompletionList() {
                return Collections.unmodifiableList((List<? extends String>)this.completion_);
            }
            
            public int getCompletionCount() {
                return this.completion_.size();
            }
            
            public String getCompletion(final int n) {
                return (String)this.completion_.get(n);
            }
            
            public ByteString getCompletionBytes(final int n) {
                return this.completion_.getByteString(n);
            }
            
            public Builder setCompletion(final int n, final String s) {
                try {
                    if (s == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.b();
                this.completion_.set(n, (Object)s);
                this.onChanged();
                return this;
            }
            
            public Builder addCompletion(final String s) {
                try {
                    if (s == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.b();
                this.completion_.add((Object)s);
                this.onChanged();
                return this;
            }
            
            public Builder addAllCompletion(final Iterable<String> iterable) {
                this.b();
                GeneratedMessage.Builder.addAll((Iterable)iterable, (Collection)this.completion_);
                this.onChanged();
                return this;
            }
            
            public Builder clearCompletion() {
                this.completion_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                this.onChanged();
                return this;
            }
            
            public Builder addCompletionBytes(final ByteString byteString) {
                try {
                    if (byteString == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.b();
                this.completion_.add(byteString);
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class ValuesFilteringPolicy_Req extends GeneratedMessage implements ValuesFilteringPolicy_ReqOrBuilder
    {
        private static final ValuesFilteringPolicy_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ValuesFilteringPolicy_Req> PARSER;
        private int bitField0_;
        public static final int FILTER_ENABLED_FIELD_NUMBER = 2;
        private int filterEnabled_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ValuesFilteringPolicy_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ValuesFilteringPolicy_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ValuesFilteringPolicy_Req getDefaultInstance() {
            return ValuesFilteringPolicy_Req.defaultInstance;
        }
        
        public ValuesFilteringPolicy_Req getDefaultInstanceForType() {
            return ValuesFilteringPolicy_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ValuesFilteringPolicy_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.filterEnabled_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ValuesFilteringPolicy_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ValuesFilteringPolicy_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ValuesFilteringPolicy_Req.class, (Class)Builder.class);
        }
        
        public Parser<ValuesFilteringPolicy_Req> getParserForType() {
            return ValuesFilteringPolicy_Req.PARSER;
        }
        
        public boolean hasFilterEnabled() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getFilterEnabled() {
            return this.filterEnabled_;
        }
        
        private void a() {
            this.filterEnabled_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasFilterEnabled()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.filterEnabled_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.filterEnabled_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(byteString);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(array);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final InputStream inputStream) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(inputStream);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ValuesFilteringPolicy_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static ValuesFilteringPolicy_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req) {
            return newBuilder().mergeFrom(valuesFilteringPolicy_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ValuesFilteringPolicy_Req.PARSER = (Parser<ValuesFilteringPolicy_Req>)new AbstractParser<ValuesFilteringPolicy_Req>() {
                public ValuesFilteringPolicy_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ValuesFilteringPolicy_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ValuesFilteringPolicy_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ValuesFilteringPolicy_ReqOrBuilder
        {
            private int bitField0_;
            private int filterEnabled_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ValuesFilteringPolicy_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ValuesFilteringPolicy_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ValuesFilteringPolicy_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (ValuesFilteringPolicy_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.filterEnabled_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ValuesFilteringPolicy_Req_descriptor;
            }
            
            public ValuesFilteringPolicy_Req getDefaultInstanceForType() {
                return ValuesFilteringPolicy_Req.getDefaultInstance();
            }
            
            public ValuesFilteringPolicy_Req build() {
                final ValuesFilteringPolicy_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public ValuesFilteringPolicy_Req buildPartial() {
                final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req = new ValuesFilteringPolicy_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                valuesFilteringPolicy_Req.filterEnabled_ = this.filterEnabled_;
                valuesFilteringPolicy_Req.bitField0_ = n;
                this.onBuilt();
                return valuesFilteringPolicy_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof ValuesFilteringPolicy_Req) {
                    return this.mergeFrom((ValuesFilteringPolicy_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req) {
                if (valuesFilteringPolicy_Req == ValuesFilteringPolicy_Req.getDefaultInstance()) {
                    return this;
                }
                if (valuesFilteringPolicy_Req.hasFilterEnabled()) {
                    this.setFilterEnabled(valuesFilteringPolicy_Req.getFilterEnabled());
                }
                this.mergeUnknownFields(valuesFilteringPolicy_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasFilterEnabled();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ValuesFilteringPolicy_Req valuesFilteringPolicy_Req = null;
                try {
                    valuesFilteringPolicy_Req = (ValuesFilteringPolicy_Req)ValuesFilteringPolicy_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    valuesFilteringPolicy_Req = (ValuesFilteringPolicy_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (valuesFilteringPolicy_Req != null) {
                            this.mergeFrom(valuesFilteringPolicy_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasFilterEnabled() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getFilterEnabled() {
                return this.filterEnabled_;
            }
            
            public Builder setFilterEnabled(final int filterEnabled_) {
                this.bitField0_ |= 0x1;
                this.filterEnabled_ = filterEnabled_;
                this.onChanged();
                return this;
            }
            
            public Builder clearFilterEnabled() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.filterEnabled_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class ValuesFilteringPolicy_Res extends GeneratedMessage implements ValuesFilteringPolicy_ResOrBuilder
    {
        private static final ValuesFilteringPolicy_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ValuesFilteringPolicy_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ValuesFilteringPolicy_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ValuesFilteringPolicy_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ValuesFilteringPolicy_Res getDefaultInstance() {
            return ValuesFilteringPolicy_Res.defaultInstance;
        }
        
        public ValuesFilteringPolicy_Res getDefaultInstanceForType() {
            return ValuesFilteringPolicy_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ValuesFilteringPolicy_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ValuesFilteringPolicy_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ValuesFilteringPolicy_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ValuesFilteringPolicy_Res.class, (Class)Builder.class);
        }
        
        public Parser<ValuesFilteringPolicy_Res> getParserForType() {
            return ValuesFilteringPolicy_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(byteString);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(array);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final InputStream inputStream) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(inputStream);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ValuesFilteringPolicy_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static ValuesFilteringPolicy_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res) {
            return newBuilder().mergeFrom(valuesFilteringPolicy_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ValuesFilteringPolicy_Res.PARSER = (Parser<ValuesFilteringPolicy_Res>)new AbstractParser<ValuesFilteringPolicy_Res>() {
                public ValuesFilteringPolicy_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ValuesFilteringPolicy_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ValuesFilteringPolicy_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ValuesFilteringPolicy_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ValuesFilteringPolicy_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ValuesFilteringPolicy_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ValuesFilteringPolicy_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (ValuesFilteringPolicy_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ValuesFilteringPolicy_Res_descriptor;
            }
            
            public ValuesFilteringPolicy_Res getDefaultInstanceForType() {
                return ValuesFilteringPolicy_Res.getDefaultInstance();
            }
            
            public ValuesFilteringPolicy_Res build() {
                final ValuesFilteringPolicy_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public ValuesFilteringPolicy_Res buildPartial() {
                final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res = new ValuesFilteringPolicy_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            valuesFilteringPolicy_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    valuesFilteringPolicy_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                valuesFilteringPolicy_Res.bitField0_ = n;
                this.onBuilt();
                return valuesFilteringPolicy_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof ValuesFilteringPolicy_Res) {
                        return this.mergeFrom((ValuesFilteringPolicy_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res) {
                try {
                    if (valuesFilteringPolicy_Res == ValuesFilteringPolicy_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (valuesFilteringPolicy_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(valuesFilteringPolicy_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(valuesFilteringPolicy_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ValuesFilteringPolicy_Res valuesFilteringPolicy_Res = null;
                try {
                    valuesFilteringPolicy_Res = (ValuesFilteringPolicy_Res)ValuesFilteringPolicy_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    valuesFilteringPolicy_Res = (ValuesFilteringPolicy_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (valuesFilteringPolicy_Res != null) {
                            this.mergeFrom(valuesFilteringPolicy_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class ConnectPlatform_Req extends GeneratedMessage implements ConnectPlatform_ReqOrBuilder
    {
        private static final ConnectPlatform_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ConnectPlatform_Req> PARSER;
        private int bitField0_;
        public static final int PLATFORM_FIELD_NUMBER = 2;
        private Object platform_;
        public static final int URL_FIELD_NUMBER = 3;
        private Object url_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ConnectPlatform_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ConnectPlatform_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ConnectPlatform_Req getDefaultInstance() {
            return ConnectPlatform_Req.defaultInstance;
        }
        
        public ConnectPlatform_Req getDefaultInstanceForType() {
            return ConnectPlatform_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ConnectPlatform_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.platform_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.url_ = codedInputStream.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ConnectPlatform_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ConnectPlatform_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ConnectPlatform_Req.class, (Class)Builder.class);
        }
        
        public Parser<ConnectPlatform_Req> getParserForType() {
            return ConnectPlatform_Req.PARSER;
        }
        
        public boolean hasPlatform() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getPlatform() {
            final Object platform_ = this.platform_;
            if (platform_ instanceof String) {
                return (String)platform_;
            }
            final ByteString byteString = (ByteString)platform_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.platform_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getPlatformBytes() {
            final Object platform_ = this.platform_;
            if (platform_ instanceof String) {
                return (ByteString)(this.platform_ = ByteString.copyFromUtf8((String)platform_));
            }
            return (ByteString)platform_;
        }
        
        public boolean hasUrl() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getUrl() {
            final Object url_ = this.url_;
            if (url_ instanceof String) {
                return (String)url_;
            }
            final ByteString byteString = (ByteString)url_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.url_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getUrlBytes() {
            final Object url_ = this.url_;
            if (url_ instanceof String) {
                return (ByteString)(this.url_ = ByteString.copyFromUtf8((String)url_));
            }
            return (ByteString)url_;
        }
        
        private void a() {
            this.platform_ = "";
            this.url_ = "";
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasPlatform()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasUrl()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getPlatformBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getUrlBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getPlatformBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getUrlBytes());
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ConnectPlatform_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(byteString);
        }
        
        public static ConnectPlatform_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(array);
        }
        
        public static ConnectPlatform_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Req parseFrom(final InputStream inputStream) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(inputStream);
        }
        
        public static ConnectPlatform_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ConnectPlatform_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static ConnectPlatform_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ConnectPlatform_Req connectPlatform_Req) {
            return newBuilder().mergeFrom(connectPlatform_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ConnectPlatform_Req.PARSER = (Parser<ConnectPlatform_Req>)new AbstractParser<ConnectPlatform_Req>() {
                public ConnectPlatform_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ConnectPlatform_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ConnectPlatform_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ConnectPlatform_ReqOrBuilder
        {
            private int bitField0_;
            private Object platform_;
            private Object url_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ConnectPlatform_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ConnectPlatform_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ConnectPlatform_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.platform_ = "";
                this.url_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.platform_ = "";
                this.url_ = "";
                this.a();
            }
            
            private void a() {
                if (ConnectPlatform_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.platform_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.url_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ConnectPlatform_Req_descriptor;
            }
            
            public ConnectPlatform_Req getDefaultInstanceForType() {
                return ConnectPlatform_Req.getDefaultInstance();
            }
            
            public ConnectPlatform_Req build() {
                final ConnectPlatform_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public ConnectPlatform_Req buildPartial() {
                final ConnectPlatform_Req connectPlatform_Req = new ConnectPlatform_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                connectPlatform_Req.platform_ = this.platform_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                connectPlatform_Req.url_ = this.url_;
                connectPlatform_Req.bitField0_ = n;
                this.onBuilt();
                return connectPlatform_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof ConnectPlatform_Req) {
                        return this.mergeFrom((ConnectPlatform_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ConnectPlatform_Req connectPlatform_Req) {
                try {
                    if (connectPlatform_Req == ConnectPlatform_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (connectPlatform_Req.hasPlatform()) {
                        this.bitField0_ |= 0x1;
                        this.platform_ = connectPlatform_Req.platform_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (connectPlatform_Req.hasUrl()) {
                        this.bitField0_ |= 0x2;
                        this.url_ = connectPlatform_Req.url_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(connectPlatform_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasPlatform()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasUrl()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ConnectPlatform_Req connectPlatform_Req = null;
                try {
                    connectPlatform_Req = (ConnectPlatform_Req)ConnectPlatform_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    connectPlatform_Req = (ConnectPlatform_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (connectPlatform_Req != null) {
                            this.mergeFrom(connectPlatform_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasPlatform() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getPlatform() {
                final Object platform_ = this.platform_;
                if (!(platform_ instanceof String)) {
                    return (String)(this.platform_ = ((ByteString)platform_).toStringUtf8());
                }
                return (String)platform_;
            }
            
            public ByteString getPlatformBytes() {
                final Object platform_ = this.platform_;
                if (platform_ instanceof String) {
                    return (ByteString)(this.platform_ = ByteString.copyFromUtf8((String)platform_));
                }
                return (ByteString)platform_;
            }
            
            public Builder setPlatform(final String platform_) {
                try {
                    if (platform_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.platform_ = platform_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPlatform() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.platform_ = ConnectPlatform_Req.getDefaultInstance().getPlatform();
                this.onChanged();
                return this;
            }
            
            public Builder setPlatformBytes(final ByteString platform_) {
                try {
                    if (platform_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.platform_ = platform_;
                this.onChanged();
                return this;
            }
            
            public boolean hasUrl() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getUrl() {
                final Object url_ = this.url_;
                if (!(url_ instanceof String)) {
                    return (String)(this.url_ = ((ByteString)url_).toStringUtf8());
                }
                return (String)url_;
            }
            
            public ByteString getUrlBytes() {
                final Object url_ = this.url_;
                if (url_ instanceof String) {
                    return (ByteString)(this.url_ = ByteString.copyFromUtf8((String)url_));
                }
                return (ByteString)url_;
            }
            
            public Builder setUrl(final String url_) {
                try {
                    if (url_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.url_ = url_;
                this.onChanged();
                return this;
            }
            
            public Builder clearUrl() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.url_ = ConnectPlatform_Req.getDefaultInstance().getUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setUrlBytes(final ByteString url_) {
                try {
                    if (url_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.url_ = url_;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class ConnectPlatform_Res extends GeneratedMessage implements ConnectPlatform_ResOrBuilder
    {
        private static final ConnectPlatform_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ConnectPlatform_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ConnectPlatform_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ConnectPlatform_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ConnectPlatform_Res getDefaultInstance() {
            return ConnectPlatform_Res.defaultInstance;
        }
        
        public ConnectPlatform_Res getDefaultInstanceForType() {
            return ConnectPlatform_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ConnectPlatform_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ConnectPlatform_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ConnectPlatform_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ConnectPlatform_Res.class, (Class)Builder.class);
        }
        
        public Parser<ConnectPlatform_Res> getParserForType() {
            return ConnectPlatform_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ConnectPlatform_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(byteString);
        }
        
        public static ConnectPlatform_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(array);
        }
        
        public static ConnectPlatform_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Res parseFrom(final InputStream inputStream) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(inputStream);
        }
        
        public static ConnectPlatform_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ConnectPlatform_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ConnectPlatform_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static ConnectPlatform_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ConnectPlatform_Res connectPlatform_Res) {
            return newBuilder().mergeFrom(connectPlatform_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ConnectPlatform_Res.PARSER = (Parser<ConnectPlatform_Res>)new AbstractParser<ConnectPlatform_Res>() {
                public ConnectPlatform_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ConnectPlatform_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ConnectPlatform_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ConnectPlatform_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ConnectPlatform_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ConnectPlatform_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ConnectPlatform_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.a();
            }
            
            private void a() {
                try {
                    if (ConnectPlatform_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ConnectPlatform_Res_descriptor;
            }
            
            public ConnectPlatform_Res getDefaultInstanceForType() {
                return ConnectPlatform_Res.getDefaultInstance();
            }
            
            public ConnectPlatform_Res build() {
                final ConnectPlatform_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public ConnectPlatform_Res buildPartial() {
                final ConnectPlatform_Res connectPlatform_Res = new ConnectPlatform_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            connectPlatform_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    connectPlatform_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                connectPlatform_Res.bitField0_ = n;
                this.onBuilt();
                return connectPlatform_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof ConnectPlatform_Res) {
                        return this.mergeFrom((ConnectPlatform_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ConnectPlatform_Res connectPlatform_Res) {
                try {
                    if (connectPlatform_Res == ConnectPlatform_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (connectPlatform_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(connectPlatform_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(connectPlatform_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ConnectPlatform_Res connectPlatform_Res = null;
                try {
                    connectPlatform_Res = (ConnectPlatform_Res)ConnectPlatform_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    connectPlatform_Res = (ConnectPlatform_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (connectPlatform_Res != null) {
                            this.mergeFrom(connectPlatform_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class Exit_Req extends GeneratedMessage implements Exit_ReqOrBuilder
    {
        private static final Exit_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<Exit_Req> PARSER;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private Exit_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private Exit_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static Exit_Req getDefaultInstance() {
            return Exit_Req.defaultInstance;
        }
        
        public Exit_Req getDefaultInstanceForType() {
            return Exit_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private Exit_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_Exit_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_Exit_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Exit_Req.class, (Class)Builder.class);
        }
        
        public Parser<Exit_Req> getParserForType() {
            return Exit_Req.PARSER;
        }
        
        private void a() {
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            this.getSerializedSize();
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            return this.memoizedSerializedSize = 0 + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static Exit_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(byteString);
        }
        
        public static Exit_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static Exit_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(array);
        }
        
        public static Exit_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static Exit_Req parseFrom(final InputStream inputStream) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(inputStream);
        }
        
        public static Exit_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static Exit_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static Exit_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static Exit_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static Exit_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (Exit_Req)Exit_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final Exit_Req exit_Req) {
            return newBuilder().mergeFrom(exit_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            Exit_Req.PARSER = (Parser<Exit_Req>)new AbstractParser<Exit_Req>() {
                public Exit_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new Exit_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new Exit_Req(true)).a();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements Exit_ReqOrBuilder
        {
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_Exit_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_Exit_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Exit_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.b();
            }
            
            private void b() {
                if (Exit_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_Exit_Req_descriptor;
            }
            
            public Exit_Req getDefaultInstanceForType() {
                return Exit_Req.getDefaultInstance();
            }
            
            public Exit_Req build() {
                final Exit_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public Exit_Req buildPartial() {
                final Exit_Req exit_Req = new Exit_Req((GeneratedMessage.Builder)this);
                this.onBuilt();
                return exit_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof Exit_Req) {
                    return this.mergeFrom((Exit_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final Exit_Req exit_Req) {
                if (exit_Req == Exit_Req.getDefaultInstance()) {
                    return this;
                }
                this.mergeUnknownFields(exit_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                Exit_Req exit_Req = null;
                try {
                    exit_Req = (Exit_Req)Exit_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    exit_Req = (Exit_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (exit_Req != null) {
                            this.mergeFrom(exit_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueAddress_Req extends GeneratedMessage implements GetValueAddress_ReqOrBuilder
    {
        private static final GetValueAddress_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueAddress_Req> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 2;
        private int id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueAddress_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueAddress_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueAddress_Req getDefaultInstance() {
            return GetValueAddress_Req.defaultInstance;
        }
        
        public GetValueAddress_Req getDefaultInstanceForType() {
            return GetValueAddress_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueAddress_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x1;
                            this.id_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueAddress_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueAddress_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueAddress_Req.class, (Class)Builder.class);
        }
        
        public Parser<GetValueAddress_Req> getParserForType() {
            return GetValueAddress_Req.PARSER;
        }
        
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public int getId() {
            return this.id_;
        }
        
        private void a() {
            this.id_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasId()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeInt32(2, this.id_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeInt32Size(2, this.id_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueAddress_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(byteString);
        }
        
        public static GetValueAddress_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueAddress_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(array);
        }
        
        public static GetValueAddress_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueAddress_Req parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueAddress_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueAddress_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueAddress_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueAddress_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueAddress_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Req)GetValueAddress_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueAddress_Req getValueAddress_Req) {
            return newBuilder().mergeFrom(getValueAddress_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueAddress_Req.PARSER = (Parser<GetValueAddress_Req>)new AbstractParser<GetValueAddress_Req>() {
                public GetValueAddress_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueAddress_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueAddress_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueAddress_ReqOrBuilder
        {
            private int bitField0_;
            private int id_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueAddress_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueAddress_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueAddress_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.a();
            }
            
            private void a() {
                if (GetValueAddress_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueAddress_Req_descriptor;
            }
            
            public GetValueAddress_Req getDefaultInstanceForType() {
                return GetValueAddress_Req.getDefaultInstance();
            }
            
            public GetValueAddress_Req build() {
                final GetValueAddress_Req buildPartial = this.buildPartial();
                if (!buildPartial.isInitialized()) {
                    throw newUninitializedMessageException((Message)buildPartial);
                }
                return buildPartial;
            }
            
            public GetValueAddress_Req buildPartial() {
                final GetValueAddress_Req getValueAddress_Req = new GetValueAddress_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                getValueAddress_Req.id_ = this.id_;
                getValueAddress_Req.bitField0_ = n;
                this.onBuilt();
                return getValueAddress_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                if (message instanceof GetValueAddress_Req) {
                    return this.mergeFrom((GetValueAddress_Req)message);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueAddress_Req getValueAddress_Req) {
                if (getValueAddress_Req == GetValueAddress_Req.getDefaultInstance()) {
                    return this;
                }
                if (getValueAddress_Req.hasId()) {
                    this.setId(getValueAddress_Req.getId());
                }
                this.mergeUnknownFields(getValueAddress_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                return this.hasId();
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueAddress_Req getValueAddress_Req = null;
                try {
                    getValueAddress_Req = (GetValueAddress_Req)GetValueAddress_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueAddress_Req = (GetValueAddress_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueAddress_Req != null) {
                            this.mergeFrom(getValueAddress_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b(ex2);
                    }
                }
                return this;
            }
            
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int id_) {
                this.bitField0_ |= 0x1;
                this.id_ = id_;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            private static InvalidProtocolBufferException b(final InvalidProtocolBufferException ex) {
                return ex;
            }
        }
    }
    
    public static final class GetValueAddress_Res extends GeneratedMessage implements GetValueAddress_ResOrBuilder
    {
        private static final GetValueAddress_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<GetValueAddress_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int ADDRESS_FIELD_NUMBER = 2;
        private long address_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private GetValueAddress_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private GetValueAddress_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static GetValueAddress_Res getDefaultInstance() {
            return GetValueAddress_Res.defaultInstance;
        }
        
        public GetValueAddress_Res getDefaultInstanceForType() {
            return GetValueAddress_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private GetValueAddress_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.address_ = codedInputStream.readUInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_GetValueAddress_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_GetValueAddress_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueAddress_Res.class, (Class)Builder.class);
        }
        
        public Parser<GetValueAddress_Res> getParserForType() {
            return GetValueAddress_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasAddress() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public long getAddress() {
            return this.address_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.address_ = 0L;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasAddress()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeUInt64(2, this.address_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeUInt64Size(2, this.address_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static GetValueAddress_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(byteString);
        }
        
        public static GetValueAddress_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static GetValueAddress_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(array);
        }
        
        public static GetValueAddress_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static GetValueAddress_Res parseFrom(final InputStream inputStream) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(inputStream);
        }
        
        public static GetValueAddress_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueAddress_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static GetValueAddress_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static GetValueAddress_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static GetValueAddress_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (GetValueAddress_Res)GetValueAddress_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final GetValueAddress_Res getValueAddress_Res) {
            return newBuilder().mergeFrom(getValueAddress_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            GetValueAddress_Res.PARSER = (Parser<GetValueAddress_Res>)new AbstractParser<GetValueAddress_Res>() {
                public GetValueAddress_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new GetValueAddress_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new GetValueAddress_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements GetValueAddress_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private long address_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_GetValueAddress_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_GetValueAddress_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GetValueAddress_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (GetValueAddress_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.address_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_GetValueAddress_Res_descriptor;
            }
            
            public GetValueAddress_Res getDefaultInstanceForType() {
                return GetValueAddress_Res.getDefaultInstance();
            }
            
            public GetValueAddress_Res build() {
                final GetValueAddress_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public GetValueAddress_Res buildPartial() {
                final GetValueAddress_Res getValueAddress_Res = new GetValueAddress_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            getValueAddress_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    getValueAddress_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                getValueAddress_Res.address_ = this.address_;
                getValueAddress_Res.bitField0_ = n;
                this.onBuilt();
                return getValueAddress_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof GetValueAddress_Res) {
                        return this.mergeFrom((GetValueAddress_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final GetValueAddress_Res getValueAddress_Res) {
                try {
                    if (getValueAddress_Res == GetValueAddress_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (getValueAddress_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(getValueAddress_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (getValueAddress_Res.hasAddress()) {
                        this.setAddress(getValueAddress_Res.getAddress());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                this.mergeUnknownFields(getValueAddress_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasAddress()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                GetValueAddress_Res getValueAddress_Res = null;
                try {
                    getValueAddress_Res = (GetValueAddress_Res)GetValueAddress_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    getValueAddress_Res = (GetValueAddress_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (getValueAddress_Res != null) {
                            this.mergeFrom(getValueAddress_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasAddress() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public long getAddress() {
                return this.address_;
            }
            
            public Builder setAddress(final long address_) {
                this.bitField0_ |= 0x2;
                this.address_ = address_;
                this.onChanged();
                return this;
            }
            
            public Builder clearAddress() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.address_ = 0L;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleSignal_Req extends GeneratedMessage implements HandleSignal_ReqOrBuilder
    {
        private static final HandleSignal_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleSignal_Req> PARSER;
        private int bitField0_;
        public static final int SIGNAL_FIELD_NUMBER = 2;
        private Object signal_;
        public static final int STOP_FIELD_NUMBER = 3;
        private boolean stop_;
        public static final int PASS_FIELD_NUMBER = 4;
        private boolean pass_;
        public static final int NOTIFY_FIELD_NUMBER = 5;
        private boolean notify_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleSignal_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleSignal_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleSignal_Req getDefaultInstance() {
            return HandleSignal_Req.defaultInstance;
        }
        
        public HandleSignal_Req getDefaultInstanceForType() {
            return HandleSignal_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleSignal_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.signal_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x2;
                            this.stop_ = codedInputStream.readBool();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.pass_ = codedInputStream.readBool();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x8;
                            this.notify_ = codedInputStream.readBool();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleSignal_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleSignal_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleSignal_Req.class, (Class)Builder.class);
        }
        
        public Parser<HandleSignal_Req> getParserForType() {
            return HandleSignal_Req.PARSER;
        }
        
        public boolean hasSignal() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getSignal() {
            final Object signal_ = this.signal_;
            if (signal_ instanceof String) {
                return (String)signal_;
            }
            final ByteString byteString = (ByteString)signal_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.signal_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getSignalBytes() {
            final Object signal_ = this.signal_;
            if (signal_ instanceof String) {
                return (ByteString)(this.signal_ = ByteString.copyFromUtf8((String)signal_));
            }
            return (ByteString)signal_;
        }
        
        public boolean hasStop() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public boolean getStop() {
            return this.stop_;
        }
        
        public boolean hasPass() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public boolean getPass() {
            return this.pass_;
        }
        
        public boolean hasNotify() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public boolean getNotify() {
            return this.notify_;
        }
        
        private void a() {
            this.signal_ = "";
            this.stop_ = false;
            this.pass_ = false;
            this.notify_ = false;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasSignal()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasStop()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasPass()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.hasNotify()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getSignalBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBool(3, this.stop_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeBool(4, this.pass_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeBool(5, this.notify_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getSignalBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBoolSize(3, this.stop_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeBoolSize(4, this.pass_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeBoolSize(5, this.notify_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleSignal_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(byteString);
        }
        
        public static HandleSignal_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleSignal_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(array);
        }
        
        public static HandleSignal_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleSignal_Req parseFrom(final InputStream inputStream) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(inputStream);
        }
        
        public static HandleSignal_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleSignal_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleSignal_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleSignal_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleSignal_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Req)HandleSignal_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return b();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleSignal_Req handleSignal_Req) {
            return newBuilder().mergeFrom(handleSignal_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleSignal_Req.PARSER = (Parser<HandleSignal_Req>)new AbstractParser<HandleSignal_Req>() {
                public HandleSignal_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleSignal_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleSignal_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleSignal_ReqOrBuilder
        {
            private int bitField0_;
            private Object signal_;
            private boolean stop_;
            private boolean pass_;
            private boolean notify_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleSignal_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleSignal_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleSignal_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.signal_ = "";
                this.a();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.signal_ = "";
                this.a();
            }
            
            private void a() {
                if (HandleSignal_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder b() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.signal_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.stop_ = false;
                this.bitField0_ &= 0xFFFFFFFD;
                this.pass_ = false;
                this.bitField0_ &= 0xFFFFFFFB;
                this.notify_ = false;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return b().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleSignal_Req_descriptor;
            }
            
            public HandleSignal_Req getDefaultInstanceForType() {
                return HandleSignal_Req.getDefaultInstance();
            }
            
            public HandleSignal_Req build() {
                final HandleSignal_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleSignal_Req buildPartial() {
                final HandleSignal_Req handleSignal_Req = new HandleSignal_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                handleSignal_Req.signal_ = this.signal_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                handleSignal_Req.stop_ = this.stop_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                handleSignal_Req.pass_ = this.pass_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                handleSignal_Req.notify_ = this.notify_;
                handleSignal_Req.bitField0_ = n;
                this.onBuilt();
                return handleSignal_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleSignal_Req) {
                        return this.mergeFrom((HandleSignal_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleSignal_Req handleSignal_Req) {
                try {
                    if (handleSignal_Req == HandleSignal_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleSignal_Req.hasSignal()) {
                        this.bitField0_ |= 0x1;
                        this.signal_ = handleSignal_Req.signal_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (handleSignal_Req.hasStop()) {
                        this.setStop(handleSignal_Req.getStop());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (handleSignal_Req.hasPass()) {
                        this.setPass(handleSignal_Req.getPass());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (handleSignal_Req.hasNotify()) {
                        this.setNotify(handleSignal_Req.getNotify());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                this.mergeUnknownFields(handleSignal_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasSignal()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.hasStop()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (!this.hasPass()) {
                        return false;
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (!this.hasNotify()) {
                        return false;
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleSignal_Req handleSignal_Req = null;
                try {
                    handleSignal_Req = (HandleSignal_Req)HandleSignal_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleSignal_Req = (HandleSignal_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleSignal_Req != null) {
                            this.mergeFrom(handleSignal_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasSignal() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getSignal() {
                final Object signal_ = this.signal_;
                if (!(signal_ instanceof String)) {
                    return (String)(this.signal_ = ((ByteString)signal_).toStringUtf8());
                }
                return (String)signal_;
            }
            
            public ByteString getSignalBytes() {
                final Object signal_ = this.signal_;
                if (signal_ instanceof String) {
                    return (ByteString)(this.signal_ = ByteString.copyFromUtf8((String)signal_));
                }
                return (ByteString)signal_;
            }
            
            public Builder setSignal(final String signal_) {
                try {
                    if (signal_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.signal_ = signal_;
                this.onChanged();
                return this;
            }
            
            public Builder clearSignal() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.signal_ = HandleSignal_Req.getDefaultInstance().getSignal();
                this.onChanged();
                return this;
            }
            
            public Builder setSignalBytes(final ByteString signal_) {
                try {
                    if (signal_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.signal_ = signal_;
                this.onChanged();
                return this;
            }
            
            public boolean hasStop() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getStop() {
                return this.stop_;
            }
            
            public Builder setStop(final boolean stop_) {
                this.bitField0_ |= 0x2;
                this.stop_ = stop_;
                this.onChanged();
                return this;
            }
            
            public Builder clearStop() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.stop_ = false;
                this.onChanged();
                return this;
            }
            
            public boolean hasPass() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getPass() {
                return this.pass_;
            }
            
            public Builder setPass(final boolean pass_) {
                this.bitField0_ |= 0x4;
                this.pass_ = pass_;
                this.onChanged();
                return this;
            }
            
            public Builder clearPass() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.pass_ = false;
                this.onChanged();
                return this;
            }
            
            public boolean hasNotify() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public boolean getNotify() {
                return this.notify_;
            }
            
            public Builder setNotify(final boolean notify_) {
                this.bitField0_ |= 0x8;
                this.notify_ = notify_;
                this.onChanged();
                return this;
            }
            
            public Builder clearNotify() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.notify_ = false;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class HandleSignal_Res extends GeneratedMessage implements HandleSignal_ResOrBuilder
    {
        private static final HandleSignal_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<HandleSignal_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private HandleSignal_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private HandleSignal_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static HandleSignal_Res getDefaultInstance() {
            return HandleSignal_Res.defaultInstance;
        }
        
        public HandleSignal_Res getDefaultInstanceForType() {
            return HandleSignal_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private HandleSignal_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_HandleSignal_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_HandleSignal_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleSignal_Res.class, (Class)Builder.class);
        }
        
        public Parser<HandleSignal_Res> getParserForType() {
            return HandleSignal_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static HandleSignal_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(byteString);
        }
        
        public static HandleSignal_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static HandleSignal_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(array);
        }
        
        public static HandleSignal_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static HandleSignal_Res parseFrom(final InputStream inputStream) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(inputStream);
        }
        
        public static HandleSignal_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleSignal_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static HandleSignal_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static HandleSignal_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static HandleSignal_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (HandleSignal_Res)HandleSignal_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return c();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final HandleSignal_Res handleSignal_Res) {
            return newBuilder().mergeFrom(handleSignal_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            HandleSignal_Res.PARSER = (Parser<HandleSignal_Res>)new AbstractParser<HandleSignal_Res>() {
                public HandleSignal_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new HandleSignal_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new HandleSignal_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements HandleSignal_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_HandleSignal_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_HandleSignal_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)HandleSignal_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.b();
            }
            
            private void b() {
                try {
                    if (HandleSignal_Res.alwaysUseFieldBuilders) {
                        this.a();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder c() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return c().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_HandleSignal_Res_descriptor;
            }
            
            public HandleSignal_Res getDefaultInstanceForType() {
                return HandleSignal_Res.getDefaultInstance();
            }
            
            public HandleSignal_Res build() {
                final HandleSignal_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public HandleSignal_Res buildPartial() {
                final HandleSignal_Res handleSignal_Res = new HandleSignal_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            handleSignal_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    handleSignal_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                handleSignal_Res.bitField0_ = n;
                this.onBuilt();
                return handleSignal_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof HandleSignal_Res) {
                        return this.mergeFrom((HandleSignal_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final HandleSignal_Res handleSignal_Res) {
                try {
                    if (handleSignal_Res == HandleSignal_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (handleSignal_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(handleSignal_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                this.mergeUnknownFields(handleSignal_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                HandleSignal_Res handleSignal_Res = null;
                try {
                    handleSignal_Res = (HandleSignal_Res)HandleSignal_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    handleSignal_Res = (HandleSignal_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (handleSignal_Res != null) {
                            this.mergeFrom(handleSignal_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.a().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> a() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class ExecuteShellCommand_Req extends GeneratedMessage implements ExecuteShellCommand_ReqOrBuilder
    {
        private static final ExecuteShellCommand_Req defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ExecuteShellCommand_Req> PARSER;
        private int bitField0_;
        public static final int COMMAND_FIELD_NUMBER = 2;
        private Object command_;
        public static final int WORKING_DIR_FIELD_NUMBER = 3;
        private Object workingDir_;
        public static final int TIMEOUT_SECS_FIELD_NUMBER = 4;
        private int timeoutSecs_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ExecuteShellCommand_Req(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ExecuteShellCommand_Req(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ExecuteShellCommand_Req getDefaultInstance() {
            return ExecuteShellCommand_Req.defaultInstance;
        }
        
        public ExecuteShellCommand_Req getDefaultInstanceForType() {
            return ExecuteShellCommand_Req.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ExecuteShellCommand_Req(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.command_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x2;
                            this.workingDir_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x4;
                            this.timeoutSecs_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex) {
                throw ex.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex2) {
                throw new InvalidProtocolBufferException(ex2.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ExecuteShellCommand_Req_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ExecuteShellCommand_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExecuteShellCommand_Req.class, (Class)Builder.class);
        }
        
        public Parser<ExecuteShellCommand_Req> getParserForType() {
            return ExecuteShellCommand_Req.PARSER;
        }
        
        public boolean hasCommand() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public String getCommand() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (String)command_;
            }
            final ByteString byteString = (ByteString)command_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.command_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getCommandBytes() {
            final Object command_ = this.command_;
            if (command_ instanceof String) {
                return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
            }
            return (ByteString)command_;
        }
        
        public boolean hasWorkingDir() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getWorkingDir() {
            final Object workingDir_ = this.workingDir_;
            if (workingDir_ instanceof String) {
                return (String)workingDir_;
            }
            final ByteString byteString = (ByteString)workingDir_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.workingDir_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getWorkingDirBytes() {
            final Object workingDir_ = this.workingDir_;
            if (workingDir_ instanceof String) {
                return (ByteString)(this.workingDir_ = ByteString.copyFromUtf8((String)workingDir_));
            }
            return (ByteString)workingDir_;
        }
        
        public boolean hasTimeoutSecs() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getTimeoutSecs() {
            return this.timeoutSecs_;
        }
        
        private void a() {
            this.command_ = "";
            this.workingDir_ = "";
            this.timeoutSecs_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommand()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeBytes(2, this.getCommandBytes());
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(3, this.getWorkingDirBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(4, this.timeoutSecs_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeBytesSize(2, this.getCommandBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(3, this.getWorkingDirBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(4, this.timeoutSecs_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ExecuteShellCommand_Req parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(byteString);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(array);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final InputStream inputStream) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(inputStream);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Req parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ExecuteShellCommand_Req parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(codedInputStream);
        }
        
        public static ExecuteShellCommand_Req parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ExecuteShellCommand_Req executeShellCommand_Req) {
            return newBuilder().mergeFrom(executeShellCommand_Req);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ExecuteShellCommand_Req.PARSER = (Parser<ExecuteShellCommand_Req>)new AbstractParser<ExecuteShellCommand_Req>() {
                public ExecuteShellCommand_Req parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ExecuteShellCommand_Req(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ExecuteShellCommand_Req(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ExecuteShellCommand_ReqOrBuilder
        {
            private int bitField0_;
            private Object command_;
            private Object workingDir_;
            private int timeoutSecs_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ExecuteShellCommand_Req_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ExecuteShellCommand_Req_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExecuteShellCommand_Req.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.command_ = "";
                this.workingDir_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.command_ = "";
                this.workingDir_ = "";
                this.b();
            }
            
            private void b() {
                if (ExecuteShellCommand_Req.alwaysUseFieldBuilders) {}
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                super.clear();
                this.command_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.workingDir_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.timeoutSecs_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ExecuteShellCommand_Req_descriptor;
            }
            
            public ExecuteShellCommand_Req getDefaultInstanceForType() {
                return ExecuteShellCommand_Req.getDefaultInstance();
            }
            
            public ExecuteShellCommand_Req build() {
                final ExecuteShellCommand_Req buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public ExecuteShellCommand_Req buildPartial() {
                final ExecuteShellCommand_Req executeShellCommand_Req = new ExecuteShellCommand_Req((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                executeShellCommand_Req.command_ = this.command_;
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                executeShellCommand_Req.workingDir_ = this.workingDir_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                executeShellCommand_Req.timeoutSecs_ = this.timeoutSecs_;
                executeShellCommand_Req.bitField0_ = n;
                this.onBuilt();
                return executeShellCommand_Req;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof ExecuteShellCommand_Req) {
                        return this.mergeFrom((ExecuteShellCommand_Req)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ExecuteShellCommand_Req executeShellCommand_Req) {
                try {
                    if (executeShellCommand_Req == ExecuteShellCommand_Req.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (executeShellCommand_Req.hasCommand()) {
                        this.bitField0_ |= 0x1;
                        this.command_ = executeShellCommand_Req.command_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (executeShellCommand_Req.hasWorkingDir()) {
                        this.bitField0_ |= 0x2;
                        this.workingDir_ = executeShellCommand_Req.workingDir_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (executeShellCommand_Req.hasTimeoutSecs()) {
                        this.setTimeoutSecs(executeShellCommand_Req.getTimeoutSecs());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                this.mergeUnknownFields(executeShellCommand_Req.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommand()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ExecuteShellCommand_Req executeShellCommand_Req = null;
                try {
                    executeShellCommand_Req = (ExecuteShellCommand_Req)ExecuteShellCommand_Req.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    executeShellCommand_Req = (ExecuteShellCommand_Req)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (executeShellCommand_Req != null) {
                            this.mergeFrom(executeShellCommand_Req);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommand() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getCommand() {
                final Object command_ = this.command_;
                if (!(command_ instanceof String)) {
                    return (String)(this.command_ = ((ByteString)command_).toStringUtf8());
                }
                return (String)command_;
            }
            
            public ByteString getCommandBytes() {
                final Object command_ = this.command_;
                if (command_ instanceof String) {
                    return (ByteString)(this.command_ = ByteString.copyFromUtf8((String)command_));
                }
                return (ByteString)command_;
            }
            
            public Builder setCommand(final String command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            public Builder clearCommand() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.command_ = ExecuteShellCommand_Req.getDefaultInstance().getCommand();
                this.onChanged();
                return this;
            }
            
            public Builder setCommandBytes(final ByteString command_) {
                try {
                    if (command_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x1;
                this.command_ = command_;
                this.onChanged();
                return this;
            }
            
            public boolean hasWorkingDir() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getWorkingDir() {
                final Object workingDir_ = this.workingDir_;
                if (!(workingDir_ instanceof String)) {
                    return (String)(this.workingDir_ = ((ByteString)workingDir_).toStringUtf8());
                }
                return (String)workingDir_;
            }
            
            public ByteString getWorkingDirBytes() {
                final Object workingDir_ = this.workingDir_;
                if (workingDir_ instanceof String) {
                    return (ByteString)(this.workingDir_ = ByteString.copyFromUtf8((String)workingDir_));
                }
                return (ByteString)workingDir_;
            }
            
            public Builder setWorkingDir(final String workingDir_) {
                try {
                    if (workingDir_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.workingDir_ = workingDir_;
                this.onChanged();
                return this;
            }
            
            public Builder clearWorkingDir() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.workingDir_ = ExecuteShellCommand_Req.getDefaultInstance().getWorkingDir();
                this.onChanged();
                return this;
            }
            
            public Builder setWorkingDirBytes(final ByteString workingDir_) {
                try {
                    if (workingDir_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.workingDir_ = workingDir_;
                this.onChanged();
                return this;
            }
            
            public boolean hasTimeoutSecs() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getTimeoutSecs() {
                return this.timeoutSecs_;
            }
            
            public Builder setTimeoutSecs(final int timeoutSecs_) {
                this.bitField0_ |= 0x4;
                this.timeoutSecs_ = timeoutSecs_;
                this.onChanged();
                return this;
            }
            
            public Builder clearTimeoutSecs() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.timeoutSecs_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class ExecuteShellCommand_Res extends GeneratedMessage implements ExecuteShellCommand_ResOrBuilder
    {
        private static final ExecuteShellCommand_Res defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ExecuteShellCommand_Res> PARSER;
        private int bitField0_;
        public static final int COMMON_RESPONSE_FIELD_NUMBER = 1;
        private CommonResponse commonResponse_;
        public static final int OUTPUT_FIELD_NUMBER = 2;
        private Object output_;
        public static final int STATUS_FIELD_NUMBER = 3;
        private int status_;
        public static final int SIGNAL_FIELD_NUMBER = 4;
        private int signal_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private ExecuteShellCommand_Res(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ExecuteShellCommand_Res(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ExecuteShellCommand_Res getDefaultInstance() {
            return ExecuteShellCommand_Res.defaultInstance;
        }
        
        public ExecuteShellCommand_Res getDefaultInstanceForType() {
            return ExecuteShellCommand_Res.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ExecuteShellCommand_Res(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CommonResponse.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.commonResponse_.toBuilder();
                            }
                            try {
                                this.commonResponse_ = (CommonResponse)codedInputStream.readMessage((Parser)CommonResponse.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.commonResponse_);
                                    this.commonResponse_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.output_ = codedInputStream.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.status_ = codedInputStream.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x8;
                            this.signal_ = codedInputStream.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex2) {
                throw ex2.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex3) {
                throw new InvalidProtocolBufferException(ex3.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_ExecuteShellCommand_Res_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_ExecuteShellCommand_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExecuteShellCommand_Res.class, (Class)Builder.class);
        }
        
        public Parser<ExecuteShellCommand_Res> getParserForType() {
            return ExecuteShellCommand_Res.PARSER;
        }
        
        public boolean hasCommonResponse() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CommonResponse getCommonResponse() {
            return this.commonResponse_;
        }
        
        public CommonResponseOrBuilder getCommonResponseOrBuilder() {
            return this.commonResponse_;
        }
        
        public boolean hasOutput() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public String getOutput() {
            final Object output_ = this.output_;
            if (output_ instanceof String) {
                return (String)output_;
            }
            final ByteString byteString = (ByteString)output_;
            final String stringUtf8 = byteString.toStringUtf8();
            if (byteString.isValidUtf8()) {
                this.output_ = stringUtf8;
            }
            return stringUtf8;
        }
        
        public ByteString getOutputBytes() {
            final Object output_ = this.output_;
            if (output_ instanceof String) {
                return (ByteString)(this.output_ = ByteString.copyFromUtf8((String)output_));
            }
            return (ByteString)output_;
        }
        
        public boolean hasStatus() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public int getStatus() {
            return this.status_;
        }
        
        public boolean hasSignal() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public int getSignal() {
            return this.signal_;
        }
        
        private void a() {
            this.commonResponse_ = CommonResponse.getDefaultInstance();
            this.output_ = "";
            this.status_ = 0;
            this.signal_ = 0;
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (!this.hasCommonResponse()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (!this.getCommonResponse().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.commonResponse_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeBytes(2, this.getOutputBytes());
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeInt32(3, this.status_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeInt32(4, this.signal_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.commonResponse_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeBytesSize(2, this.getOutputBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeInt32Size(3, this.status_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeInt32Size(4, this.signal_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static ExecuteShellCommand_Res parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(byteString);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(array);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final InputStream inputStream) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(inputStream);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Res parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static ExecuteShellCommand_Res parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(codedInputStream);
        }
        
        public static ExecuteShellCommand_Res parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return a();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ExecuteShellCommand_Res executeShellCommand_Res) {
            return newBuilder().mergeFrom(executeShellCommand_Res);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            ExecuteShellCommand_Res.PARSER = (Parser<ExecuteShellCommand_Res>)new AbstractParser<ExecuteShellCommand_Res>() {
                public ExecuteShellCommand_Res parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new ExecuteShellCommand_Res(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new ExecuteShellCommand_Res(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ExecuteShellCommand_ResOrBuilder
        {
            private int bitField0_;
            private CommonResponse commonResponse_;
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> commonResponseBuilder_;
            private Object output_;
            private int status_;
            private int signal_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_ExecuteShellCommand_Res_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_ExecuteShellCommand_Res_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExecuteShellCommand_Res.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.output_ = "";
                this.b();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.commonResponse_ = CommonResponse.getDefaultInstance();
                this.output_ = "";
                this.b();
            }
            
            private void b() {
                try {
                    if (ExecuteShellCommand_Res.alwaysUseFieldBuilders) {
                        this.c();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder a() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_0034: {
                    try {
                        super.clear();
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            break Label_0034;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.output_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.status_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.signal_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder clone() {
                return a().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_ExecuteShellCommand_Res_descriptor;
            }
            
            public ExecuteShellCommand_Res getDefaultInstanceForType() {
                return ExecuteShellCommand_Res.getDefaultInstance();
            }
            
            public ExecuteShellCommand_Res build() {
                final ExecuteShellCommand_Res buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public ExecuteShellCommand_Res buildPartial() {
                final ExecuteShellCommand_Res executeShellCommand_Res = new ExecuteShellCommand_Res((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                int n = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0066: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            executeShellCommand_Res.commonResponse_ = this.commonResponse_;
                            break Label_0066;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    executeShellCommand_Res.commonResponse_ = (CommonResponse)this.commonResponseBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                executeShellCommand_Res.output_ = this.output_;
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                executeShellCommand_Res.status_ = this.status_;
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                executeShellCommand_Res.signal_ = this.signal_;
                executeShellCommand_Res.bitField0_ = n;
                this.onBuilt();
                return executeShellCommand_Res;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof ExecuteShellCommand_Res) {
                        return this.mergeFrom((ExecuteShellCommand_Res)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final ExecuteShellCommand_Res executeShellCommand_Res) {
                try {
                    if (executeShellCommand_Res == ExecuteShellCommand_Res.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (executeShellCommand_Res.hasCommonResponse()) {
                        this.mergeCommonResponse(executeShellCommand_Res.getCommonResponse());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (executeShellCommand_Res.hasOutput()) {
                        this.bitField0_ |= 0x2;
                        this.output_ = executeShellCommand_Res.output_;
                        this.onChanged();
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (executeShellCommand_Res.hasStatus()) {
                        this.setStatus(executeShellCommand_Res.getStatus());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (executeShellCommand_Res.hasSignal()) {
                        this.setSignal(executeShellCommand_Res.getSignal());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                this.mergeUnknownFields(executeShellCommand_Res.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                try {
                    if (!this.hasCommonResponse()) {
                        return false;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (!this.getCommonResponse().isInitialized()) {
                        return false;
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                ExecuteShellCommand_Res executeShellCommand_Res = null;
                try {
                    executeShellCommand_Res = (ExecuteShellCommand_Res)ExecuteShellCommand_Res.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    executeShellCommand_Res = (ExecuteShellCommand_Res)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (executeShellCommand_Res != null) {
                            this.mergeFrom(executeShellCommand_Res);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCommonResponse() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CommonResponse getCommonResponse() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        return this.commonResponse_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CommonResponse)this.commonResponseBuilder_.getMessage();
            }
            
            public Builder setCommonResponse(final CommonResponse commonResponse) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.commonResponseBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CommonResponse commonResponse2 = commonResponse;
                                if (commonResponse2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.commonResponse_ = commonResponse;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)commonResponse);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCommonResponse(final CommonResponse.Builder builder) {
                Label_0038: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCommonResponse(final CommonResponse p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponse_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CommonResponse;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.commonResponseBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCommonResponse() {
                Label_0033: {
                    try {
                        if (this.commonResponseBuilder_ == null) {
                            this.commonResponse_ = CommonResponse.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.commonResponseBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CommonResponse.Builder getCommonResponseBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CommonResponse.Builder)this.c().getBuilder();
            }
            
            public CommonResponseOrBuilder getCommonResponseOrBuilder() {
                try {
                    if (this.commonResponseBuilder_ != null) {
                        return (CommonResponseOrBuilder)this.commonResponseBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponse_;
            }
            
            private SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder> c() {
                try {
                    if (this.commonResponseBuilder_ == null) {
                        this.commonResponseBuilder_ = (SingleFieldBuilder<CommonResponse, CommonResponse.Builder, CommonResponseOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.commonResponse_, this.getParentForChildren(), this.isClean());
                        this.commonResponse_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.commonResponseBuilder_;
            }
            
            public boolean hasOutput() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public String getOutput() {
                final Object output_ = this.output_;
                if (!(output_ instanceof String)) {
                    return (String)(this.output_ = ((ByteString)output_).toStringUtf8());
                }
                return (String)output_;
            }
            
            public ByteString getOutputBytes() {
                final Object output_ = this.output_;
                if (output_ instanceof String) {
                    return (ByteString)(this.output_ = ByteString.copyFromUtf8((String)output_));
                }
                return (ByteString)output_;
            }
            
            public Builder setOutput(final String output_) {
                try {
                    if (output_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.output_ = output_;
                this.onChanged();
                return this;
            }
            
            public Builder clearOutput() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.output_ = ExecuteShellCommand_Res.getDefaultInstance().getOutput();
                this.onChanged();
                return this;
            }
            
            public Builder setOutputBytes(final ByteString output_) {
                try {
                    if (output_ == null) {
                        throw new NullPointerException();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                this.bitField0_ |= 0x2;
                this.output_ = output_;
                this.onChanged();
                return this;
            }
            
            public boolean hasStatus() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getStatus() {
                return this.status_;
            }
            
            public Builder setStatus(final int status_) {
                this.bitField0_ |= 0x4;
                this.status_ = status_;
                this.onChanged();
                return this;
            }
            
            public Builder clearStatus() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.status_ = 0;
                this.onChanged();
                return this;
            }
            
            public boolean hasSignal() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public int getSignal() {
                return this.signal_;
            }
            
            public Builder setSignal(final int signal_) {
                this.bitField0_ |= 0x8;
                this.signal_ = signal_;
                this.onChanged();
                return this;
            }
            
            public Builder clearSignal() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.signal_ = 0;
                this.onChanged();
                return this;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class CompositeRequest extends GeneratedMessage implements CompositeRequestOrBuilder
    {
        private static final CompositeRequest defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<CompositeRequest> PARSER;
        private int bitField0_;
        private int bitField1_;
        public static final int CREATE_TARGET_FIELD_NUMBER = 1;
        private CreateTarget_Req createTarget_;
        public static final int LAUNCH_FIELD_NUMBER = 2;
        private Launch_Req launch_;
        public static final int EXIT_FIELD_NUMBER = 3;
        private Exit_Req exit_;
        public static final int CONTINUE_FIELD_NUMBER = 4;
        private Continue_Req continue_;
        public static final int SUSPEND_FIELD_NUMBER = 5;
        private Suspend_Req suspend_;
        public static final int GET_THREADS_FIELD_NUMBER = 6;
        private GetThreads_Req getThreads_;
        public static final int GET_FRAMES_FIELD_NUMBER = 7;
        private GetFrames_Req getFrames_;
        public static final int ADD_BREAKPOINT_FIELD_NUMBER = 8;
        private AddBreakpoint_Req addBreakpoint_;
        public static final int REMOVE_BREAKPOINT_FIELD_NUMBER = 9;
        private RemoveBreakpoint_Req removeBreakpoint_;
        public static final int STEP_INTO_FIELD_NUMBER = 10;
        private StepInto_Req stepInto_;
        public static final int STEP_OVER_FIELD_NUMBER = 11;
        private StepOver_Req stepOver_;
        public static final int STEP_OUT_FIELD_NUMBER = 12;
        private StepOut_Req stepOut_;
        public static final int EVALUATE_EXPRESSION_FIELD_NUMBER = 13;
        private EvaluateExpression_Req evaluateExpression_;
        public static final int GET_VALUE_CHILDREN_FIELD_NUMBER = 14;
        private GetValueChildren_Req getValueChildren_;
        public static final int GET_VARS_FIELD_NUMBER = 15;
        private GetVars_Req getVars_;
        public static final int HANDLE_CONSOLE_COMMAND_FIELD_NUMBER = 16;
        private HandleConsoleCommand_Req handleConsoleCommand_;
        public static final int HANDLE_COMPLETION_FIELD_NUMBER = 17;
        private HandleCompletion_Req handleCompletion_;
        public static final int ATTACH_FIELD_NUMBER = 18;
        private Attach_Req attach_;
        public static final int ATTACH_BY_NAME_FIELD_NUMBER = 19;
        private AttachByName_Req attachByName_;
        public static final int DISPATCH_INPUT_FIELD_NUMBER = 20;
        private DispatchInput_Req dispatchInput_;
        public static final int ADD_WATCHPOINT_FIELD_NUMBER = 21;
        private AddWatchpoint_Req addWatchpoint_;
        public static final int REMOVE_WATCHPOINT_FIELD_NUMBER = 22;
        private RemoveWatchpoint_Req removeWatchpoint_;
        public static final int DETACH_FIELD_NUMBER = 23;
        private Detach_Req detach_;
        public static final int KILL_FIELD_NUMBER = 24;
        private Kill_Req kill_;
        public static final int GET_CHILDREN_COUNT_FIELD_NUMBER = 25;
        private GetChildrenCount_Req getChildrenCount_;
        public static final int GET_ARRAY_SLICE_FIELD_NUMBER = 26;
        private GetArraySlice_Req getArraySlice_;
        public static final int GET_VALUE_DATA_FIELD_NUMBER = 27;
        private GetValueData_Req getValueData_;
        public static final int GET_VALUE_DESCRIPTION_FIELD_NUMBER = 28;
        private GetValueDescription_Req getValueDescription_;
        public static final int VALUES_FILTERING_POLICY_FIELD_NUMBER = 29;
        private ValuesFilteringPolicy_Req valuesFilteringPolicy_;
        public static final int CONNECT_PLATFORM_FIELD_NUMBER = 30;
        private ConnectPlatform_Req connectPlatform_;
        public static final int GET_VALUE_ADDRESS_FIELD_NUMBER = 31;
        private GetValueAddress_Req getValueAddress_;
        public static final int HANDLE_SIGNAL_FIELD_NUMBER = 32;
        private HandleSignal_Req handleSignal_;
        public static final int EXECUTE_SHELL_COMMAND_FIELD_NUMBER = 33;
        private ExecuteShellCommand_Req executeShellCommand_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private CompositeRequest(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private CompositeRequest(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static CompositeRequest getDefaultInstance() {
            return CompositeRequest.defaultInstance;
        }
        
        public CompositeRequest getDefaultInstanceForType() {
            return CompositeRequest.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private CompositeRequest(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CreateTarget_Req.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.createTarget_.toBuilder();
                            }
                            try {
                                this.createTarget_ = (CreateTarget_Req)codedInputStream.readMessage((Parser)CreateTarget_Req.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.createTarget_);
                                    this.createTarget_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            Launch_Req.Builder builder3 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                builder3 = this.launch_.toBuilder();
                            }
                            try {
                                this.launch_ = (Launch_Req)codedInputStream.readMessage((Parser)Launch_Req.PARSER, extensionRegistryLite);
                                if (builder3 != null) {
                                    builder3.mergeFrom(this.launch_);
                                    this.launch_ = builder3.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex2) {
                                throw a((IOException)ex2);
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 26: {
                            Exit_Req.Builder builder4 = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                builder4 = this.exit_.toBuilder();
                            }
                            try {
                                this.exit_ = (Exit_Req)codedInputStream.readMessage((Parser)Exit_Req.PARSER, extensionRegistryLite);
                                if (builder4 != null) {
                                    builder4.mergeFrom(this.exit_);
                                    this.exit_ = builder4.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex3) {
                                throw a((IOException)ex3);
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                        case 34: {
                            Continue_Req.Builder builder5 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                builder5 = this.continue_.toBuilder();
                            }
                            try {
                                this.continue_ = (Continue_Req)codedInputStream.readMessage((Parser)Continue_Req.PARSER, extensionRegistryLite);
                                if (builder5 != null) {
                                    builder5.mergeFrom(this.continue_);
                                    this.continue_ = builder5.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex4) {
                                throw a((IOException)ex4);
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            Suspend_Req.Builder builder6 = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                builder6 = this.suspend_.toBuilder();
                            }
                            try {
                                this.suspend_ = (Suspend_Req)codedInputStream.readMessage((Parser)Suspend_Req.PARSER, extensionRegistryLite);
                                if (builder6 != null) {
                                    builder6.mergeFrom(this.suspend_);
                                    this.suspend_ = builder6.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex5) {
                                throw a((IOException)ex5);
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 50: {
                            GetThreads_Req.Builder builder7 = null;
                            if ((this.bitField0_ & 0x20) == 0x20) {
                                builder7 = this.getThreads_.toBuilder();
                            }
                            try {
                                this.getThreads_ = (GetThreads_Req)codedInputStream.readMessage((Parser)GetThreads_Req.PARSER, extensionRegistryLite);
                                if (builder7 != null) {
                                    builder7.mergeFrom(this.getThreads_);
                                    this.getThreads_ = builder7.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex6) {
                                throw a((IOException)ex6);
                            }
                            this.bitField0_ |= 0x20;
                            continue;
                        }
                        case 58: {
                            GetFrames_Req.Builder builder8 = null;
                            if ((this.bitField0_ & 0x40) == 0x40) {
                                builder8 = this.getFrames_.toBuilder();
                            }
                            try {
                                this.getFrames_ = (GetFrames_Req)codedInputStream.readMessage((Parser)GetFrames_Req.PARSER, extensionRegistryLite);
                                if (builder8 != null) {
                                    builder8.mergeFrom(this.getFrames_);
                                    this.getFrames_ = builder8.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex7) {
                                throw a((IOException)ex7);
                            }
                            this.bitField0_ |= 0x40;
                            continue;
                        }
                        case 66: {
                            AddBreakpoint_Req.Builder builder9 = null;
                            if ((this.bitField0_ & 0x80) == 0x80) {
                                builder9 = this.addBreakpoint_.toBuilder();
                            }
                            try {
                                this.addBreakpoint_ = (AddBreakpoint_Req)codedInputStream.readMessage((Parser)AddBreakpoint_Req.PARSER, extensionRegistryLite);
                                if (builder9 != null) {
                                    builder9.mergeFrom(this.addBreakpoint_);
                                    this.addBreakpoint_ = builder9.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex8) {
                                throw a((IOException)ex8);
                            }
                            this.bitField0_ |= 0x80;
                            continue;
                        }
                        case 74: {
                            RemoveBreakpoint_Req.Builder builder10 = null;
                            if ((this.bitField0_ & 0x100) == 0x100) {
                                builder10 = this.removeBreakpoint_.toBuilder();
                            }
                            try {
                                this.removeBreakpoint_ = (RemoveBreakpoint_Req)codedInputStream.readMessage((Parser)RemoveBreakpoint_Req.PARSER, extensionRegistryLite);
                                if (builder10 != null) {
                                    builder10.mergeFrom(this.removeBreakpoint_);
                                    this.removeBreakpoint_ = builder10.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex9) {
                                throw a((IOException)ex9);
                            }
                            this.bitField0_ |= 0x100;
                            continue;
                        }
                        case 82: {
                            StepInto_Req.Builder builder11 = null;
                            if ((this.bitField0_ & 0x200) == 0x200) {
                                builder11 = this.stepInto_.toBuilder();
                            }
                            try {
                                this.stepInto_ = (StepInto_Req)codedInputStream.readMessage((Parser)StepInto_Req.PARSER, extensionRegistryLite);
                                if (builder11 != null) {
                                    builder11.mergeFrom(this.stepInto_);
                                    this.stepInto_ = builder11.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex10) {
                                throw a((IOException)ex10);
                            }
                            this.bitField0_ |= 0x200;
                            continue;
                        }
                        case 90: {
                            StepOver_Req.Builder builder12 = null;
                            if ((this.bitField0_ & 0x400) == 0x400) {
                                builder12 = this.stepOver_.toBuilder();
                            }
                            try {
                                this.stepOver_ = (StepOver_Req)codedInputStream.readMessage((Parser)StepOver_Req.PARSER, extensionRegistryLite);
                                if (builder12 != null) {
                                    builder12.mergeFrom(this.stepOver_);
                                    this.stepOver_ = builder12.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex11) {
                                throw a((IOException)ex11);
                            }
                            this.bitField0_ |= 0x400;
                            continue;
                        }
                        case 98: {
                            StepOut_Req.Builder builder13 = null;
                            if ((this.bitField0_ & 0x800) == 0x800) {
                                builder13 = this.stepOut_.toBuilder();
                            }
                            try {
                                this.stepOut_ = (StepOut_Req)codedInputStream.readMessage((Parser)StepOut_Req.PARSER, extensionRegistryLite);
                                if (builder13 != null) {
                                    builder13.mergeFrom(this.stepOut_);
                                    this.stepOut_ = builder13.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex12) {
                                throw a((IOException)ex12);
                            }
                            this.bitField0_ |= 0x800;
                            continue;
                        }
                        case 106: {
                            EvaluateExpression_Req.Builder builder14 = null;
                            if ((this.bitField0_ & 0x1000) == 0x1000) {
                                builder14 = this.evaluateExpression_.toBuilder();
                            }
                            try {
                                this.evaluateExpression_ = (EvaluateExpression_Req)codedInputStream.readMessage((Parser)EvaluateExpression_Req.PARSER, extensionRegistryLite);
                                if (builder14 != null) {
                                    builder14.mergeFrom(this.evaluateExpression_);
                                    this.evaluateExpression_ = builder14.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex13) {
                                throw a((IOException)ex13);
                            }
                            this.bitField0_ |= 0x1000;
                            continue;
                        }
                        case 114: {
                            GetValueChildren_Req.Builder builder15 = null;
                            if ((this.bitField0_ & 0x2000) == 0x2000) {
                                builder15 = this.getValueChildren_.toBuilder();
                            }
                            try {
                                this.getValueChildren_ = (GetValueChildren_Req)codedInputStream.readMessage((Parser)GetValueChildren_Req.PARSER, extensionRegistryLite);
                                if (builder15 != null) {
                                    builder15.mergeFrom(this.getValueChildren_);
                                    this.getValueChildren_ = builder15.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex14) {
                                throw a((IOException)ex14);
                            }
                            this.bitField0_ |= 0x2000;
                            continue;
                        }
                        case 122: {
                            GetVars_Req.Builder builder16 = null;
                            if ((this.bitField0_ & 0x4000) == 0x4000) {
                                builder16 = this.getVars_.toBuilder();
                            }
                            try {
                                this.getVars_ = (GetVars_Req)codedInputStream.readMessage((Parser)GetVars_Req.PARSER, extensionRegistryLite);
                                if (builder16 != null) {
                                    builder16.mergeFrom(this.getVars_);
                                    this.getVars_ = builder16.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex15) {
                                throw a((IOException)ex15);
                            }
                            this.bitField0_ |= 0x4000;
                            continue;
                        }
                        case 130: {
                            HandleConsoleCommand_Req.Builder builder17 = null;
                            if ((this.bitField0_ & 0x8000) == 0x8000) {
                                builder17 = this.handleConsoleCommand_.toBuilder();
                            }
                            try {
                                this.handleConsoleCommand_ = (HandleConsoleCommand_Req)codedInputStream.readMessage((Parser)HandleConsoleCommand_Req.PARSER, extensionRegistryLite);
                                if (builder17 != null) {
                                    builder17.mergeFrom(this.handleConsoleCommand_);
                                    this.handleConsoleCommand_ = builder17.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex16) {
                                throw a((IOException)ex16);
                            }
                            this.bitField0_ |= 0x8000;
                            continue;
                        }
                        case 138: {
                            HandleCompletion_Req.Builder builder18 = null;
                            if ((this.bitField0_ & 0x10000) == 0x10000) {
                                builder18 = this.handleCompletion_.toBuilder();
                            }
                            try {
                                this.handleCompletion_ = (HandleCompletion_Req)codedInputStream.readMessage((Parser)HandleCompletion_Req.PARSER, extensionRegistryLite);
                                if (builder18 != null) {
                                    builder18.mergeFrom(this.handleCompletion_);
                                    this.handleCompletion_ = builder18.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex17) {
                                throw a((IOException)ex17);
                            }
                            this.bitField0_ |= 0x10000;
                            continue;
                        }
                        case 146: {
                            Attach_Req.Builder builder19 = null;
                            if ((this.bitField0_ & 0x20000) == 0x20000) {
                                builder19 = this.attach_.toBuilder();
                            }
                            try {
                                this.attach_ = (Attach_Req)codedInputStream.readMessage((Parser)Attach_Req.PARSER, extensionRegistryLite);
                                if (builder19 != null) {
                                    builder19.mergeFrom(this.attach_);
                                    this.attach_ = builder19.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex18) {
                                throw a((IOException)ex18);
                            }
                            this.bitField0_ |= 0x20000;
                            continue;
                        }
                        case 154: {
                            AttachByName_Req.Builder builder20 = null;
                            if ((this.bitField0_ & 0x40000) == 0x40000) {
                                builder20 = this.attachByName_.toBuilder();
                            }
                            try {
                                this.attachByName_ = (AttachByName_Req)codedInputStream.readMessage((Parser)AttachByName_Req.PARSER, extensionRegistryLite);
                                if (builder20 != null) {
                                    builder20.mergeFrom(this.attachByName_);
                                    this.attachByName_ = builder20.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex19) {
                                throw a((IOException)ex19);
                            }
                            this.bitField0_ |= 0x40000;
                            continue;
                        }
                        case 162: {
                            DispatchInput_Req.Builder builder21 = null;
                            if ((this.bitField0_ & 0x80000) == 0x80000) {
                                builder21 = this.dispatchInput_.toBuilder();
                            }
                            try {
                                this.dispatchInput_ = (DispatchInput_Req)codedInputStream.readMessage((Parser)DispatchInput_Req.PARSER, extensionRegistryLite);
                                if (builder21 != null) {
                                    builder21.mergeFrom(this.dispatchInput_);
                                    this.dispatchInput_ = builder21.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex20) {
                                throw a((IOException)ex20);
                            }
                            this.bitField0_ |= 0x80000;
                            continue;
                        }
                        case 170: {
                            AddWatchpoint_Req.Builder builder22 = null;
                            if ((this.bitField0_ & 0x100000) == 0x100000) {
                                builder22 = this.addWatchpoint_.toBuilder();
                            }
                            try {
                                this.addWatchpoint_ = (AddWatchpoint_Req)codedInputStream.readMessage((Parser)AddWatchpoint_Req.PARSER, extensionRegistryLite);
                                if (builder22 != null) {
                                    builder22.mergeFrom(this.addWatchpoint_);
                                    this.addWatchpoint_ = builder22.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex21) {
                                throw a((IOException)ex21);
                            }
                            this.bitField0_ |= 0x100000;
                            continue;
                        }
                        case 178: {
                            RemoveWatchpoint_Req.Builder builder23 = null;
                            if ((this.bitField0_ & 0x200000) == 0x200000) {
                                builder23 = this.removeWatchpoint_.toBuilder();
                            }
                            try {
                                this.removeWatchpoint_ = (RemoveWatchpoint_Req)codedInputStream.readMessage((Parser)RemoveWatchpoint_Req.PARSER, extensionRegistryLite);
                                if (builder23 != null) {
                                    builder23.mergeFrom(this.removeWatchpoint_);
                                    this.removeWatchpoint_ = builder23.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex22) {
                                throw a((IOException)ex22);
                            }
                            this.bitField0_ |= 0x200000;
                            continue;
                        }
                        case 186: {
                            Detach_Req.Builder builder24 = null;
                            if ((this.bitField0_ & 0x400000) == 0x400000) {
                                builder24 = this.detach_.toBuilder();
                            }
                            try {
                                this.detach_ = (Detach_Req)codedInputStream.readMessage((Parser)Detach_Req.PARSER, extensionRegistryLite);
                                if (builder24 != null) {
                                    builder24.mergeFrom(this.detach_);
                                    this.detach_ = builder24.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex23) {
                                throw a((IOException)ex23);
                            }
                            this.bitField0_ |= 0x400000;
                            continue;
                        }
                        case 194: {
                            Kill_Req.Builder builder25 = null;
                            if ((this.bitField0_ & 0x800000) == 0x800000) {
                                builder25 = this.kill_.toBuilder();
                            }
                            try {
                                this.kill_ = (Kill_Req)codedInputStream.readMessage((Parser)Kill_Req.PARSER, extensionRegistryLite);
                                if (builder25 != null) {
                                    builder25.mergeFrom(this.kill_);
                                    this.kill_ = builder25.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex24) {
                                throw a((IOException)ex24);
                            }
                            this.bitField0_ |= 0x800000;
                            continue;
                        }
                        case 202: {
                            GetChildrenCount_Req.Builder builder26 = null;
                            if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                                builder26 = this.getChildrenCount_.toBuilder();
                            }
                            try {
                                this.getChildrenCount_ = (GetChildrenCount_Req)codedInputStream.readMessage((Parser)GetChildrenCount_Req.PARSER, extensionRegistryLite);
                                if (builder26 != null) {
                                    builder26.mergeFrom(this.getChildrenCount_);
                                    this.getChildrenCount_ = builder26.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex25) {
                                throw a((IOException)ex25);
                            }
                            this.bitField0_ |= 0x1000000;
                            continue;
                        }
                        case 210: {
                            GetArraySlice_Req.Builder builder27 = null;
                            if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                                builder27 = this.getArraySlice_.toBuilder();
                            }
                            try {
                                this.getArraySlice_ = (GetArraySlice_Req)codedInputStream.readMessage((Parser)GetArraySlice_Req.PARSER, extensionRegistryLite);
                                if (builder27 != null) {
                                    builder27.mergeFrom(this.getArraySlice_);
                                    this.getArraySlice_ = builder27.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex26) {
                                throw a((IOException)ex26);
                            }
                            this.bitField0_ |= 0x2000000;
                            continue;
                        }
                        case 218: {
                            GetValueData_Req.Builder builder28 = null;
                            if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                                builder28 = this.getValueData_.toBuilder();
                            }
                            try {
                                this.getValueData_ = (GetValueData_Req)codedInputStream.readMessage((Parser)GetValueData_Req.PARSER, extensionRegistryLite);
                                if (builder28 != null) {
                                    builder28.mergeFrom(this.getValueData_);
                                    this.getValueData_ = builder28.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex27) {
                                throw a((IOException)ex27);
                            }
                            this.bitField0_ |= 0x4000000;
                            continue;
                        }
                        case 226: {
                            GetValueDescription_Req.Builder builder29 = null;
                            if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                                builder29 = this.getValueDescription_.toBuilder();
                            }
                            try {
                                this.getValueDescription_ = (GetValueDescription_Req)codedInputStream.readMessage((Parser)GetValueDescription_Req.PARSER, extensionRegistryLite);
                                if (builder29 != null) {
                                    builder29.mergeFrom(this.getValueDescription_);
                                    this.getValueDescription_ = builder29.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex28) {
                                throw a((IOException)ex28);
                            }
                            this.bitField0_ |= 0x8000000;
                            continue;
                        }
                        case 234: {
                            ValuesFilteringPolicy_Req.Builder builder30 = null;
                            if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                                builder30 = this.valuesFilteringPolicy_.toBuilder();
                            }
                            try {
                                this.valuesFilteringPolicy_ = (ValuesFilteringPolicy_Req)codedInputStream.readMessage((Parser)ValuesFilteringPolicy_Req.PARSER, extensionRegistryLite);
                                if (builder30 != null) {
                                    builder30.mergeFrom(this.valuesFilteringPolicy_);
                                    this.valuesFilteringPolicy_ = builder30.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex29) {
                                throw a((IOException)ex29);
                            }
                            this.bitField0_ |= 0x10000000;
                            continue;
                        }
                        case 242: {
                            ConnectPlatform_Req.Builder builder31 = null;
                            if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                                builder31 = this.connectPlatform_.toBuilder();
                            }
                            try {
                                this.connectPlatform_ = (ConnectPlatform_Req)codedInputStream.readMessage((Parser)ConnectPlatform_Req.PARSER, extensionRegistryLite);
                                if (builder31 != null) {
                                    builder31.mergeFrom(this.connectPlatform_);
                                    this.connectPlatform_ = builder31.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex30) {
                                throw a((IOException)ex30);
                            }
                            this.bitField0_ |= 0x20000000;
                            continue;
                        }
                        case 250: {
                            GetValueAddress_Req.Builder builder32 = null;
                            if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                                builder32 = this.getValueAddress_.toBuilder();
                            }
                            try {
                                this.getValueAddress_ = (GetValueAddress_Req)codedInputStream.readMessage((Parser)GetValueAddress_Req.PARSER, extensionRegistryLite);
                                if (builder32 != null) {
                                    builder32.mergeFrom(this.getValueAddress_);
                                    this.getValueAddress_ = builder32.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex31) {
                                throw a((IOException)ex31);
                            }
                            this.bitField0_ |= 0x40000000;
                            continue;
                        }
                        case 258: {
                            HandleSignal_Req.Builder builder33 = null;
                            if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                                builder33 = this.handleSignal_.toBuilder();
                            }
                            try {
                                this.handleSignal_ = (HandleSignal_Req)codedInputStream.readMessage((Parser)HandleSignal_Req.PARSER, extensionRegistryLite);
                                if (builder33 != null) {
                                    builder33.mergeFrom(this.handleSignal_);
                                    this.handleSignal_ = builder33.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex32) {
                                throw a((IOException)ex32);
                            }
                            this.bitField0_ |= Integer.MIN_VALUE;
                            continue;
                        }
                        case 266: {
                            ExecuteShellCommand_Req.Builder builder34 = null;
                            if ((this.bitField1_ & 0x1) == 0x1) {
                                builder34 = this.executeShellCommand_.toBuilder();
                            }
                            try {
                                this.executeShellCommand_ = (ExecuteShellCommand_Req)codedInputStream.readMessage((Parser)ExecuteShellCommand_Req.PARSER, extensionRegistryLite);
                                if (builder34 != null) {
                                    builder34.mergeFrom(this.executeShellCommand_);
                                    this.executeShellCommand_ = builder34.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex33) {
                                throw a((IOException)ex33);
                            }
                            this.bitField1_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex34) {
                throw ex34.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex35) {
                throw new InvalidProtocolBufferException(ex35.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_CompositeRequest_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_CompositeRequest_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CompositeRequest.class, (Class)Builder.class);
        }
        
        public Parser<CompositeRequest> getParserForType() {
            return CompositeRequest.PARSER;
        }
        
        public boolean hasCreateTarget() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CreateTarget_Req getCreateTarget() {
            return this.createTarget_;
        }
        
        public CreateTarget_ReqOrBuilder getCreateTargetOrBuilder() {
            return this.createTarget_;
        }
        
        public boolean hasLaunch() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public Launch_Req getLaunch() {
            return this.launch_;
        }
        
        public Launch_ReqOrBuilder getLaunchOrBuilder() {
            return this.launch_;
        }
        
        public boolean hasExit() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public Exit_Req getExit() {
            return this.exit_;
        }
        
        public Exit_ReqOrBuilder getExitOrBuilder() {
            return this.exit_;
        }
        
        public boolean hasContinue() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public Continue_Req getContinue() {
            return this.continue_;
        }
        
        public Continue_ReqOrBuilder getContinueOrBuilder() {
            return this.continue_;
        }
        
        public boolean hasSuspend() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        public Suspend_Req getSuspend() {
            return this.suspend_;
        }
        
        public Suspend_ReqOrBuilder getSuspendOrBuilder() {
            return this.suspend_;
        }
        
        public boolean hasGetThreads() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        public GetThreads_Req getGetThreads() {
            return this.getThreads_;
        }
        
        public GetThreads_ReqOrBuilder getGetThreadsOrBuilder() {
            return this.getThreads_;
        }
        
        public boolean hasGetFrames() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        public GetFrames_Req getGetFrames() {
            return this.getFrames_;
        }
        
        public GetFrames_ReqOrBuilder getGetFramesOrBuilder() {
            return this.getFrames_;
        }
        
        public boolean hasAddBreakpoint() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        public AddBreakpoint_Req getAddBreakpoint() {
            return this.addBreakpoint_;
        }
        
        public AddBreakpoint_ReqOrBuilder getAddBreakpointOrBuilder() {
            return this.addBreakpoint_;
        }
        
        public boolean hasRemoveBreakpoint() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        public RemoveBreakpoint_Req getRemoveBreakpoint() {
            return this.removeBreakpoint_;
        }
        
        public RemoveBreakpoint_ReqOrBuilder getRemoveBreakpointOrBuilder() {
            return this.removeBreakpoint_;
        }
        
        public boolean hasStepInto() {
            return (this.bitField0_ & 0x200) == 0x200;
        }
        
        public StepInto_Req getStepInto() {
            return this.stepInto_;
        }
        
        public StepInto_ReqOrBuilder getStepIntoOrBuilder() {
            return this.stepInto_;
        }
        
        public boolean hasStepOver() {
            return (this.bitField0_ & 0x400) == 0x400;
        }
        
        public StepOver_Req getStepOver() {
            return this.stepOver_;
        }
        
        public StepOver_ReqOrBuilder getStepOverOrBuilder() {
            return this.stepOver_;
        }
        
        public boolean hasStepOut() {
            return (this.bitField0_ & 0x800) == 0x800;
        }
        
        public StepOut_Req getStepOut() {
            return this.stepOut_;
        }
        
        public StepOut_ReqOrBuilder getStepOutOrBuilder() {
            return this.stepOut_;
        }
        
        public boolean hasEvaluateExpression() {
            return (this.bitField0_ & 0x1000) == 0x1000;
        }
        
        public EvaluateExpression_Req getEvaluateExpression() {
            return this.evaluateExpression_;
        }
        
        public EvaluateExpression_ReqOrBuilder getEvaluateExpressionOrBuilder() {
            return this.evaluateExpression_;
        }
        
        public boolean hasGetValueChildren() {
            return (this.bitField0_ & 0x2000) == 0x2000;
        }
        
        public GetValueChildren_Req getGetValueChildren() {
            return this.getValueChildren_;
        }
        
        public GetValueChildren_ReqOrBuilder getGetValueChildrenOrBuilder() {
            return this.getValueChildren_;
        }
        
        public boolean hasGetVars() {
            return (this.bitField0_ & 0x4000) == 0x4000;
        }
        
        public GetVars_Req getGetVars() {
            return this.getVars_;
        }
        
        public GetVars_ReqOrBuilder getGetVarsOrBuilder() {
            return this.getVars_;
        }
        
        public boolean hasHandleConsoleCommand() {
            return (this.bitField0_ & 0x8000) == 0x8000;
        }
        
        public HandleConsoleCommand_Req getHandleConsoleCommand() {
            return this.handleConsoleCommand_;
        }
        
        public HandleConsoleCommand_ReqOrBuilder getHandleConsoleCommandOrBuilder() {
            return this.handleConsoleCommand_;
        }
        
        public boolean hasHandleCompletion() {
            return (this.bitField0_ & 0x10000) == 0x10000;
        }
        
        public HandleCompletion_Req getHandleCompletion() {
            return this.handleCompletion_;
        }
        
        public HandleCompletion_ReqOrBuilder getHandleCompletionOrBuilder() {
            return this.handleCompletion_;
        }
        
        public boolean hasAttach() {
            return (this.bitField0_ & 0x20000) == 0x20000;
        }
        
        public Attach_Req getAttach() {
            return this.attach_;
        }
        
        public Attach_ReqOrBuilder getAttachOrBuilder() {
            return this.attach_;
        }
        
        public boolean hasAttachByName() {
            return (this.bitField0_ & 0x40000) == 0x40000;
        }
        
        public AttachByName_Req getAttachByName() {
            return this.attachByName_;
        }
        
        public AttachByName_ReqOrBuilder getAttachByNameOrBuilder() {
            return this.attachByName_;
        }
        
        public boolean hasDispatchInput() {
            return (this.bitField0_ & 0x80000) == 0x80000;
        }
        
        public DispatchInput_Req getDispatchInput() {
            return this.dispatchInput_;
        }
        
        public DispatchInput_ReqOrBuilder getDispatchInputOrBuilder() {
            return this.dispatchInput_;
        }
        
        public boolean hasAddWatchpoint() {
            return (this.bitField0_ & 0x100000) == 0x100000;
        }
        
        public AddWatchpoint_Req getAddWatchpoint() {
            return this.addWatchpoint_;
        }
        
        public AddWatchpoint_ReqOrBuilder getAddWatchpointOrBuilder() {
            return this.addWatchpoint_;
        }
        
        public boolean hasRemoveWatchpoint() {
            return (this.bitField0_ & 0x200000) == 0x200000;
        }
        
        public RemoveWatchpoint_Req getRemoveWatchpoint() {
            return this.removeWatchpoint_;
        }
        
        public RemoveWatchpoint_ReqOrBuilder getRemoveWatchpointOrBuilder() {
            return this.removeWatchpoint_;
        }
        
        public boolean hasDetach() {
            return (this.bitField0_ & 0x400000) == 0x400000;
        }
        
        public Detach_Req getDetach() {
            return this.detach_;
        }
        
        public Detach_ReqOrBuilder getDetachOrBuilder() {
            return this.detach_;
        }
        
        public boolean hasKill() {
            return (this.bitField0_ & 0x800000) == 0x800000;
        }
        
        public Kill_Req getKill() {
            return this.kill_;
        }
        
        public Kill_ReqOrBuilder getKillOrBuilder() {
            return this.kill_;
        }
        
        public boolean hasGetChildrenCount() {
            return (this.bitField0_ & 0x1000000) == 0x1000000;
        }
        
        public GetChildrenCount_Req getGetChildrenCount() {
            return this.getChildrenCount_;
        }
        
        public GetChildrenCount_ReqOrBuilder getGetChildrenCountOrBuilder() {
            return this.getChildrenCount_;
        }
        
        public boolean hasGetArraySlice() {
            return (this.bitField0_ & 0x2000000) == 0x2000000;
        }
        
        public GetArraySlice_Req getGetArraySlice() {
            return this.getArraySlice_;
        }
        
        public GetArraySlice_ReqOrBuilder getGetArraySliceOrBuilder() {
            return this.getArraySlice_;
        }
        
        public boolean hasGetValueData() {
            return (this.bitField0_ & 0x4000000) == 0x4000000;
        }
        
        public GetValueData_Req getGetValueData() {
            return this.getValueData_;
        }
        
        public GetValueData_ReqOrBuilder getGetValueDataOrBuilder() {
            return this.getValueData_;
        }
        
        public boolean hasGetValueDescription() {
            return (this.bitField0_ & 0x8000000) == 0x8000000;
        }
        
        public GetValueDescription_Req getGetValueDescription() {
            return this.getValueDescription_;
        }
        
        public GetValueDescription_ReqOrBuilder getGetValueDescriptionOrBuilder() {
            return this.getValueDescription_;
        }
        
        public boolean hasValuesFilteringPolicy() {
            return (this.bitField0_ & 0x10000000) == 0x10000000;
        }
        
        public ValuesFilteringPolicy_Req getValuesFilteringPolicy() {
            return this.valuesFilteringPolicy_;
        }
        
        public ValuesFilteringPolicy_ReqOrBuilder getValuesFilteringPolicyOrBuilder() {
            return this.valuesFilteringPolicy_;
        }
        
        public boolean hasConnectPlatform() {
            return (this.bitField0_ & 0x20000000) == 0x20000000;
        }
        
        public ConnectPlatform_Req getConnectPlatform() {
            return this.connectPlatform_;
        }
        
        public ConnectPlatform_ReqOrBuilder getConnectPlatformOrBuilder() {
            return this.connectPlatform_;
        }
        
        public boolean hasGetValueAddress() {
            return (this.bitField0_ & 0x40000000) == 0x40000000;
        }
        
        public GetValueAddress_Req getGetValueAddress() {
            return this.getValueAddress_;
        }
        
        public GetValueAddress_ReqOrBuilder getGetValueAddressOrBuilder() {
            return this.getValueAddress_;
        }
        
        public boolean hasHandleSignal() {
            return (this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE;
        }
        
        public HandleSignal_Req getHandleSignal() {
            return this.handleSignal_;
        }
        
        public HandleSignal_ReqOrBuilder getHandleSignalOrBuilder() {
            return this.handleSignal_;
        }
        
        public boolean hasExecuteShellCommand() {
            return (this.bitField1_ & 0x1) == 0x1;
        }
        
        public ExecuteShellCommand_Req getExecuteShellCommand() {
            return this.executeShellCommand_;
        }
        
        public ExecuteShellCommand_ReqOrBuilder getExecuteShellCommandOrBuilder() {
            return this.executeShellCommand_;
        }
        
        private void a() {
            this.createTarget_ = CreateTarget_Req.getDefaultInstance();
            this.launch_ = Launch_Req.getDefaultInstance();
            this.exit_ = Exit_Req.getDefaultInstance();
            this.continue_ = Continue_Req.getDefaultInstance();
            this.suspend_ = Suspend_Req.getDefaultInstance();
            this.getThreads_ = GetThreads_Req.getDefaultInstance();
            this.getFrames_ = GetFrames_Req.getDefaultInstance();
            this.addBreakpoint_ = AddBreakpoint_Req.getDefaultInstance();
            this.removeBreakpoint_ = RemoveBreakpoint_Req.getDefaultInstance();
            this.stepInto_ = StepInto_Req.getDefaultInstance();
            this.stepOver_ = StepOver_Req.getDefaultInstance();
            this.stepOut_ = StepOut_Req.getDefaultInstance();
            this.evaluateExpression_ = EvaluateExpression_Req.getDefaultInstance();
            this.getValueChildren_ = GetValueChildren_Req.getDefaultInstance();
            this.getVars_ = GetVars_Req.getDefaultInstance();
            this.handleConsoleCommand_ = HandleConsoleCommand_Req.getDefaultInstance();
            this.handleCompletion_ = HandleCompletion_Req.getDefaultInstance();
            this.attach_ = Attach_Req.getDefaultInstance();
            this.attachByName_ = AttachByName_Req.getDefaultInstance();
            this.dispatchInput_ = DispatchInput_Req.getDefaultInstance();
            this.addWatchpoint_ = AddWatchpoint_Req.getDefaultInstance();
            this.removeWatchpoint_ = RemoveWatchpoint_Req.getDefaultInstance();
            this.detach_ = Detach_Req.getDefaultInstance();
            this.kill_ = Kill_Req.getDefaultInstance();
            this.getChildrenCount_ = GetChildrenCount_Req.getDefaultInstance();
            this.getArraySlice_ = GetArraySlice_Req.getDefaultInstance();
            this.getValueData_ = GetValueData_Req.getDefaultInstance();
            this.getValueDescription_ = GetValueDescription_Req.getDefaultInstance();
            this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Req.getDefaultInstance();
            this.connectPlatform_ = ConnectPlatform_Req.getDefaultInstance();
            this.getValueAddress_ = GetValueAddress_Req.getDefaultInstance();
            this.handleSignal_ = HandleSignal_Req.getDefaultInstance();
            this.executeShellCommand_ = ExecuteShellCommand_Req.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (this.hasLaunch() && !this.getLaunch().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetFrames() && !this.getGetFrames().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasRemoveBreakpoint() && !this.getRemoveBreakpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepInto() && !this.getStepInto().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepOver() && !this.getStepOver().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepOut() && !this.getStepOut().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasEvaluateExpression() && !this.getEvaluateExpression().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueChildren() && !this.getGetValueChildren().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetVars() && !this.getGetVars().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleConsoleCommand() && !this.getHandleConsoleCommand().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleCompletion() && !this.getHandleCompletion().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAttach() && !this.getAttach().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAttachByName() && !this.getAttachByName().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasDispatchInput() && !this.getDispatchInput().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAddWatchpoint() && !this.getAddWatchpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasRemoveWatchpoint() && !this.getRemoveWatchpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetChildrenCount() && !this.getGetChildrenCount().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetArraySlice() && !this.getGetArraySlice().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueData() && !this.getGetValueData().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueDescription() && !this.getGetValueDescription().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasValuesFilteringPolicy() && !this.getValuesFilteringPolicy().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasConnectPlatform() && !this.getConnectPlatform().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueAddress() && !this.getGetValueAddress().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleSignal() && !this.getHandleSignal().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasExecuteShellCommand() && !this.getExecuteShellCommand().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.createTarget_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.launch_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeMessage(3, (MessageLite)this.exit_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeMessage(4, (MessageLite)this.continue_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            try {
                if ((this.bitField0_ & 0x10) == 0x10) {
                    codedOutputStream.writeMessage(5, (MessageLite)this.suspend_);
                }
            }
            catch (IOException ex5) {
                throw a(ex5);
            }
            try {
                if ((this.bitField0_ & 0x20) == 0x20) {
                    codedOutputStream.writeMessage(6, (MessageLite)this.getThreads_);
                }
            }
            catch (IOException ex6) {
                throw a(ex6);
            }
            try {
                if ((this.bitField0_ & 0x40) == 0x40) {
                    codedOutputStream.writeMessage(7, (MessageLite)this.getFrames_);
                }
            }
            catch (IOException ex7) {
                throw a(ex7);
            }
            try {
                if ((this.bitField0_ & 0x80) == 0x80) {
                    codedOutputStream.writeMessage(8, (MessageLite)this.addBreakpoint_);
                }
            }
            catch (IOException ex8) {
                throw a(ex8);
            }
            try {
                if ((this.bitField0_ & 0x100) == 0x100) {
                    codedOutputStream.writeMessage(9, (MessageLite)this.removeBreakpoint_);
                }
            }
            catch (IOException ex9) {
                throw a(ex9);
            }
            try {
                if ((this.bitField0_ & 0x200) == 0x200) {
                    codedOutputStream.writeMessage(10, (MessageLite)this.stepInto_);
                }
            }
            catch (IOException ex10) {
                throw a(ex10);
            }
            try {
                if ((this.bitField0_ & 0x400) == 0x400) {
                    codedOutputStream.writeMessage(11, (MessageLite)this.stepOver_);
                }
            }
            catch (IOException ex11) {
                throw a(ex11);
            }
            try {
                if ((this.bitField0_ & 0x800) == 0x800) {
                    codedOutputStream.writeMessage(12, (MessageLite)this.stepOut_);
                }
            }
            catch (IOException ex12) {
                throw a(ex12);
            }
            try {
                if ((this.bitField0_ & 0x1000) == 0x1000) {
                    codedOutputStream.writeMessage(13, (MessageLite)this.evaluateExpression_);
                }
            }
            catch (IOException ex13) {
                throw a(ex13);
            }
            try {
                if ((this.bitField0_ & 0x2000) == 0x2000) {
                    codedOutputStream.writeMessage(14, (MessageLite)this.getValueChildren_);
                }
            }
            catch (IOException ex14) {
                throw a(ex14);
            }
            try {
                if ((this.bitField0_ & 0x4000) == 0x4000) {
                    codedOutputStream.writeMessage(15, (MessageLite)this.getVars_);
                }
            }
            catch (IOException ex15) {
                throw a(ex15);
            }
            try {
                if ((this.bitField0_ & 0x8000) == 0x8000) {
                    codedOutputStream.writeMessage(16, (MessageLite)this.handleConsoleCommand_);
                }
            }
            catch (IOException ex16) {
                throw a(ex16);
            }
            try {
                if ((this.bitField0_ & 0x10000) == 0x10000) {
                    codedOutputStream.writeMessage(17, (MessageLite)this.handleCompletion_);
                }
            }
            catch (IOException ex17) {
                throw a(ex17);
            }
            try {
                if ((this.bitField0_ & 0x20000) == 0x20000) {
                    codedOutputStream.writeMessage(18, (MessageLite)this.attach_);
                }
            }
            catch (IOException ex18) {
                throw a(ex18);
            }
            try {
                if ((this.bitField0_ & 0x40000) == 0x40000) {
                    codedOutputStream.writeMessage(19, (MessageLite)this.attachByName_);
                }
            }
            catch (IOException ex19) {
                throw a(ex19);
            }
            try {
                if ((this.bitField0_ & 0x80000) == 0x80000) {
                    codedOutputStream.writeMessage(20, (MessageLite)this.dispatchInput_);
                }
            }
            catch (IOException ex20) {
                throw a(ex20);
            }
            try {
                if ((this.bitField0_ & 0x100000) == 0x100000) {
                    codedOutputStream.writeMessage(21, (MessageLite)this.addWatchpoint_);
                }
            }
            catch (IOException ex21) {
                throw a(ex21);
            }
            try {
                if ((this.bitField0_ & 0x200000) == 0x200000) {
                    codedOutputStream.writeMessage(22, (MessageLite)this.removeWatchpoint_);
                }
            }
            catch (IOException ex22) {
                throw a(ex22);
            }
            try {
                if ((this.bitField0_ & 0x400000) == 0x400000) {
                    codedOutputStream.writeMessage(23, (MessageLite)this.detach_);
                }
            }
            catch (IOException ex23) {
                throw a(ex23);
            }
            try {
                if ((this.bitField0_ & 0x800000) == 0x800000) {
                    codedOutputStream.writeMessage(24, (MessageLite)this.kill_);
                }
            }
            catch (IOException ex24) {
                throw a(ex24);
            }
            try {
                if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                    codedOutputStream.writeMessage(25, (MessageLite)this.getChildrenCount_);
                }
            }
            catch (IOException ex25) {
                throw a(ex25);
            }
            try {
                if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                    codedOutputStream.writeMessage(26, (MessageLite)this.getArraySlice_);
                }
            }
            catch (IOException ex26) {
                throw a(ex26);
            }
            try {
                if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                    codedOutputStream.writeMessage(27, (MessageLite)this.getValueData_);
                }
            }
            catch (IOException ex27) {
                throw a(ex27);
            }
            try {
                if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                    codedOutputStream.writeMessage(28, (MessageLite)this.getValueDescription_);
                }
            }
            catch (IOException ex28) {
                throw a(ex28);
            }
            try {
                if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                    codedOutputStream.writeMessage(29, (MessageLite)this.valuesFilteringPolicy_);
                }
            }
            catch (IOException ex29) {
                throw a(ex29);
            }
            try {
                if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                    codedOutputStream.writeMessage(30, (MessageLite)this.connectPlatform_);
                }
            }
            catch (IOException ex30) {
                throw a(ex30);
            }
            try {
                if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                    codedOutputStream.writeMessage(31, (MessageLite)this.getValueAddress_);
                }
            }
            catch (IOException ex31) {
                throw a(ex31);
            }
            try {
                if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                    codedOutputStream.writeMessage(32, (MessageLite)this.handleSignal_);
                }
            }
            catch (IOException ex32) {
                throw a(ex32);
            }
            try {
                if ((this.bitField1_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(33, (MessageLite)this.executeShellCommand_);
                }
            }
            catch (IOException ex33) {
                throw a(ex33);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.createTarget_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.launch_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeMessageSize(3, (MessageLite)this.exit_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeMessageSize(4, (MessageLite)this.continue_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                n += CodedOutputStream.computeMessageSize(5, (MessageLite)this.suspend_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                n += CodedOutputStream.computeMessageSize(6, (MessageLite)this.getThreads_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                n += CodedOutputStream.computeMessageSize(7, (MessageLite)this.getFrames_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                n += CodedOutputStream.computeMessageSize(8, (MessageLite)this.addBreakpoint_);
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                n += CodedOutputStream.computeMessageSize(9, (MessageLite)this.removeBreakpoint_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                n += CodedOutputStream.computeMessageSize(10, (MessageLite)this.stepInto_);
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                n += CodedOutputStream.computeMessageSize(11, (MessageLite)this.stepOver_);
            }
            if ((this.bitField0_ & 0x800) == 0x800) {
                n += CodedOutputStream.computeMessageSize(12, (MessageLite)this.stepOut_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                n += CodedOutputStream.computeMessageSize(13, (MessageLite)this.evaluateExpression_);
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                n += CodedOutputStream.computeMessageSize(14, (MessageLite)this.getValueChildren_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                n += CodedOutputStream.computeMessageSize(15, (MessageLite)this.getVars_);
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                n += CodedOutputStream.computeMessageSize(16, (MessageLite)this.handleConsoleCommand_);
            }
            if ((this.bitField0_ & 0x10000) == 0x10000) {
                n += CodedOutputStream.computeMessageSize(17, (MessageLite)this.handleCompletion_);
            }
            if ((this.bitField0_ & 0x20000) == 0x20000) {
                n += CodedOutputStream.computeMessageSize(18, (MessageLite)this.attach_);
            }
            if ((this.bitField0_ & 0x40000) == 0x40000) {
                n += CodedOutputStream.computeMessageSize(19, (MessageLite)this.attachByName_);
            }
            if ((this.bitField0_ & 0x80000) == 0x80000) {
                n += CodedOutputStream.computeMessageSize(20, (MessageLite)this.dispatchInput_);
            }
            if ((this.bitField0_ & 0x100000) == 0x100000) {
                n += CodedOutputStream.computeMessageSize(21, (MessageLite)this.addWatchpoint_);
            }
            if ((this.bitField0_ & 0x200000) == 0x200000) {
                n += CodedOutputStream.computeMessageSize(22, (MessageLite)this.removeWatchpoint_);
            }
            if ((this.bitField0_ & 0x400000) == 0x400000) {
                n += CodedOutputStream.computeMessageSize(23, (MessageLite)this.detach_);
            }
            if ((this.bitField0_ & 0x800000) == 0x800000) {
                n += CodedOutputStream.computeMessageSize(24, (MessageLite)this.kill_);
            }
            if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                n += CodedOutputStream.computeMessageSize(25, (MessageLite)this.getChildrenCount_);
            }
            if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                n += CodedOutputStream.computeMessageSize(26, (MessageLite)this.getArraySlice_);
            }
            if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                n += CodedOutputStream.computeMessageSize(27, (MessageLite)this.getValueData_);
            }
            if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                n += CodedOutputStream.computeMessageSize(28, (MessageLite)this.getValueDescription_);
            }
            if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                n += CodedOutputStream.computeMessageSize(29, (MessageLite)this.valuesFilteringPolicy_);
            }
            if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                n += CodedOutputStream.computeMessageSize(30, (MessageLite)this.connectPlatform_);
            }
            if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                n += CodedOutputStream.computeMessageSize(31, (MessageLite)this.getValueAddress_);
            }
            if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                n += CodedOutputStream.computeMessageSize(32, (MessageLite)this.handleSignal_);
            }
            if ((this.bitField1_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(33, (MessageLite)this.executeShellCommand_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static CompositeRequest parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(byteString);
        }
        
        public static CompositeRequest parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static CompositeRequest parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(array);
        }
        
        public static CompositeRequest parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static CompositeRequest parseFrom(final InputStream inputStream) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(inputStream);
        }
        
        public static CompositeRequest parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static CompositeRequest parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static CompositeRequest parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static CompositeRequest parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(codedInputStream);
        }
        
        public static CompositeRequest parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeRequest)CompositeRequest.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return s();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final CompositeRequest compositeRequest) {
            return newBuilder().mergeFrom(compositeRequest);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            CompositeRequest.PARSER = (Parser<CompositeRequest>)new AbstractParser<CompositeRequest>() {
                public CompositeRequest parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new CompositeRequest(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new CompositeRequest(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements CompositeRequestOrBuilder
        {
            private int bitField0_;
            private int bitField1_;
            private CreateTarget_Req createTarget_;
            private SingleFieldBuilder<CreateTarget_Req, CreateTarget_Req.Builder, CreateTarget_ReqOrBuilder> createTargetBuilder_;
            private Launch_Req launch_;
            private SingleFieldBuilder<Launch_Req, Launch_Req.Builder, Launch_ReqOrBuilder> launchBuilder_;
            private Exit_Req exit_;
            private SingleFieldBuilder<Exit_Req, Exit_Req.Builder, Exit_ReqOrBuilder> exitBuilder_;
            private Continue_Req continue_;
            private SingleFieldBuilder<Continue_Req, Continue_Req.Builder, Continue_ReqOrBuilder> continueBuilder_;
            private Suspend_Req suspend_;
            private SingleFieldBuilder<Suspend_Req, Suspend_Req.Builder, Suspend_ReqOrBuilder> suspendBuilder_;
            private GetThreads_Req getThreads_;
            private SingleFieldBuilder<GetThreads_Req, GetThreads_Req.Builder, GetThreads_ReqOrBuilder> getThreadsBuilder_;
            private GetFrames_Req getFrames_;
            private SingleFieldBuilder<GetFrames_Req, GetFrames_Req.Builder, GetFrames_ReqOrBuilder> getFramesBuilder_;
            private AddBreakpoint_Req addBreakpoint_;
            private SingleFieldBuilder<AddBreakpoint_Req, AddBreakpoint_Req.Builder, AddBreakpoint_ReqOrBuilder> addBreakpointBuilder_;
            private RemoveBreakpoint_Req removeBreakpoint_;
            private SingleFieldBuilder<RemoveBreakpoint_Req, RemoveBreakpoint_Req.Builder, RemoveBreakpoint_ReqOrBuilder> removeBreakpointBuilder_;
            private StepInto_Req stepInto_;
            private SingleFieldBuilder<StepInto_Req, StepInto_Req.Builder, StepInto_ReqOrBuilder> stepIntoBuilder_;
            private StepOver_Req stepOver_;
            private SingleFieldBuilder<StepOver_Req, StepOver_Req.Builder, StepOver_ReqOrBuilder> stepOverBuilder_;
            private StepOut_Req stepOut_;
            private SingleFieldBuilder<StepOut_Req, StepOut_Req.Builder, StepOut_ReqOrBuilder> stepOutBuilder_;
            private EvaluateExpression_Req evaluateExpression_;
            private SingleFieldBuilder<EvaluateExpression_Req, EvaluateExpression_Req.Builder, EvaluateExpression_ReqOrBuilder> evaluateExpressionBuilder_;
            private GetValueChildren_Req getValueChildren_;
            private SingleFieldBuilder<GetValueChildren_Req, GetValueChildren_Req.Builder, GetValueChildren_ReqOrBuilder> getValueChildrenBuilder_;
            private GetVars_Req getVars_;
            private SingleFieldBuilder<GetVars_Req, GetVars_Req.Builder, GetVars_ReqOrBuilder> getVarsBuilder_;
            private HandleConsoleCommand_Req handleConsoleCommand_;
            private SingleFieldBuilder<HandleConsoleCommand_Req, HandleConsoleCommand_Req.Builder, HandleConsoleCommand_ReqOrBuilder> handleConsoleCommandBuilder_;
            private HandleCompletion_Req handleCompletion_;
            private SingleFieldBuilder<HandleCompletion_Req, HandleCompletion_Req.Builder, HandleCompletion_ReqOrBuilder> handleCompletionBuilder_;
            private Attach_Req attach_;
            private SingleFieldBuilder<Attach_Req, Attach_Req.Builder, Attach_ReqOrBuilder> attachBuilder_;
            private AttachByName_Req attachByName_;
            private SingleFieldBuilder<AttachByName_Req, AttachByName_Req.Builder, AttachByName_ReqOrBuilder> attachByNameBuilder_;
            private DispatchInput_Req dispatchInput_;
            private SingleFieldBuilder<DispatchInput_Req, DispatchInput_Req.Builder, DispatchInput_ReqOrBuilder> dispatchInputBuilder_;
            private AddWatchpoint_Req addWatchpoint_;
            private SingleFieldBuilder<AddWatchpoint_Req, AddWatchpoint_Req.Builder, AddWatchpoint_ReqOrBuilder> addWatchpointBuilder_;
            private RemoveWatchpoint_Req removeWatchpoint_;
            private SingleFieldBuilder<RemoveWatchpoint_Req, RemoveWatchpoint_Req.Builder, RemoveWatchpoint_ReqOrBuilder> removeWatchpointBuilder_;
            private Detach_Req detach_;
            private SingleFieldBuilder<Detach_Req, Detach_Req.Builder, Detach_ReqOrBuilder> detachBuilder_;
            private Kill_Req kill_;
            private SingleFieldBuilder<Kill_Req, Kill_Req.Builder, Kill_ReqOrBuilder> killBuilder_;
            private GetChildrenCount_Req getChildrenCount_;
            private SingleFieldBuilder<GetChildrenCount_Req, GetChildrenCount_Req.Builder, GetChildrenCount_ReqOrBuilder> getChildrenCountBuilder_;
            private GetArraySlice_Req getArraySlice_;
            private SingleFieldBuilder<GetArraySlice_Req, GetArraySlice_Req.Builder, GetArraySlice_ReqOrBuilder> getArraySliceBuilder_;
            private GetValueData_Req getValueData_;
            private SingleFieldBuilder<GetValueData_Req, GetValueData_Req.Builder, GetValueData_ReqOrBuilder> getValueDataBuilder_;
            private GetValueDescription_Req getValueDescription_;
            private SingleFieldBuilder<GetValueDescription_Req, GetValueDescription_Req.Builder, GetValueDescription_ReqOrBuilder> getValueDescriptionBuilder_;
            private ValuesFilteringPolicy_Req valuesFilteringPolicy_;
            private SingleFieldBuilder<ValuesFilteringPolicy_Req, ValuesFilteringPolicy_Req.Builder, ValuesFilteringPolicy_ReqOrBuilder> valuesFilteringPolicyBuilder_;
            private ConnectPlatform_Req connectPlatform_;
            private SingleFieldBuilder<ConnectPlatform_Req, ConnectPlatform_Req.Builder, ConnectPlatform_ReqOrBuilder> connectPlatformBuilder_;
            private GetValueAddress_Req getValueAddress_;
            private SingleFieldBuilder<GetValueAddress_Req, GetValueAddress_Req.Builder, GetValueAddress_ReqOrBuilder> getValueAddressBuilder_;
            private HandleSignal_Req handleSignal_;
            private SingleFieldBuilder<HandleSignal_Req, HandleSignal_Req.Builder, HandleSignal_ReqOrBuilder> handleSignalBuilder_;
            private ExecuteShellCommand_Req executeShellCommand_;
            private SingleFieldBuilder<ExecuteShellCommand_Req, ExecuteShellCommand_Req.Builder, ExecuteShellCommand_ReqOrBuilder> executeShellCommandBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_CompositeRequest_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_CompositeRequest_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CompositeRequest.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.createTarget_ = CreateTarget_Req.getDefaultInstance();
                this.launch_ = Launch_Req.getDefaultInstance();
                this.exit_ = Exit_Req.getDefaultInstance();
                this.continue_ = Continue_Req.getDefaultInstance();
                this.suspend_ = Suspend_Req.getDefaultInstance();
                this.getThreads_ = GetThreads_Req.getDefaultInstance();
                this.getFrames_ = GetFrames_Req.getDefaultInstance();
                this.addBreakpoint_ = AddBreakpoint_Req.getDefaultInstance();
                this.removeBreakpoint_ = RemoveBreakpoint_Req.getDefaultInstance();
                this.stepInto_ = StepInto_Req.getDefaultInstance();
                this.stepOver_ = StepOver_Req.getDefaultInstance();
                this.stepOut_ = StepOut_Req.getDefaultInstance();
                this.evaluateExpression_ = EvaluateExpression_Req.getDefaultInstance();
                this.getValueChildren_ = GetValueChildren_Req.getDefaultInstance();
                this.getVars_ = GetVars_Req.getDefaultInstance();
                this.handleConsoleCommand_ = HandleConsoleCommand_Req.getDefaultInstance();
                this.handleCompletion_ = HandleCompletion_Req.getDefaultInstance();
                this.attach_ = Attach_Req.getDefaultInstance();
                this.attachByName_ = AttachByName_Req.getDefaultInstance();
                this.dispatchInput_ = DispatchInput_Req.getDefaultInstance();
                this.addWatchpoint_ = AddWatchpoint_Req.getDefaultInstance();
                this.removeWatchpoint_ = RemoveWatchpoint_Req.getDefaultInstance();
                this.detach_ = Detach_Req.getDefaultInstance();
                this.kill_ = Kill_Req.getDefaultInstance();
                this.getChildrenCount_ = GetChildrenCount_Req.getDefaultInstance();
                this.getArraySlice_ = GetArraySlice_Req.getDefaultInstance();
                this.getValueData_ = GetValueData_Req.getDefaultInstance();
                this.getValueDescription_ = GetValueDescription_Req.getDefaultInstance();
                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Req.getDefaultInstance();
                this.connectPlatform_ = ConnectPlatform_Req.getDefaultInstance();
                this.getValueAddress_ = GetValueAddress_Req.getDefaultInstance();
                this.handleSignal_ = HandleSignal_Req.getDefaultInstance();
                this.executeShellCommand_ = ExecuteShellCommand_Req.getDefaultInstance();
                this.g();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.createTarget_ = CreateTarget_Req.getDefaultInstance();
                this.launch_ = Launch_Req.getDefaultInstance();
                this.exit_ = Exit_Req.getDefaultInstance();
                this.continue_ = Continue_Req.getDefaultInstance();
                this.suspend_ = Suspend_Req.getDefaultInstance();
                this.getThreads_ = GetThreads_Req.getDefaultInstance();
                this.getFrames_ = GetFrames_Req.getDefaultInstance();
                this.addBreakpoint_ = AddBreakpoint_Req.getDefaultInstance();
                this.removeBreakpoint_ = RemoveBreakpoint_Req.getDefaultInstance();
                this.stepInto_ = StepInto_Req.getDefaultInstance();
                this.stepOver_ = StepOver_Req.getDefaultInstance();
                this.stepOut_ = StepOut_Req.getDefaultInstance();
                this.evaluateExpression_ = EvaluateExpression_Req.getDefaultInstance();
                this.getValueChildren_ = GetValueChildren_Req.getDefaultInstance();
                this.getVars_ = GetVars_Req.getDefaultInstance();
                this.handleConsoleCommand_ = HandleConsoleCommand_Req.getDefaultInstance();
                this.handleCompletion_ = HandleCompletion_Req.getDefaultInstance();
                this.attach_ = Attach_Req.getDefaultInstance();
                this.attachByName_ = AttachByName_Req.getDefaultInstance();
                this.dispatchInput_ = DispatchInput_Req.getDefaultInstance();
                this.addWatchpoint_ = AddWatchpoint_Req.getDefaultInstance();
                this.removeWatchpoint_ = RemoveWatchpoint_Req.getDefaultInstance();
                this.detach_ = Detach_Req.getDefaultInstance();
                this.kill_ = Kill_Req.getDefaultInstance();
                this.getChildrenCount_ = GetChildrenCount_Req.getDefaultInstance();
                this.getArraySlice_ = GetArraySlice_Req.getDefaultInstance();
                this.getValueData_ = GetValueData_Req.getDefaultInstance();
                this.getValueDescription_ = GetValueDescription_Req.getDefaultInstance();
                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Req.getDefaultInstance();
                this.connectPlatform_ = ConnectPlatform_Req.getDefaultInstance();
                this.getValueAddress_ = GetValueAddress_Req.getDefaultInstance();
                this.handleSignal_ = HandleSignal_Req.getDefaultInstance();
                this.executeShellCommand_ = ExecuteShellCommand_Req.getDefaultInstance();
                this.g();
            }
            
            private void g() {
                try {
                    if (CompositeRequest.alwaysUseFieldBuilders) {
                        this.i();
                        this.o();
                        this.E();
                        this.b();
                        this.h();
                        this.F();
                        this.f();
                        this.u();
                        this.m();
                        this.H();
                        this.n();
                        this.l();
                        this.G();
                        this.C();
                        this.e();
                        this.c();
                        this.I();
                        this.z();
                        this.d();
                        this.w();
                        this.v();
                        this.a();
                        this.k();
                        this.q();
                        this.t();
                        this.p();
                        this.r();
                        this.A();
                        this.y();
                        this.j();
                        this.x();
                        this.D();
                        this.B();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder s() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_1322: {
                    Label_1282: {
                        Label_1242: {
                            Label_1202: {
                                Label_1162: {
                                    Label_1122: {
                                        Label_1082: {
                                            Label_1042: {
                                                Label_1002: {
                                                    Label_0962: {
                                                        Label_0922: {
                                                            Label_0882: {
                                                                Label_0842: {
                                                                    Label_0802: {
                                                                        Label_0762: {
                                                                            Label_0722: {
                                                                                Label_0682: {
                                                                                    Label_0642: {
                                                                                        Label_0601: {
                                                                                            Label_0560: {
                                                                                                Label_0519: {
                                                                                                    Label_0478: {
                                                                                                        Label_0437: {
                                                                                                            Label_0396: {
                                                                                                                Label_0355: {
                                                                                                                    Label_0314: {
                                                                                                                        Label_0274: {
                                                                                                                            Label_0234: {
                                                                                                                                Label_0194: {
                                                                                                                                    Label_0154: {
                                                                                                                                        Label_0114: {
                                                                                                                                            Label_0074: {
                                                                                                                                                Label_0034: {
                                                                                                                                                    try {
                                                                                                                                                        super.clear();
                                                                                                                                                        if (this.createTargetBuilder_ == null) {
                                                                                                                                                            this.createTarget_ = CreateTarget_Req.getDefaultInstance();
                                                                                                                                                            break Label_0034;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    catch (NullPointerException ex) {
                                                                                                                                                        throw b(ex);
                                                                                                                                                    }
                                                                                                                                                    this.createTargetBuilder_.clear();
                                                                                                                                                    try {
                                                                                                                                                        this.bitField0_ &= 0xFFFFFFFE;
                                                                                                                                                        if (this.launchBuilder_ == null) {
                                                                                                                                                            this.launch_ = Launch_Req.getDefaultInstance();
                                                                                                                                                            break Label_0074;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    catch (NullPointerException ex2) {
                                                                                                                                                        throw b(ex2);
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                this.launchBuilder_.clear();
                                                                                                                                                try {
                                                                                                                                                    this.bitField0_ &= 0xFFFFFFFD;
                                                                                                                                                    if (this.exitBuilder_ == null) {
                                                                                                                                                        this.exit_ = Exit_Req.getDefaultInstance();
                                                                                                                                                        break Label_0114;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                catch (NullPointerException ex3) {
                                                                                                                                                    throw b(ex3);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            this.exitBuilder_.clear();
                                                                                                                                            try {
                                                                                                                                                this.bitField0_ &= 0xFFFFFFFB;
                                                                                                                                                if (this.continueBuilder_ == null) {
                                                                                                                                                    this.continue_ = Continue_Req.getDefaultInstance();
                                                                                                                                                    break Label_0154;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            catch (NullPointerException ex4) {
                                                                                                                                                throw b(ex4);
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        this.continueBuilder_.clear();
                                                                                                                                        try {
                                                                                                                                            this.bitField0_ &= 0xFFFFFFF7;
                                                                                                                                            if (this.suspendBuilder_ == null) {
                                                                                                                                                this.suspend_ = Suspend_Req.getDefaultInstance();
                                                                                                                                                break Label_0194;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        catch (NullPointerException ex5) {
                                                                                                                                            throw b(ex5);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    this.suspendBuilder_.clear();
                                                                                                                                    try {
                                                                                                                                        this.bitField0_ &= 0xFFFFFFEF;
                                                                                                                                        if (this.getThreadsBuilder_ == null) {
                                                                                                                                            this.getThreads_ = GetThreads_Req.getDefaultInstance();
                                                                                                                                            break Label_0234;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    catch (NullPointerException ex6) {
                                                                                                                                        throw b(ex6);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                this.getThreadsBuilder_.clear();
                                                                                                                                try {
                                                                                                                                    this.bitField0_ &= 0xFFFFFFDF;
                                                                                                                                    if (this.getFramesBuilder_ == null) {
                                                                                                                                        this.getFrames_ = GetFrames_Req.getDefaultInstance();
                                                                                                                                        break Label_0274;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                catch (NullPointerException ex7) {
                                                                                                                                    throw b(ex7);
                                                                                                                                }
                                                                                                                            }
                                                                                                                            this.getFramesBuilder_.clear();
                                                                                                                            try {
                                                                                                                                this.bitField0_ &= 0xFFFFFFBF;
                                                                                                                                if (this.addBreakpointBuilder_ == null) {
                                                                                                                                    this.addBreakpoint_ = AddBreakpoint_Req.getDefaultInstance();
                                                                                                                                    break Label_0314;
                                                                                                                                }
                                                                                                                            }
                                                                                                                            catch (NullPointerException ex8) {
                                                                                                                                throw b(ex8);
                                                                                                                            }
                                                                                                                        }
                                                                                                                        this.addBreakpointBuilder_.clear();
                                                                                                                        try {
                                                                                                                            this.bitField0_ &= 0xFFFFFF7F;
                                                                                                                            if (this.removeBreakpointBuilder_ == null) {
                                                                                                                                this.removeBreakpoint_ = RemoveBreakpoint_Req.getDefaultInstance();
                                                                                                                                break Label_0355;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        catch (NullPointerException ex9) {
                                                                                                                            throw b(ex9);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    this.removeBreakpointBuilder_.clear();
                                                                                                                    try {
                                                                                                                        this.bitField0_ &= 0xFFFFFEFF;
                                                                                                                        if (this.stepIntoBuilder_ == null) {
                                                                                                                            this.stepInto_ = StepInto_Req.getDefaultInstance();
                                                                                                                            break Label_0396;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    catch (NullPointerException ex10) {
                                                                                                                        throw b(ex10);
                                                                                                                    }
                                                                                                                }
                                                                                                                this.stepIntoBuilder_.clear();
                                                                                                                try {
                                                                                                                    this.bitField0_ &= 0xFFFFFDFF;
                                                                                                                    if (this.stepOverBuilder_ == null) {
                                                                                                                        this.stepOver_ = StepOver_Req.getDefaultInstance();
                                                                                                                        break Label_0437;
                                                                                                                    }
                                                                                                                }
                                                                                                                catch (NullPointerException ex11) {
                                                                                                                    throw b(ex11);
                                                                                                                }
                                                                                                            }
                                                                                                            this.stepOverBuilder_.clear();
                                                                                                            try {
                                                                                                                this.bitField0_ &= 0xFFFFFBFF;
                                                                                                                if (this.stepOutBuilder_ == null) {
                                                                                                                    this.stepOut_ = StepOut_Req.getDefaultInstance();
                                                                                                                    break Label_0478;
                                                                                                                }
                                                                                                            }
                                                                                                            catch (NullPointerException ex12) {
                                                                                                                throw b(ex12);
                                                                                                            }
                                                                                                        }
                                                                                                        this.stepOutBuilder_.clear();
                                                                                                        try {
                                                                                                            this.bitField0_ &= 0xFFFFF7FF;
                                                                                                            if (this.evaluateExpressionBuilder_ == null) {
                                                                                                                this.evaluateExpression_ = EvaluateExpression_Req.getDefaultInstance();
                                                                                                                break Label_0519;
                                                                                                            }
                                                                                                        }
                                                                                                        catch (NullPointerException ex13) {
                                                                                                            throw b(ex13);
                                                                                                        }
                                                                                                    }
                                                                                                    this.evaluateExpressionBuilder_.clear();
                                                                                                    try {
                                                                                                        this.bitField0_ &= 0xFFFFEFFF;
                                                                                                        if (this.getValueChildrenBuilder_ == null) {
                                                                                                            this.getValueChildren_ = GetValueChildren_Req.getDefaultInstance();
                                                                                                            break Label_0560;
                                                                                                        }
                                                                                                    }
                                                                                                    catch (NullPointerException ex14) {
                                                                                                        throw b(ex14);
                                                                                                    }
                                                                                                }
                                                                                                this.getValueChildrenBuilder_.clear();
                                                                                                try {
                                                                                                    this.bitField0_ &= 0xFFFFDFFF;
                                                                                                    if (this.getVarsBuilder_ == null) {
                                                                                                        this.getVars_ = GetVars_Req.getDefaultInstance();
                                                                                                        break Label_0601;
                                                                                                    }
                                                                                                }
                                                                                                catch (NullPointerException ex15) {
                                                                                                    throw b(ex15);
                                                                                                }
                                                                                            }
                                                                                            this.getVarsBuilder_.clear();
                                                                                            try {
                                                                                                this.bitField0_ &= 0xFFFFBFFF;
                                                                                                if (this.handleConsoleCommandBuilder_ == null) {
                                                                                                    this.handleConsoleCommand_ = HandleConsoleCommand_Req.getDefaultInstance();
                                                                                                    break Label_0642;
                                                                                                }
                                                                                            }
                                                                                            catch (NullPointerException ex16) {
                                                                                                throw b(ex16);
                                                                                            }
                                                                                        }
                                                                                        this.handleConsoleCommandBuilder_.clear();
                                                                                        try {
                                                                                            this.bitField0_ &= 0xFFFF7FFF;
                                                                                            if (this.handleCompletionBuilder_ == null) {
                                                                                                this.handleCompletion_ = HandleCompletion_Req.getDefaultInstance();
                                                                                                break Label_0682;
                                                                                            }
                                                                                        }
                                                                                        catch (NullPointerException ex17) {
                                                                                            throw b(ex17);
                                                                                        }
                                                                                    }
                                                                                    this.handleCompletionBuilder_.clear();
                                                                                    try {
                                                                                        this.bitField0_ &= 0xFFFEFFFF;
                                                                                        if (this.attachBuilder_ == null) {
                                                                                            this.attach_ = Attach_Req.getDefaultInstance();
                                                                                            break Label_0722;
                                                                                        }
                                                                                    }
                                                                                    catch (NullPointerException ex18) {
                                                                                        throw b(ex18);
                                                                                    }
                                                                                }
                                                                                this.attachBuilder_.clear();
                                                                                try {
                                                                                    this.bitField0_ &= 0xFFFDFFFF;
                                                                                    if (this.attachByNameBuilder_ == null) {
                                                                                        this.attachByName_ = AttachByName_Req.getDefaultInstance();
                                                                                        break Label_0762;
                                                                                    }
                                                                                }
                                                                                catch (NullPointerException ex19) {
                                                                                    throw b(ex19);
                                                                                }
                                                                            }
                                                                            this.attachByNameBuilder_.clear();
                                                                            try {
                                                                                this.bitField0_ &= 0xFFFBFFFF;
                                                                                if (this.dispatchInputBuilder_ == null) {
                                                                                    this.dispatchInput_ = DispatchInput_Req.getDefaultInstance();
                                                                                    break Label_0802;
                                                                                }
                                                                            }
                                                                            catch (NullPointerException ex20) {
                                                                                throw b(ex20);
                                                                            }
                                                                        }
                                                                        this.dispatchInputBuilder_.clear();
                                                                        try {
                                                                            this.bitField0_ &= 0xFFF7FFFF;
                                                                            if (this.addWatchpointBuilder_ == null) {
                                                                                this.addWatchpoint_ = AddWatchpoint_Req.getDefaultInstance();
                                                                                break Label_0842;
                                                                            }
                                                                        }
                                                                        catch (NullPointerException ex21) {
                                                                            throw b(ex21);
                                                                        }
                                                                    }
                                                                    this.addWatchpointBuilder_.clear();
                                                                    try {
                                                                        this.bitField0_ &= 0xFFEFFFFF;
                                                                        if (this.removeWatchpointBuilder_ == null) {
                                                                            this.removeWatchpoint_ = RemoveWatchpoint_Req.getDefaultInstance();
                                                                            break Label_0882;
                                                                        }
                                                                    }
                                                                    catch (NullPointerException ex22) {
                                                                        throw b(ex22);
                                                                    }
                                                                }
                                                                this.removeWatchpointBuilder_.clear();
                                                                try {
                                                                    this.bitField0_ &= 0xFFDFFFFF;
                                                                    if (this.detachBuilder_ == null) {
                                                                        this.detach_ = Detach_Req.getDefaultInstance();
                                                                        break Label_0922;
                                                                    }
                                                                }
                                                                catch (NullPointerException ex23) {
                                                                    throw b(ex23);
                                                                }
                                                            }
                                                            this.detachBuilder_.clear();
                                                            try {
                                                                this.bitField0_ &= 0xFFBFFFFF;
                                                                if (this.killBuilder_ == null) {
                                                                    this.kill_ = Kill_Req.getDefaultInstance();
                                                                    break Label_0962;
                                                                }
                                                            }
                                                            catch (NullPointerException ex24) {
                                                                throw b(ex24);
                                                            }
                                                        }
                                                        this.killBuilder_.clear();
                                                        try {
                                                            this.bitField0_ &= 0xFF7FFFFF;
                                                            if (this.getChildrenCountBuilder_ == null) {
                                                                this.getChildrenCount_ = GetChildrenCount_Req.getDefaultInstance();
                                                                break Label_1002;
                                                            }
                                                        }
                                                        catch (NullPointerException ex25) {
                                                            throw b(ex25);
                                                        }
                                                    }
                                                    this.getChildrenCountBuilder_.clear();
                                                    try {
                                                        this.bitField0_ &= 0xFEFFFFFF;
                                                        if (this.getArraySliceBuilder_ == null) {
                                                            this.getArraySlice_ = GetArraySlice_Req.getDefaultInstance();
                                                            break Label_1042;
                                                        }
                                                    }
                                                    catch (NullPointerException ex26) {
                                                        throw b(ex26);
                                                    }
                                                }
                                                this.getArraySliceBuilder_.clear();
                                                try {
                                                    this.bitField0_ &= 0xFDFFFFFF;
                                                    if (this.getValueDataBuilder_ == null) {
                                                        this.getValueData_ = GetValueData_Req.getDefaultInstance();
                                                        break Label_1082;
                                                    }
                                                }
                                                catch (NullPointerException ex27) {
                                                    throw b(ex27);
                                                }
                                            }
                                            this.getValueDataBuilder_.clear();
                                            try {
                                                this.bitField0_ &= 0xFBFFFFFF;
                                                if (this.getValueDescriptionBuilder_ == null) {
                                                    this.getValueDescription_ = GetValueDescription_Req.getDefaultInstance();
                                                    break Label_1122;
                                                }
                                            }
                                            catch (NullPointerException ex28) {
                                                throw b(ex28);
                                            }
                                        }
                                        this.getValueDescriptionBuilder_.clear();
                                        try {
                                            this.bitField0_ &= 0xF7FFFFFF;
                                            if (this.valuesFilteringPolicyBuilder_ == null) {
                                                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Req.getDefaultInstance();
                                                break Label_1162;
                                            }
                                        }
                                        catch (NullPointerException ex29) {
                                            throw b(ex29);
                                        }
                                    }
                                    this.valuesFilteringPolicyBuilder_.clear();
                                    try {
                                        this.bitField0_ &= 0xEFFFFFFF;
                                        if (this.connectPlatformBuilder_ == null) {
                                            this.connectPlatform_ = ConnectPlatform_Req.getDefaultInstance();
                                            break Label_1202;
                                        }
                                    }
                                    catch (NullPointerException ex30) {
                                        throw b(ex30);
                                    }
                                }
                                this.connectPlatformBuilder_.clear();
                                try {
                                    this.bitField0_ &= 0xDFFFFFFF;
                                    if (this.getValueAddressBuilder_ == null) {
                                        this.getValueAddress_ = GetValueAddress_Req.getDefaultInstance();
                                        break Label_1242;
                                    }
                                }
                                catch (NullPointerException ex31) {
                                    throw b(ex31);
                                }
                            }
                            this.getValueAddressBuilder_.clear();
                            try {
                                this.bitField0_ &= 0xBFFFFFFF;
                                if (this.handleSignalBuilder_ == null) {
                                    this.handleSignal_ = HandleSignal_Req.getDefaultInstance();
                                    break Label_1282;
                                }
                            }
                            catch (NullPointerException ex32) {
                                throw b(ex32);
                            }
                        }
                        this.handleSignalBuilder_.clear();
                        try {
                            this.bitField0_ &= Integer.MAX_VALUE;
                            if (this.executeShellCommandBuilder_ == null) {
                                this.executeShellCommand_ = ExecuteShellCommand_Req.getDefaultInstance();
                                break Label_1322;
                            }
                        }
                        catch (NullPointerException ex33) {
                            throw b(ex33);
                        }
                    }
                    this.executeShellCommandBuilder_.clear();
                }
                this.bitField1_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return s().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_CompositeRequest_descriptor;
            }
            
            public CompositeRequest getDefaultInstanceForType() {
                return CompositeRequest.getDefaultInstance();
            }
            
            public CompositeRequest build() {
                final CompositeRequest buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public CompositeRequest buildPartial() {
                final CompositeRequest compositeRequest = new CompositeRequest((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                final int bitField1_ = this.bitField1_;
                int n = 0;
                int n2 = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0077: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            compositeRequest.createTarget_ = this.createTarget_;
                            break Label_0077;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    compositeRequest.createTarget_ = (CreateTarget_Req)this.createTargetBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                Label_0128: {
                    try {
                        if (this.launchBuilder_ == null) {
                            compositeRequest.launch_ = this.launch_;
                            break Label_0128;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                    compositeRequest.launch_ = (Launch_Req)this.launchBuilder_.build();
                }
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                Label_0179: {
                    try {
                        if (this.exitBuilder_ == null) {
                            compositeRequest.exit_ = this.exit_;
                            break Label_0179;
                        }
                    }
                    catch (NullPointerException ex3) {
                        throw b(ex3);
                    }
                    compositeRequest.exit_ = (Exit_Req)this.exitBuilder_.build();
                }
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                Label_0233: {
                    try {
                        if (this.continueBuilder_ == null) {
                            compositeRequest.continue_ = this.continue_;
                            break Label_0233;
                        }
                    }
                    catch (NullPointerException ex4) {
                        throw b(ex4);
                    }
                    compositeRequest.continue_ = (Continue_Req)this.continueBuilder_.build();
                }
                if ((bitField0_ & 0x10) == 0x10) {
                    n |= 0x10;
                }
                Label_0287: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            compositeRequest.suspend_ = this.suspend_;
                            break Label_0287;
                        }
                    }
                    catch (NullPointerException ex5) {
                        throw b(ex5);
                    }
                    compositeRequest.suspend_ = (Suspend_Req)this.suspendBuilder_.build();
                }
                if ((bitField0_ & 0x20) == 0x20) {
                    n |= 0x20;
                }
                Label_0341: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            compositeRequest.getThreads_ = this.getThreads_;
                            break Label_0341;
                        }
                    }
                    catch (NullPointerException ex6) {
                        throw b(ex6);
                    }
                    compositeRequest.getThreads_ = (GetThreads_Req)this.getThreadsBuilder_.build();
                }
                if ((bitField0_ & 0x40) == 0x40) {
                    n |= 0x40;
                }
                Label_0395: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            compositeRequest.getFrames_ = this.getFrames_;
                            break Label_0395;
                        }
                    }
                    catch (NullPointerException ex7) {
                        throw b(ex7);
                    }
                    compositeRequest.getFrames_ = (GetFrames_Req)this.getFramesBuilder_.build();
                }
                if ((bitField0_ & 0x80) == 0x80) {
                    n |= 0x80;
                }
                Label_0452: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            compositeRequest.addBreakpoint_ = this.addBreakpoint_;
                            break Label_0452;
                        }
                    }
                    catch (NullPointerException ex8) {
                        throw b(ex8);
                    }
                    compositeRequest.addBreakpoint_ = (AddBreakpoint_Req)this.addBreakpointBuilder_.build();
                }
                if ((bitField0_ & 0x100) == 0x100) {
                    n |= 0x100;
                }
                Label_0509: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            compositeRequest.removeBreakpoint_ = this.removeBreakpoint_;
                            break Label_0509;
                        }
                    }
                    catch (NullPointerException ex9) {
                        throw b(ex9);
                    }
                    compositeRequest.removeBreakpoint_ = (RemoveBreakpoint_Req)this.removeBreakpointBuilder_.build();
                }
                if ((bitField0_ & 0x200) == 0x200) {
                    n |= 0x200;
                }
                Label_0566: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            compositeRequest.stepInto_ = this.stepInto_;
                            break Label_0566;
                        }
                    }
                    catch (NullPointerException ex10) {
                        throw b(ex10);
                    }
                    compositeRequest.stepInto_ = (StepInto_Req)this.stepIntoBuilder_.build();
                }
                if ((bitField0_ & 0x400) == 0x400) {
                    n |= 0x400;
                }
                Label_0623: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            compositeRequest.stepOver_ = this.stepOver_;
                            break Label_0623;
                        }
                    }
                    catch (NullPointerException ex11) {
                        throw b(ex11);
                    }
                    compositeRequest.stepOver_ = (StepOver_Req)this.stepOverBuilder_.build();
                }
                if ((bitField0_ & 0x800) == 0x800) {
                    n |= 0x800;
                }
                Label_0680: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            compositeRequest.stepOut_ = this.stepOut_;
                            break Label_0680;
                        }
                    }
                    catch (NullPointerException ex12) {
                        throw b(ex12);
                    }
                    compositeRequest.stepOut_ = (StepOut_Req)this.stepOutBuilder_.build();
                }
                if ((bitField0_ & 0x1000) == 0x1000) {
                    n |= 0x1000;
                }
                Label_0737: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            compositeRequest.evaluateExpression_ = this.evaluateExpression_;
                            break Label_0737;
                        }
                    }
                    catch (NullPointerException ex13) {
                        throw b(ex13);
                    }
                    compositeRequest.evaluateExpression_ = (EvaluateExpression_Req)this.evaluateExpressionBuilder_.build();
                }
                if ((bitField0_ & 0x2000) == 0x2000) {
                    n |= 0x2000;
                }
                Label_0794: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            compositeRequest.getValueChildren_ = this.getValueChildren_;
                            break Label_0794;
                        }
                    }
                    catch (NullPointerException ex14) {
                        throw b(ex14);
                    }
                    compositeRequest.getValueChildren_ = (GetValueChildren_Req)this.getValueChildrenBuilder_.build();
                }
                if ((bitField0_ & 0x4000) == 0x4000) {
                    n |= 0x4000;
                }
                Label_0851: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            compositeRequest.getVars_ = this.getVars_;
                            break Label_0851;
                        }
                    }
                    catch (NullPointerException ex15) {
                        throw b(ex15);
                    }
                    compositeRequest.getVars_ = (GetVars_Req)this.getVarsBuilder_.build();
                }
                if ((bitField0_ & 0x8000) == 0x8000) {
                    n |= 0x8000;
                }
                Label_0905: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            compositeRequest.handleConsoleCommand_ = this.handleConsoleCommand_;
                            break Label_0905;
                        }
                    }
                    catch (NullPointerException ex16) {
                        throw b(ex16);
                    }
                    compositeRequest.handleConsoleCommand_ = (HandleConsoleCommand_Req)this.handleConsoleCommandBuilder_.build();
                }
                if ((bitField0_ & 0x10000) == 0x10000) {
                    n |= 0x10000;
                }
                Label_0959: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            compositeRequest.handleCompletion_ = this.handleCompletion_;
                            break Label_0959;
                        }
                    }
                    catch (NullPointerException ex17) {
                        throw b(ex17);
                    }
                    compositeRequest.handleCompletion_ = (HandleCompletion_Req)this.handleCompletionBuilder_.build();
                }
                if ((bitField0_ & 0x20000) == 0x20000) {
                    n |= 0x20000;
                }
                Label_1013: {
                    try {
                        if (this.attachBuilder_ == null) {
                            compositeRequest.attach_ = this.attach_;
                            break Label_1013;
                        }
                    }
                    catch (NullPointerException ex18) {
                        throw b(ex18);
                    }
                    compositeRequest.attach_ = (Attach_Req)this.attachBuilder_.build();
                }
                if ((bitField0_ & 0x40000) == 0x40000) {
                    n |= 0x40000;
                }
                Label_1067: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            compositeRequest.attachByName_ = this.attachByName_;
                            break Label_1067;
                        }
                    }
                    catch (NullPointerException ex19) {
                        throw b(ex19);
                    }
                    compositeRequest.attachByName_ = (AttachByName_Req)this.attachByNameBuilder_.build();
                }
                if ((bitField0_ & 0x80000) == 0x80000) {
                    n |= 0x80000;
                }
                Label_1121: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            compositeRequest.dispatchInput_ = this.dispatchInput_;
                            break Label_1121;
                        }
                    }
                    catch (NullPointerException ex20) {
                        throw b(ex20);
                    }
                    compositeRequest.dispatchInput_ = (DispatchInput_Req)this.dispatchInputBuilder_.build();
                }
                if ((bitField0_ & 0x100000) == 0x100000) {
                    n |= 0x100000;
                }
                Label_1175: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            compositeRequest.addWatchpoint_ = this.addWatchpoint_;
                            break Label_1175;
                        }
                    }
                    catch (NullPointerException ex21) {
                        throw b(ex21);
                    }
                    compositeRequest.addWatchpoint_ = (AddWatchpoint_Req)this.addWatchpointBuilder_.build();
                }
                if ((bitField0_ & 0x200000) == 0x200000) {
                    n |= 0x200000;
                }
                Label_1229: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            compositeRequest.removeWatchpoint_ = this.removeWatchpoint_;
                            break Label_1229;
                        }
                    }
                    catch (NullPointerException ex22) {
                        throw b(ex22);
                    }
                    compositeRequest.removeWatchpoint_ = (RemoveWatchpoint_Req)this.removeWatchpointBuilder_.build();
                }
                if ((bitField0_ & 0x400000) == 0x400000) {
                    n |= 0x400000;
                }
                Label_1283: {
                    try {
                        if (this.detachBuilder_ == null) {
                            compositeRequest.detach_ = this.detach_;
                            break Label_1283;
                        }
                    }
                    catch (NullPointerException ex23) {
                        throw b(ex23);
                    }
                    compositeRequest.detach_ = (Detach_Req)this.detachBuilder_.build();
                }
                if ((bitField0_ & 0x800000) == 0x800000) {
                    n |= 0x800000;
                }
                Label_1337: {
                    try {
                        if (this.killBuilder_ == null) {
                            compositeRequest.kill_ = this.kill_;
                            break Label_1337;
                        }
                    }
                    catch (NullPointerException ex24) {
                        throw b(ex24);
                    }
                    compositeRequest.kill_ = (Kill_Req)this.killBuilder_.build();
                }
                if ((bitField0_ & 0x1000000) == 0x1000000) {
                    n |= 0x1000000;
                }
                Label_1391: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            compositeRequest.getChildrenCount_ = this.getChildrenCount_;
                            break Label_1391;
                        }
                    }
                    catch (NullPointerException ex25) {
                        throw b(ex25);
                    }
                    compositeRequest.getChildrenCount_ = (GetChildrenCount_Req)this.getChildrenCountBuilder_.build();
                }
                if ((bitField0_ & 0x2000000) == 0x2000000) {
                    n |= 0x2000000;
                }
                Label_1445: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            compositeRequest.getArraySlice_ = this.getArraySlice_;
                            break Label_1445;
                        }
                    }
                    catch (NullPointerException ex26) {
                        throw b(ex26);
                    }
                    compositeRequest.getArraySlice_ = (GetArraySlice_Req)this.getArraySliceBuilder_.build();
                }
                if ((bitField0_ & 0x4000000) == 0x4000000) {
                    n |= 0x4000000;
                }
                Label_1499: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            compositeRequest.getValueData_ = this.getValueData_;
                            break Label_1499;
                        }
                    }
                    catch (NullPointerException ex27) {
                        throw b(ex27);
                    }
                    compositeRequest.getValueData_ = (GetValueData_Req)this.getValueDataBuilder_.build();
                }
                if ((bitField0_ & 0x8000000) == 0x8000000) {
                    n |= 0x8000000;
                }
                Label_1553: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            compositeRequest.getValueDescription_ = this.getValueDescription_;
                            break Label_1553;
                        }
                    }
                    catch (NullPointerException ex28) {
                        throw b(ex28);
                    }
                    compositeRequest.getValueDescription_ = (GetValueDescription_Req)this.getValueDescriptionBuilder_.build();
                }
                if ((bitField0_ & 0x10000000) == 0x10000000) {
                    n |= 0x10000000;
                }
                Label_1607: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            compositeRequest.valuesFilteringPolicy_ = this.valuesFilteringPolicy_;
                            break Label_1607;
                        }
                    }
                    catch (NullPointerException ex29) {
                        throw b(ex29);
                    }
                    compositeRequest.valuesFilteringPolicy_ = (ValuesFilteringPolicy_Req)this.valuesFilteringPolicyBuilder_.build();
                }
                if ((bitField0_ & 0x20000000) == 0x20000000) {
                    n |= 0x20000000;
                }
                Label_1661: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            compositeRequest.connectPlatform_ = this.connectPlatform_;
                            break Label_1661;
                        }
                    }
                    catch (NullPointerException ex30) {
                        throw b(ex30);
                    }
                    compositeRequest.connectPlatform_ = (ConnectPlatform_Req)this.connectPlatformBuilder_.build();
                }
                if ((bitField0_ & 0x40000000) == 0x40000000) {
                    n |= 0x40000000;
                }
                Label_1715: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            compositeRequest.getValueAddress_ = this.getValueAddress_;
                            break Label_1715;
                        }
                    }
                    catch (NullPointerException ex31) {
                        throw b(ex31);
                    }
                    compositeRequest.getValueAddress_ = (GetValueAddress_Req)this.getValueAddressBuilder_.build();
                }
                if ((bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                    n |= Integer.MIN_VALUE;
                }
                Label_1769: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            compositeRequest.handleSignal_ = this.handleSignal_;
                            break Label_1769;
                        }
                    }
                    catch (NullPointerException ex32) {
                        throw b(ex32);
                    }
                    compositeRequest.handleSignal_ = (HandleSignal_Req)this.handleSignalBuilder_.build();
                }
                if ((bitField1_ & 0x1) == 0x1) {
                    n2 |= 0x1;
                }
                Label_1820: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            compositeRequest.executeShellCommand_ = this.executeShellCommand_;
                            break Label_1820;
                        }
                    }
                    catch (NullPointerException ex33) {
                        throw b(ex33);
                    }
                    compositeRequest.executeShellCommand_ = (ExecuteShellCommand_Req)this.executeShellCommandBuilder_.build();
                }
                compositeRequest.bitField0_ = n;
                compositeRequest.bitField1_ = n2;
                this.onBuilt();
                return compositeRequest;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof CompositeRequest) {
                        return this.mergeFrom((CompositeRequest)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final CompositeRequest compositeRequest) {
                try {
                    if (compositeRequest == CompositeRequest.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (compositeRequest.hasCreateTarget()) {
                        this.mergeCreateTarget(compositeRequest.getCreateTarget());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (compositeRequest.hasLaunch()) {
                        this.mergeLaunch(compositeRequest.getLaunch());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (compositeRequest.hasExit()) {
                        this.mergeExit(compositeRequest.getExit());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (compositeRequest.hasContinue()) {
                        this.mergeContinue(compositeRequest.getContinue());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                try {
                    if (compositeRequest.hasSuspend()) {
                        this.mergeSuspend(compositeRequest.getSuspend());
                    }
                }
                catch (NullPointerException ex6) {
                    throw b(ex6);
                }
                try {
                    if (compositeRequest.hasGetThreads()) {
                        this.mergeGetThreads(compositeRequest.getGetThreads());
                    }
                }
                catch (NullPointerException ex7) {
                    throw b(ex7);
                }
                try {
                    if (compositeRequest.hasGetFrames()) {
                        this.mergeGetFrames(compositeRequest.getGetFrames());
                    }
                }
                catch (NullPointerException ex8) {
                    throw b(ex8);
                }
                try {
                    if (compositeRequest.hasAddBreakpoint()) {
                        this.mergeAddBreakpoint(compositeRequest.getAddBreakpoint());
                    }
                }
                catch (NullPointerException ex9) {
                    throw b(ex9);
                }
                try {
                    if (compositeRequest.hasRemoveBreakpoint()) {
                        this.mergeRemoveBreakpoint(compositeRequest.getRemoveBreakpoint());
                    }
                }
                catch (NullPointerException ex10) {
                    throw b(ex10);
                }
                try {
                    if (compositeRequest.hasStepInto()) {
                        this.mergeStepInto(compositeRequest.getStepInto());
                    }
                }
                catch (NullPointerException ex11) {
                    throw b(ex11);
                }
                try {
                    if (compositeRequest.hasStepOver()) {
                        this.mergeStepOver(compositeRequest.getStepOver());
                    }
                }
                catch (NullPointerException ex12) {
                    throw b(ex12);
                }
                try {
                    if (compositeRequest.hasStepOut()) {
                        this.mergeStepOut(compositeRequest.getStepOut());
                    }
                }
                catch (NullPointerException ex13) {
                    throw b(ex13);
                }
                try {
                    if (compositeRequest.hasEvaluateExpression()) {
                        this.mergeEvaluateExpression(compositeRequest.getEvaluateExpression());
                    }
                }
                catch (NullPointerException ex14) {
                    throw b(ex14);
                }
                try {
                    if (compositeRequest.hasGetValueChildren()) {
                        this.mergeGetValueChildren(compositeRequest.getGetValueChildren());
                    }
                }
                catch (NullPointerException ex15) {
                    throw b(ex15);
                }
                try {
                    if (compositeRequest.hasGetVars()) {
                        this.mergeGetVars(compositeRequest.getGetVars());
                    }
                }
                catch (NullPointerException ex16) {
                    throw b(ex16);
                }
                try {
                    if (compositeRequest.hasHandleConsoleCommand()) {
                        this.mergeHandleConsoleCommand(compositeRequest.getHandleConsoleCommand());
                    }
                }
                catch (NullPointerException ex17) {
                    throw b(ex17);
                }
                try {
                    if (compositeRequest.hasHandleCompletion()) {
                        this.mergeHandleCompletion(compositeRequest.getHandleCompletion());
                    }
                }
                catch (NullPointerException ex18) {
                    throw b(ex18);
                }
                try {
                    if (compositeRequest.hasAttach()) {
                        this.mergeAttach(compositeRequest.getAttach());
                    }
                }
                catch (NullPointerException ex19) {
                    throw b(ex19);
                }
                try {
                    if (compositeRequest.hasAttachByName()) {
                        this.mergeAttachByName(compositeRequest.getAttachByName());
                    }
                }
                catch (NullPointerException ex20) {
                    throw b(ex20);
                }
                try {
                    if (compositeRequest.hasDispatchInput()) {
                        this.mergeDispatchInput(compositeRequest.getDispatchInput());
                    }
                }
                catch (NullPointerException ex21) {
                    throw b(ex21);
                }
                try {
                    if (compositeRequest.hasAddWatchpoint()) {
                        this.mergeAddWatchpoint(compositeRequest.getAddWatchpoint());
                    }
                }
                catch (NullPointerException ex22) {
                    throw b(ex22);
                }
                try {
                    if (compositeRequest.hasRemoveWatchpoint()) {
                        this.mergeRemoveWatchpoint(compositeRequest.getRemoveWatchpoint());
                    }
                }
                catch (NullPointerException ex23) {
                    throw b(ex23);
                }
                try {
                    if (compositeRequest.hasDetach()) {
                        this.mergeDetach(compositeRequest.getDetach());
                    }
                }
                catch (NullPointerException ex24) {
                    throw b(ex24);
                }
                try {
                    if (compositeRequest.hasKill()) {
                        this.mergeKill(compositeRequest.getKill());
                    }
                }
                catch (NullPointerException ex25) {
                    throw b(ex25);
                }
                try {
                    if (compositeRequest.hasGetChildrenCount()) {
                        this.mergeGetChildrenCount(compositeRequest.getGetChildrenCount());
                    }
                }
                catch (NullPointerException ex26) {
                    throw b(ex26);
                }
                try {
                    if (compositeRequest.hasGetArraySlice()) {
                        this.mergeGetArraySlice(compositeRequest.getGetArraySlice());
                    }
                }
                catch (NullPointerException ex27) {
                    throw b(ex27);
                }
                try {
                    if (compositeRequest.hasGetValueData()) {
                        this.mergeGetValueData(compositeRequest.getGetValueData());
                    }
                }
                catch (NullPointerException ex28) {
                    throw b(ex28);
                }
                try {
                    if (compositeRequest.hasGetValueDescription()) {
                        this.mergeGetValueDescription(compositeRequest.getGetValueDescription());
                    }
                }
                catch (NullPointerException ex29) {
                    throw b(ex29);
                }
                try {
                    if (compositeRequest.hasValuesFilteringPolicy()) {
                        this.mergeValuesFilteringPolicy(compositeRequest.getValuesFilteringPolicy());
                    }
                }
                catch (NullPointerException ex30) {
                    throw b(ex30);
                }
                try {
                    if (compositeRequest.hasConnectPlatform()) {
                        this.mergeConnectPlatform(compositeRequest.getConnectPlatform());
                    }
                }
                catch (NullPointerException ex31) {
                    throw b(ex31);
                }
                try {
                    if (compositeRequest.hasGetValueAddress()) {
                        this.mergeGetValueAddress(compositeRequest.getGetValueAddress());
                    }
                }
                catch (NullPointerException ex32) {
                    throw b(ex32);
                }
                try {
                    if (compositeRequest.hasHandleSignal()) {
                        this.mergeHandleSignal(compositeRequest.getHandleSignal());
                    }
                }
                catch (NullPointerException ex33) {
                    throw b(ex33);
                }
                try {
                    if (compositeRequest.hasExecuteShellCommand()) {
                        this.mergeExecuteShellCommand(compositeRequest.getExecuteShellCommand());
                    }
                }
                catch (NullPointerException ex34) {
                    throw b(ex34);
                }
                this.mergeUnknownFields(compositeRequest.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                Label_0720: {
                    Label_0690: {
                        Label_0660: {
                            Label_0630: {
                                Label_0600: {
                                    Label_0570: {
                                        Label_0540: {
                                            Label_0510: {
                                                Label_0480: {
                                                    Label_0450: {
                                                        Label_0420: {
                                                            Label_0390: {
                                                                Label_0360: {
                                                                    Label_0330: {
                                                                        Label_0300: {
                                                                            Label_0270: {
                                                                                Label_0240: {
                                                                                    Label_0210: {
                                                                                        Label_0180: {
                                                                                            Label_0150: {
                                                                                                Label_0120: {
                                                                                                    Label_0090: {
                                                                                                        Label_0060: {
                                                                                                            Label_0030: {
                                                                                                                try {
                                                                                                                    if (!this.hasLaunch()) {
                                                                                                                        break Label_0030;
                                                                                                                    }
                                                                                                                    final Builder builder = this;
                                                                                                                    final Launch_Req launch_Req = builder.getLaunch();
                                                                                                                    final boolean b = launch_Req.isInitialized();
                                                                                                                    if (!b) {
                                                                                                                        return false;
                                                                                                                    }
                                                                                                                    break Label_0030;
                                                                                                                }
                                                                                                                catch (NullPointerException ex) {
                                                                                                                    throw b(ex);
                                                                                                                }
                                                                                                                try {
                                                                                                                    final Builder builder = this;
                                                                                                                    final Launch_Req launch_Req = builder.getLaunch();
                                                                                                                    final boolean b = launch_Req.isInitialized();
                                                                                                                    if (!b) {
                                                                                                                        return false;
                                                                                                                    }
                                                                                                                }
                                                                                                                catch (NullPointerException ex2) {
                                                                                                                    throw b(ex2);
                                                                                                                }
                                                                                                                try {
                                                                                                                    if (!this.hasGetFrames()) {
                                                                                                                        break Label_0060;
                                                                                                                    }
                                                                                                                    final Builder builder2 = this;
                                                                                                                    final GetFrames_Req getFrames_Req = builder2.getGetFrames();
                                                                                                                    final boolean b2 = getFrames_Req.isInitialized();
                                                                                                                    if (!b2) {
                                                                                                                        return false;
                                                                                                                    }
                                                                                                                    break Label_0060;
                                                                                                                }
                                                                                                                catch (NullPointerException ex3) {
                                                                                                                    throw b(ex3);
                                                                                                                }
                                                                                                            }
                                                                                                            try {
                                                                                                                final Builder builder2 = this;
                                                                                                                final GetFrames_Req getFrames_Req = builder2.getGetFrames();
                                                                                                                final boolean b2 = getFrames_Req.isInitialized();
                                                                                                                if (!b2) {
                                                                                                                    return false;
                                                                                                                }
                                                                                                            }
                                                                                                            catch (NullPointerException ex4) {
                                                                                                                throw b(ex4);
                                                                                                            }
                                                                                                            try {
                                                                                                                if (!this.hasRemoveBreakpoint()) {
                                                                                                                    break Label_0090;
                                                                                                                }
                                                                                                                final Builder builder3 = this;
                                                                                                                final RemoveBreakpoint_Req removeBreakpoint_Req = builder3.getRemoveBreakpoint();
                                                                                                                final boolean b3 = removeBreakpoint_Req.isInitialized();
                                                                                                                if (!b3) {
                                                                                                                    return false;
                                                                                                                }
                                                                                                                break Label_0090;
                                                                                                            }
                                                                                                            catch (NullPointerException ex5) {
                                                                                                                throw b(ex5);
                                                                                                            }
                                                                                                        }
                                                                                                        try {
                                                                                                            final Builder builder3 = this;
                                                                                                            final RemoveBreakpoint_Req removeBreakpoint_Req = builder3.getRemoveBreakpoint();
                                                                                                            final boolean b3 = removeBreakpoint_Req.isInitialized();
                                                                                                            if (!b3) {
                                                                                                                return false;
                                                                                                            }
                                                                                                        }
                                                                                                        catch (NullPointerException ex6) {
                                                                                                            throw b(ex6);
                                                                                                        }
                                                                                                        try {
                                                                                                            if (!this.hasStepInto()) {
                                                                                                                break Label_0120;
                                                                                                            }
                                                                                                            final Builder builder4 = this;
                                                                                                            final StepInto_Req stepInto_Req = builder4.getStepInto();
                                                                                                            final boolean b4 = stepInto_Req.isInitialized();
                                                                                                            if (!b4) {
                                                                                                                return false;
                                                                                                            }
                                                                                                            break Label_0120;
                                                                                                        }
                                                                                                        catch (NullPointerException ex7) {
                                                                                                            throw b(ex7);
                                                                                                        }
                                                                                                    }
                                                                                                    try {
                                                                                                        final Builder builder4 = this;
                                                                                                        final StepInto_Req stepInto_Req = builder4.getStepInto();
                                                                                                        final boolean b4 = stepInto_Req.isInitialized();
                                                                                                        if (!b4) {
                                                                                                            return false;
                                                                                                        }
                                                                                                    }
                                                                                                    catch (NullPointerException ex8) {
                                                                                                        throw b(ex8);
                                                                                                    }
                                                                                                    try {
                                                                                                        if (!this.hasStepOver()) {
                                                                                                            break Label_0150;
                                                                                                        }
                                                                                                        final Builder builder5 = this;
                                                                                                        final StepOver_Req stepOver_Req = builder5.getStepOver();
                                                                                                        final boolean b5 = stepOver_Req.isInitialized();
                                                                                                        if (!b5) {
                                                                                                            return false;
                                                                                                        }
                                                                                                        break Label_0150;
                                                                                                    }
                                                                                                    catch (NullPointerException ex9) {
                                                                                                        throw b(ex9);
                                                                                                    }
                                                                                                }
                                                                                                try {
                                                                                                    final Builder builder5 = this;
                                                                                                    final StepOver_Req stepOver_Req = builder5.getStepOver();
                                                                                                    final boolean b5 = stepOver_Req.isInitialized();
                                                                                                    if (!b5) {
                                                                                                        return false;
                                                                                                    }
                                                                                                }
                                                                                                catch (NullPointerException ex10) {
                                                                                                    throw b(ex10);
                                                                                                }
                                                                                                try {
                                                                                                    if (!this.hasStepOut()) {
                                                                                                        break Label_0180;
                                                                                                    }
                                                                                                    final Builder builder6 = this;
                                                                                                    final StepOut_Req stepOut_Req = builder6.getStepOut();
                                                                                                    final boolean b6 = stepOut_Req.isInitialized();
                                                                                                    if (!b6) {
                                                                                                        return false;
                                                                                                    }
                                                                                                    break Label_0180;
                                                                                                }
                                                                                                catch (NullPointerException ex11) {
                                                                                                    throw b(ex11);
                                                                                                }
                                                                                            }
                                                                                            try {
                                                                                                final Builder builder6 = this;
                                                                                                final StepOut_Req stepOut_Req = builder6.getStepOut();
                                                                                                final boolean b6 = stepOut_Req.isInitialized();
                                                                                                if (!b6) {
                                                                                                    return false;
                                                                                                }
                                                                                            }
                                                                                            catch (NullPointerException ex12) {
                                                                                                throw b(ex12);
                                                                                            }
                                                                                            try {
                                                                                                if (!this.hasEvaluateExpression()) {
                                                                                                    break Label_0210;
                                                                                                }
                                                                                                final Builder builder7 = this;
                                                                                                final EvaluateExpression_Req evaluateExpression_Req = builder7.getEvaluateExpression();
                                                                                                final boolean b7 = evaluateExpression_Req.isInitialized();
                                                                                                if (!b7) {
                                                                                                    return false;
                                                                                                }
                                                                                                break Label_0210;
                                                                                            }
                                                                                            catch (NullPointerException ex13) {
                                                                                                throw b(ex13);
                                                                                            }
                                                                                        }
                                                                                        try {
                                                                                            final Builder builder7 = this;
                                                                                            final EvaluateExpression_Req evaluateExpression_Req = builder7.getEvaluateExpression();
                                                                                            final boolean b7 = evaluateExpression_Req.isInitialized();
                                                                                            if (!b7) {
                                                                                                return false;
                                                                                            }
                                                                                        }
                                                                                        catch (NullPointerException ex14) {
                                                                                            throw b(ex14);
                                                                                        }
                                                                                        try {
                                                                                            if (!this.hasGetValueChildren()) {
                                                                                                break Label_0240;
                                                                                            }
                                                                                            final Builder builder8 = this;
                                                                                            final GetValueChildren_Req getValueChildren_Req = builder8.getGetValueChildren();
                                                                                            final boolean b8 = getValueChildren_Req.isInitialized();
                                                                                            if (!b8) {
                                                                                                return false;
                                                                                            }
                                                                                            break Label_0240;
                                                                                        }
                                                                                        catch (NullPointerException ex15) {
                                                                                            throw b(ex15);
                                                                                        }
                                                                                    }
                                                                                    try {
                                                                                        final Builder builder8 = this;
                                                                                        final GetValueChildren_Req getValueChildren_Req = builder8.getGetValueChildren();
                                                                                        final boolean b8 = getValueChildren_Req.isInitialized();
                                                                                        if (!b8) {
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    catch (NullPointerException ex16) {
                                                                                        throw b(ex16);
                                                                                    }
                                                                                    try {
                                                                                        if (!this.hasGetVars()) {
                                                                                            break Label_0270;
                                                                                        }
                                                                                        final Builder builder9 = this;
                                                                                        final GetVars_Req getVars_Req = builder9.getGetVars();
                                                                                        final boolean b9 = getVars_Req.isInitialized();
                                                                                        if (!b9) {
                                                                                            return false;
                                                                                        }
                                                                                        break Label_0270;
                                                                                    }
                                                                                    catch (NullPointerException ex17) {
                                                                                        throw b(ex17);
                                                                                    }
                                                                                }
                                                                                try {
                                                                                    final Builder builder9 = this;
                                                                                    final GetVars_Req getVars_Req = builder9.getGetVars();
                                                                                    final boolean b9 = getVars_Req.isInitialized();
                                                                                    if (!b9) {
                                                                                        return false;
                                                                                    }
                                                                                }
                                                                                catch (NullPointerException ex18) {
                                                                                    throw b(ex18);
                                                                                }
                                                                                try {
                                                                                    if (!this.hasHandleConsoleCommand()) {
                                                                                        break Label_0300;
                                                                                    }
                                                                                    final Builder builder10 = this;
                                                                                    final HandleConsoleCommand_Req handleConsoleCommand_Req = builder10.getHandleConsoleCommand();
                                                                                    final boolean b10 = handleConsoleCommand_Req.isInitialized();
                                                                                    if (!b10) {
                                                                                        return false;
                                                                                    }
                                                                                    break Label_0300;
                                                                                }
                                                                                catch (NullPointerException ex19) {
                                                                                    throw b(ex19);
                                                                                }
                                                                            }
                                                                            try {
                                                                                final Builder builder10 = this;
                                                                                final HandleConsoleCommand_Req handleConsoleCommand_Req = builder10.getHandleConsoleCommand();
                                                                                final boolean b10 = handleConsoleCommand_Req.isInitialized();
                                                                                if (!b10) {
                                                                                    return false;
                                                                                }
                                                                            }
                                                                            catch (NullPointerException ex20) {
                                                                                throw b(ex20);
                                                                            }
                                                                            try {
                                                                                if (!this.hasHandleCompletion()) {
                                                                                    break Label_0330;
                                                                                }
                                                                                final Builder builder11 = this;
                                                                                final HandleCompletion_Req handleCompletion_Req = builder11.getHandleCompletion();
                                                                                final boolean b11 = handleCompletion_Req.isInitialized();
                                                                                if (!b11) {
                                                                                    return false;
                                                                                }
                                                                                break Label_0330;
                                                                            }
                                                                            catch (NullPointerException ex21) {
                                                                                throw b(ex21);
                                                                            }
                                                                        }
                                                                        try {
                                                                            final Builder builder11 = this;
                                                                            final HandleCompletion_Req handleCompletion_Req = builder11.getHandleCompletion();
                                                                            final boolean b11 = handleCompletion_Req.isInitialized();
                                                                            if (!b11) {
                                                                                return false;
                                                                            }
                                                                        }
                                                                        catch (NullPointerException ex22) {
                                                                            throw b(ex22);
                                                                        }
                                                                        try {
                                                                            if (!this.hasAttach()) {
                                                                                break Label_0360;
                                                                            }
                                                                            final Builder builder12 = this;
                                                                            final Attach_Req attach_Req = builder12.getAttach();
                                                                            final boolean b12 = attach_Req.isInitialized();
                                                                            if (!b12) {
                                                                                return false;
                                                                            }
                                                                            break Label_0360;
                                                                        }
                                                                        catch (NullPointerException ex23) {
                                                                            throw b(ex23);
                                                                        }
                                                                    }
                                                                    try {
                                                                        final Builder builder12 = this;
                                                                        final Attach_Req attach_Req = builder12.getAttach();
                                                                        final boolean b12 = attach_Req.isInitialized();
                                                                        if (!b12) {
                                                                            return false;
                                                                        }
                                                                    }
                                                                    catch (NullPointerException ex24) {
                                                                        throw b(ex24);
                                                                    }
                                                                    try {
                                                                        if (!this.hasAttachByName()) {
                                                                            break Label_0390;
                                                                        }
                                                                        final Builder builder13 = this;
                                                                        final AttachByName_Req attachByName_Req = builder13.getAttachByName();
                                                                        final boolean b13 = attachByName_Req.isInitialized();
                                                                        if (!b13) {
                                                                            return false;
                                                                        }
                                                                        break Label_0390;
                                                                    }
                                                                    catch (NullPointerException ex25) {
                                                                        throw b(ex25);
                                                                    }
                                                                }
                                                                try {
                                                                    final Builder builder13 = this;
                                                                    final AttachByName_Req attachByName_Req = builder13.getAttachByName();
                                                                    final boolean b13 = attachByName_Req.isInitialized();
                                                                    if (!b13) {
                                                                        return false;
                                                                    }
                                                                }
                                                                catch (NullPointerException ex26) {
                                                                    throw b(ex26);
                                                                }
                                                                try {
                                                                    if (!this.hasDispatchInput()) {
                                                                        break Label_0420;
                                                                    }
                                                                    final Builder builder14 = this;
                                                                    final DispatchInput_Req dispatchInput_Req = builder14.getDispatchInput();
                                                                    final boolean b14 = dispatchInput_Req.isInitialized();
                                                                    if (!b14) {
                                                                        return false;
                                                                    }
                                                                    break Label_0420;
                                                                }
                                                                catch (NullPointerException ex27) {
                                                                    throw b(ex27);
                                                                }
                                                            }
                                                            try {
                                                                final Builder builder14 = this;
                                                                final DispatchInput_Req dispatchInput_Req = builder14.getDispatchInput();
                                                                final boolean b14 = dispatchInput_Req.isInitialized();
                                                                if (!b14) {
                                                                    return false;
                                                                }
                                                            }
                                                            catch (NullPointerException ex28) {
                                                                throw b(ex28);
                                                            }
                                                            try {
                                                                if (!this.hasAddWatchpoint()) {
                                                                    break Label_0450;
                                                                }
                                                                final Builder builder15 = this;
                                                                final AddWatchpoint_Req addWatchpoint_Req = builder15.getAddWatchpoint();
                                                                final boolean b15 = addWatchpoint_Req.isInitialized();
                                                                if (!b15) {
                                                                    return false;
                                                                }
                                                                break Label_0450;
                                                            }
                                                            catch (NullPointerException ex29) {
                                                                throw b(ex29);
                                                            }
                                                        }
                                                        try {
                                                            final Builder builder15 = this;
                                                            final AddWatchpoint_Req addWatchpoint_Req = builder15.getAddWatchpoint();
                                                            final boolean b15 = addWatchpoint_Req.isInitialized();
                                                            if (!b15) {
                                                                return false;
                                                            }
                                                        }
                                                        catch (NullPointerException ex30) {
                                                            throw b(ex30);
                                                        }
                                                        try {
                                                            if (!this.hasRemoveWatchpoint()) {
                                                                break Label_0480;
                                                            }
                                                            final Builder builder16 = this;
                                                            final RemoveWatchpoint_Req removeWatchpoint_Req = builder16.getRemoveWatchpoint();
                                                            final boolean b16 = removeWatchpoint_Req.isInitialized();
                                                            if (!b16) {
                                                                return false;
                                                            }
                                                            break Label_0480;
                                                        }
                                                        catch (NullPointerException ex31) {
                                                            throw b(ex31);
                                                        }
                                                    }
                                                    try {
                                                        final Builder builder16 = this;
                                                        final RemoveWatchpoint_Req removeWatchpoint_Req = builder16.getRemoveWatchpoint();
                                                        final boolean b16 = removeWatchpoint_Req.isInitialized();
                                                        if (!b16) {
                                                            return false;
                                                        }
                                                    }
                                                    catch (NullPointerException ex32) {
                                                        throw b(ex32);
                                                    }
                                                    try {
                                                        if (!this.hasGetChildrenCount()) {
                                                            break Label_0510;
                                                        }
                                                        final Builder builder17 = this;
                                                        final GetChildrenCount_Req getChildrenCount_Req = builder17.getGetChildrenCount();
                                                        final boolean b17 = getChildrenCount_Req.isInitialized();
                                                        if (!b17) {
                                                            return false;
                                                        }
                                                        break Label_0510;
                                                    }
                                                    catch (NullPointerException ex33) {
                                                        throw b(ex33);
                                                    }
                                                }
                                                try {
                                                    final Builder builder17 = this;
                                                    final GetChildrenCount_Req getChildrenCount_Req = builder17.getGetChildrenCount();
                                                    final boolean b17 = getChildrenCount_Req.isInitialized();
                                                    if (!b17) {
                                                        return false;
                                                    }
                                                }
                                                catch (NullPointerException ex34) {
                                                    throw b(ex34);
                                                }
                                                try {
                                                    if (!this.hasGetArraySlice()) {
                                                        break Label_0540;
                                                    }
                                                    final Builder builder18 = this;
                                                    final GetArraySlice_Req getArraySlice_Req = builder18.getGetArraySlice();
                                                    final boolean b18 = getArraySlice_Req.isInitialized();
                                                    if (!b18) {
                                                        return false;
                                                    }
                                                    break Label_0540;
                                                }
                                                catch (NullPointerException ex35) {
                                                    throw b(ex35);
                                                }
                                            }
                                            try {
                                                final Builder builder18 = this;
                                                final GetArraySlice_Req getArraySlice_Req = builder18.getGetArraySlice();
                                                final boolean b18 = getArraySlice_Req.isInitialized();
                                                if (!b18) {
                                                    return false;
                                                }
                                            }
                                            catch (NullPointerException ex36) {
                                                throw b(ex36);
                                            }
                                            try {
                                                if (!this.hasGetValueData()) {
                                                    break Label_0570;
                                                }
                                                final Builder builder19 = this;
                                                final GetValueData_Req getValueData_Req = builder19.getGetValueData();
                                                final boolean b19 = getValueData_Req.isInitialized();
                                                if (!b19) {
                                                    return false;
                                                }
                                                break Label_0570;
                                            }
                                            catch (NullPointerException ex37) {
                                                throw b(ex37);
                                            }
                                        }
                                        try {
                                            final Builder builder19 = this;
                                            final GetValueData_Req getValueData_Req = builder19.getGetValueData();
                                            final boolean b19 = getValueData_Req.isInitialized();
                                            if (!b19) {
                                                return false;
                                            }
                                        }
                                        catch (NullPointerException ex38) {
                                            throw b(ex38);
                                        }
                                        try {
                                            if (!this.hasGetValueDescription()) {
                                                break Label_0600;
                                            }
                                            final Builder builder20 = this;
                                            final GetValueDescription_Req getValueDescription_Req = builder20.getGetValueDescription();
                                            final boolean b20 = getValueDescription_Req.isInitialized();
                                            if (!b20) {
                                                return false;
                                            }
                                            break Label_0600;
                                        }
                                        catch (NullPointerException ex39) {
                                            throw b(ex39);
                                        }
                                    }
                                    try {
                                        final Builder builder20 = this;
                                        final GetValueDescription_Req getValueDescription_Req = builder20.getGetValueDescription();
                                        final boolean b20 = getValueDescription_Req.isInitialized();
                                        if (!b20) {
                                            return false;
                                        }
                                    }
                                    catch (NullPointerException ex40) {
                                        throw b(ex40);
                                    }
                                    try {
                                        if (!this.hasValuesFilteringPolicy()) {
                                            break Label_0630;
                                        }
                                        final Builder builder21 = this;
                                        final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req = builder21.getValuesFilteringPolicy();
                                        final boolean b21 = valuesFilteringPolicy_Req.isInitialized();
                                        if (!b21) {
                                            return false;
                                        }
                                        break Label_0630;
                                    }
                                    catch (NullPointerException ex41) {
                                        throw b(ex41);
                                    }
                                }
                                try {
                                    final Builder builder21 = this;
                                    final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req = builder21.getValuesFilteringPolicy();
                                    final boolean b21 = valuesFilteringPolicy_Req.isInitialized();
                                    if (!b21) {
                                        return false;
                                    }
                                }
                                catch (NullPointerException ex42) {
                                    throw b(ex42);
                                }
                                try {
                                    if (!this.hasConnectPlatform()) {
                                        break Label_0660;
                                    }
                                    final Builder builder22 = this;
                                    final ConnectPlatform_Req connectPlatform_Req = builder22.getConnectPlatform();
                                    final boolean b22 = connectPlatform_Req.isInitialized();
                                    if (!b22) {
                                        return false;
                                    }
                                    break Label_0660;
                                }
                                catch (NullPointerException ex43) {
                                    throw b(ex43);
                                }
                            }
                            try {
                                final Builder builder22 = this;
                                final ConnectPlatform_Req connectPlatform_Req = builder22.getConnectPlatform();
                                final boolean b22 = connectPlatform_Req.isInitialized();
                                if (!b22) {
                                    return false;
                                }
                            }
                            catch (NullPointerException ex44) {
                                throw b(ex44);
                            }
                            try {
                                if (!this.hasGetValueAddress()) {
                                    break Label_0690;
                                }
                                final Builder builder23 = this;
                                final GetValueAddress_Req getValueAddress_Req = builder23.getGetValueAddress();
                                final boolean b23 = getValueAddress_Req.isInitialized();
                                if (!b23) {
                                    return false;
                                }
                                break Label_0690;
                            }
                            catch (NullPointerException ex45) {
                                throw b(ex45);
                            }
                        }
                        try {
                            final Builder builder23 = this;
                            final GetValueAddress_Req getValueAddress_Req = builder23.getGetValueAddress();
                            final boolean b23 = getValueAddress_Req.isInitialized();
                            if (!b23) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex46) {
                            throw b(ex46);
                        }
                        try {
                            if (!this.hasHandleSignal()) {
                                break Label_0720;
                            }
                            final Builder builder24 = this;
                            final HandleSignal_Req handleSignal_Req = builder24.getHandleSignal();
                            final boolean b24 = handleSignal_Req.isInitialized();
                            if (!b24) {
                                return false;
                            }
                            break Label_0720;
                        }
                        catch (NullPointerException ex47) {
                            throw b(ex47);
                        }
                    }
                    try {
                        final Builder builder24 = this;
                        final HandleSignal_Req handleSignal_Req = builder24.getHandleSignal();
                        final boolean b24 = handleSignal_Req.isInitialized();
                        if (!b24) {
                            return false;
                        }
                    }
                    catch (NullPointerException ex48) {
                        throw b(ex48);
                    }
                    try {
                        if (!this.hasExecuteShellCommand()) {
                            return true;
                        }
                        final Builder builder25 = this;
                        final ExecuteShellCommand_Req executeShellCommand_Req = builder25.getExecuteShellCommand();
                        final boolean b25 = executeShellCommand_Req.isInitialized();
                        if (!b25) {
                            return false;
                        }
                        return true;
                    }
                    catch (NullPointerException ex49) {
                        throw b(ex49);
                    }
                }
                try {
                    final Builder builder25 = this;
                    final ExecuteShellCommand_Req executeShellCommand_Req = builder25.getExecuteShellCommand();
                    final boolean b25 = executeShellCommand_Req.isInitialized();
                    if (!b25) {
                        return false;
                    }
                }
                catch (NullPointerException ex50) {
                    throw b(ex50);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                CompositeRequest compositeRequest = null;
                try {
                    compositeRequest = (CompositeRequest)CompositeRequest.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    compositeRequest = (CompositeRequest)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (compositeRequest != null) {
                            this.mergeFrom(compositeRequest);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCreateTarget() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CreateTarget_Req getCreateTarget() {
                try {
                    if (this.createTargetBuilder_ == null) {
                        return this.createTarget_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CreateTarget_Req)this.createTargetBuilder_.getMessage();
            }
            
            public Builder setCreateTarget(final CreateTarget_Req createTarget_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.createTargetBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CreateTarget_Req createTarget_Req2 = createTarget_Req;
                                if (createTarget_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CreateTarget_Req createTarget_Req2 = createTarget_Req;
                                if (createTarget_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.createTarget_ = createTarget_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.createTargetBuilder_.setMessage((GeneratedMessage)createTarget_Req);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCreateTarget(final CreateTarget_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            this.createTarget_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.createTargetBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCreateTarget(final CreateTarget_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTargetBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Req;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.createTargetBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCreateTarget() {
                Label_0033: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            this.createTarget_ = CreateTarget_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.createTargetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CreateTarget_Req.Builder getCreateTargetBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CreateTarget_Req.Builder)this.i().getBuilder();
            }
            
            public CreateTarget_ReqOrBuilder getCreateTargetOrBuilder() {
                try {
                    if (this.createTargetBuilder_ != null) {
                        return (CreateTarget_ReqOrBuilder)this.createTargetBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.createTarget_;
            }
            
            private SingleFieldBuilder<CreateTarget_Req, CreateTarget_Req.Builder, CreateTarget_ReqOrBuilder> i() {
                try {
                    if (this.createTargetBuilder_ == null) {
                        this.createTargetBuilder_ = (SingleFieldBuilder<CreateTarget_Req, CreateTarget_Req.Builder, CreateTarget_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.createTarget_, this.getParentForChildren(), this.isClean());
                        this.createTarget_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.createTargetBuilder_;
            }
            
            public boolean hasLaunch() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Launch_Req getLaunch() {
                try {
                    if (this.launchBuilder_ == null) {
                        return this.launch_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Launch_Req)this.launchBuilder_.getMessage();
            }
            
            public Builder setLaunch(final Launch_Req launch_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.launchBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Launch_Req launch_Req2 = launch_Req;
                                if (launch_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Launch_Req launch_Req2 = launch_Req;
                                if (launch_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.launch_ = launch_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.launchBuilder_.setMessage((GeneratedMessage)launch_Req);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setLaunch(final Launch_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.launchBuilder_ == null) {
                            this.launch_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.launchBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeLaunch(final Launch_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launchBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: iconst_2       
                //    12: iand           
                //    13: iconst_2       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Req;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.launchBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    92: iconst_2       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearLaunch() {
                Label_0033: {
                    try {
                        if (this.launchBuilder_ == null) {
                            this.launch_ = Launch_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.launchBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Launch_Req.Builder getLaunchBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return (Launch_Req.Builder)this.o().getBuilder();
            }
            
            public Launch_ReqOrBuilder getLaunchOrBuilder() {
                try {
                    if (this.launchBuilder_ != null) {
                        return (Launch_ReqOrBuilder)this.launchBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.launch_;
            }
            
            private SingleFieldBuilder<Launch_Req, Launch_Req.Builder, Launch_ReqOrBuilder> o() {
                try {
                    if (this.launchBuilder_ == null) {
                        this.launchBuilder_ = (SingleFieldBuilder<Launch_Req, Launch_Req.Builder, Launch_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.launch_, this.getParentForChildren(), this.isClean());
                        this.launch_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.launchBuilder_;
            }
            
            public boolean hasExit() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Exit_Req getExit() {
                try {
                    if (this.exitBuilder_ == null) {
                        return this.exit_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Exit_Req)this.exitBuilder_.getMessage();
            }
            
            public Builder setExit(final Exit_Req exit_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.exitBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Exit_Req exit_Req2 = exit_Req;
                                if (exit_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Exit_Req exit_Req2 = exit_Req;
                                if (exit_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.exit_ = exit_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.exitBuilder_.setMessage((GeneratedMessage)exit_Req);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setExit(final Exit_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.exitBuilder_ == null) {
                            this.exit_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.exitBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeExit(final Exit_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exitBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: iconst_4       
                //    12: iand           
                //    13: iconst_4       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exit_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exit_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exit_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exit_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Exit_Req;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.exitBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    92: iconst_4       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearExit() {
                Label_0033: {
                    try {
                        if (this.exitBuilder_ == null) {
                            this.exit_ = Exit_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.exitBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Exit_Req.Builder getExitBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return (Exit_Req.Builder)this.E().getBuilder();
            }
            
            public Exit_ReqOrBuilder getExitOrBuilder() {
                try {
                    if (this.exitBuilder_ != null) {
                        return (Exit_ReqOrBuilder)this.exitBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.exit_;
            }
            
            private SingleFieldBuilder<Exit_Req, Exit_Req.Builder, Exit_ReqOrBuilder> E() {
                try {
                    if (this.exitBuilder_ == null) {
                        this.exitBuilder_ = (SingleFieldBuilder<Exit_Req, Exit_Req.Builder, Exit_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.exit_, this.getParentForChildren(), this.isClean());
                        this.exit_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.exitBuilder_;
            }
            
            public boolean hasContinue() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Continue_Req getContinue() {
                try {
                    if (this.continueBuilder_ == null) {
                        return this.continue_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Continue_Req)this.continueBuilder_.getMessage();
            }
            
            public Builder setContinue(final Continue_Req continue_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.continueBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Continue_Req continue_Req2 = continue_Req;
                                if (continue_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Continue_Req continue_Req2 = continue_Req;
                                if (continue_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.continue_ = continue_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.continueBuilder_.setMessage((GeneratedMessage)continue_Req);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setContinue(final Continue_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.continueBuilder_ == null) {
                            this.continue_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.continueBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeContinue(final Continue_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: bipush          8
                //    13: iand           
                //    14: bipush          8
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.continueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: bipush          8
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearContinue() {
                Label_0033: {
                    try {
                        if (this.continueBuilder_ == null) {
                            this.continue_ = Continue_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.continueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Continue_Req.Builder getContinueBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return (Continue_Req.Builder)this.b().getBuilder();
            }
            
            public Continue_ReqOrBuilder getContinueOrBuilder() {
                try {
                    if (this.continueBuilder_ != null) {
                        return (Continue_ReqOrBuilder)this.continueBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.continue_;
            }
            
            private SingleFieldBuilder<Continue_Req, Continue_Req.Builder, Continue_ReqOrBuilder> b() {
                try {
                    if (this.continueBuilder_ == null) {
                        this.continueBuilder_ = (SingleFieldBuilder<Continue_Req, Continue_Req.Builder, Continue_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.continue_, this.getParentForChildren(), this.isClean());
                        this.continue_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.continueBuilder_;
            }
            
            public boolean hasSuspend() {
                try {
                    if ((this.bitField0_ & 0x10) == 0x10) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Suspend_Req getSuspend() {
                try {
                    if (this.suspendBuilder_ == null) {
                        return this.suspend_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Suspend_Req)this.suspendBuilder_.getMessage();
            }
            
            public Builder setSuspend(final Suspend_Req suspend_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.suspendBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Suspend_Req suspend_Req2 = suspend_Req;
                                if (suspend_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Suspend_Req suspend_Req2 = suspend_Req;
                                if (suspend_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.suspend_ = suspend_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.suspendBuilder_.setMessage((GeneratedMessage)suspend_Req);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setSuspend(final Suspend_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            this.suspend_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.suspendBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergeSuspend(final Suspend_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspendBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: bipush          16
                //    13: iand           
                //    14: bipush          16
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.suspendBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: bipush          16
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearSuspend() {
                Label_0033: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            this.suspend_ = Suspend_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.suspendBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public Suspend_Req.Builder getSuspendBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return (Suspend_Req.Builder)this.h().getBuilder();
            }
            
            public Suspend_ReqOrBuilder getSuspendOrBuilder() {
                try {
                    if (this.suspendBuilder_ != null) {
                        return (Suspend_ReqOrBuilder)this.suspendBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.suspend_;
            }
            
            private SingleFieldBuilder<Suspend_Req, Suspend_Req.Builder, Suspend_ReqOrBuilder> h() {
                try {
                    if (this.suspendBuilder_ == null) {
                        this.suspendBuilder_ = (SingleFieldBuilder<Suspend_Req, Suspend_Req.Builder, Suspend_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.suspend_, this.getParentForChildren(), this.isClean());
                        this.suspend_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.suspendBuilder_;
            }
            
            public boolean hasGetThreads() {
                try {
                    if ((this.bitField0_ & 0x20) == 0x20) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetThreads_Req getGetThreads() {
                try {
                    if (this.getThreadsBuilder_ == null) {
                        return this.getThreads_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetThreads_Req)this.getThreadsBuilder_.getMessage();
            }
            
            public Builder setGetThreads(final GetThreads_Req getThreads_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getThreadsBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetThreads_Req getThreads_Req2 = getThreads_Req;
                                if (getThreads_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetThreads_Req getThreads_Req2 = getThreads_Req;
                                if (getThreads_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getThreads_ = getThreads_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getThreadsBuilder_.setMessage((GeneratedMessage)getThreads_Req);
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder setGetThreads(final GetThreads_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            this.getThreads_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getThreadsBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder mergeGetThreads(final GetThreads_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreadsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: bipush          32
                //    13: iand           
                //    14: bipush          32
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getThreadsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: bipush          32
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetThreads() {
                Label_0033: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            this.getThreads_ = GetThreads_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getThreadsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            public GetThreads_Req.Builder getGetThreadsBuilder() {
                this.bitField0_ |= 0x20;
                this.onChanged();
                return (GetThreads_Req.Builder)this.F().getBuilder();
            }
            
            public GetThreads_ReqOrBuilder getGetThreadsOrBuilder() {
                try {
                    if (this.getThreadsBuilder_ != null) {
                        return (GetThreads_ReqOrBuilder)this.getThreadsBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getThreads_;
            }
            
            private SingleFieldBuilder<GetThreads_Req, GetThreads_Req.Builder, GetThreads_ReqOrBuilder> F() {
                try {
                    if (this.getThreadsBuilder_ == null) {
                        this.getThreadsBuilder_ = (SingleFieldBuilder<GetThreads_Req, GetThreads_Req.Builder, GetThreads_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getThreads_, this.getParentForChildren(), this.isClean());
                        this.getThreads_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getThreadsBuilder_;
            }
            
            public boolean hasGetFrames() {
                try {
                    if ((this.bitField0_ & 0x40) == 0x40) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetFrames_Req getGetFrames() {
                try {
                    if (this.getFramesBuilder_ == null) {
                        return this.getFrames_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetFrames_Req)this.getFramesBuilder_.getMessage();
            }
            
            public Builder setGetFrames(final GetFrames_Req getFrames_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getFramesBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetFrames_Req getFrames_Req2 = getFrames_Req;
                                if (getFrames_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetFrames_Req getFrames_Req2 = getFrames_Req;
                                if (getFrames_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getFrames_ = getFrames_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getFramesBuilder_.setMessage((GeneratedMessage)getFrames_Req);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder setGetFrames(final GetFrames_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            this.getFrames_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getFramesBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder mergeGetFrames(final GetFrames_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFramesBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: bipush          64
                //    13: iand           
                //    14: bipush          64
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getFramesBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: bipush          64
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetFrames() {
                Label_0033: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            this.getFrames_ = GetFrames_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getFramesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            public GetFrames_Req.Builder getGetFramesBuilder() {
                this.bitField0_ |= 0x40;
                this.onChanged();
                return (GetFrames_Req.Builder)this.f().getBuilder();
            }
            
            public GetFrames_ReqOrBuilder getGetFramesOrBuilder() {
                try {
                    if (this.getFramesBuilder_ != null) {
                        return (GetFrames_ReqOrBuilder)this.getFramesBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getFrames_;
            }
            
            private SingleFieldBuilder<GetFrames_Req, GetFrames_Req.Builder, GetFrames_ReqOrBuilder> f() {
                try {
                    if (this.getFramesBuilder_ == null) {
                        this.getFramesBuilder_ = (SingleFieldBuilder<GetFrames_Req, GetFrames_Req.Builder, GetFrames_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getFrames_, this.getParentForChildren(), this.isClean());
                        this.getFrames_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getFramesBuilder_;
            }
            
            public boolean hasAddBreakpoint() {
                try {
                    if ((this.bitField0_ & 0x80) == 0x80) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AddBreakpoint_Req getAddBreakpoint() {
                try {
                    if (this.addBreakpointBuilder_ == null) {
                        return this.addBreakpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AddBreakpoint_Req)this.addBreakpointBuilder_.getMessage();
            }
            
            public Builder setAddBreakpoint(final AddBreakpoint_Req addBreakpoint_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.addBreakpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AddBreakpoint_Req addBreakpoint_Req2 = addBreakpoint_Req;
                                if (addBreakpoint_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AddBreakpoint_Req addBreakpoint_Req2 = addBreakpoint_Req;
                                if (addBreakpoint_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.addBreakpoint_ = addBreakpoint_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.addBreakpointBuilder_.setMessage((GeneratedMessage)addBreakpoint_Req);
                }
                this.bitField0_ |= 0x80;
                return this;
            }
            
            public Builder setAddBreakpoint(final AddBreakpoint_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            this.addBreakpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addBreakpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x80;
                return this;
            }
            
            public Builder mergeAddBreakpoint(final AddBreakpoint_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          128
                //    14: iand           
                //    15: sipush          128
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          128
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAddBreakpoint() {
                Label_0033: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            this.addBreakpoint_ = AddBreakpoint_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addBreakpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }
            
            public AddBreakpoint_Req.Builder getAddBreakpointBuilder() {
                this.bitField0_ |= 0x80;
                this.onChanged();
                return (AddBreakpoint_Req.Builder)this.u().getBuilder();
            }
            
            public AddBreakpoint_ReqOrBuilder getAddBreakpointOrBuilder() {
                try {
                    if (this.addBreakpointBuilder_ != null) {
                        return (AddBreakpoint_ReqOrBuilder)this.addBreakpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addBreakpoint_;
            }
            
            private SingleFieldBuilder<AddBreakpoint_Req, AddBreakpoint_Req.Builder, AddBreakpoint_ReqOrBuilder> u() {
                try {
                    if (this.addBreakpointBuilder_ == null) {
                        this.addBreakpointBuilder_ = (SingleFieldBuilder<AddBreakpoint_Req, AddBreakpoint_Req.Builder, AddBreakpoint_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.addBreakpoint_, this.getParentForChildren(), this.isClean());
                        this.addBreakpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addBreakpointBuilder_;
            }
            
            public boolean hasRemoveBreakpoint() {
                try {
                    if ((this.bitField0_ & 0x100) == 0x100) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public RemoveBreakpoint_Req getRemoveBreakpoint() {
                try {
                    if (this.removeBreakpointBuilder_ == null) {
                        return this.removeBreakpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (RemoveBreakpoint_Req)this.removeBreakpointBuilder_.getMessage();
            }
            
            public Builder setRemoveBreakpoint(final RemoveBreakpoint_Req removeBreakpoint_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.removeBreakpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final RemoveBreakpoint_Req removeBreakpoint_Req2 = removeBreakpoint_Req;
                                if (removeBreakpoint_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final RemoveBreakpoint_Req removeBreakpoint_Req2 = removeBreakpoint_Req;
                                if (removeBreakpoint_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.removeBreakpoint_ = removeBreakpoint_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.removeBreakpointBuilder_.setMessage((GeneratedMessage)removeBreakpoint_Req);
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder setRemoveBreakpoint(final RemoveBreakpoint_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            this.removeBreakpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeBreakpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder mergeRemoveBreakpoint(final RemoveBreakpoint_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          256
                //    14: iand           
                //    15: sipush          256
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          256
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearRemoveBreakpoint() {
                Label_0033: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            this.removeBreakpoint_ = RemoveBreakpoint_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeBreakpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }
            
            public RemoveBreakpoint_Req.Builder getRemoveBreakpointBuilder() {
                this.bitField0_ |= 0x100;
                this.onChanged();
                return (RemoveBreakpoint_Req.Builder)this.m().getBuilder();
            }
            
            public RemoveBreakpoint_ReqOrBuilder getRemoveBreakpointOrBuilder() {
                try {
                    if (this.removeBreakpointBuilder_ != null) {
                        return (RemoveBreakpoint_ReqOrBuilder)this.removeBreakpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeBreakpoint_;
            }
            
            private SingleFieldBuilder<RemoveBreakpoint_Req, RemoveBreakpoint_Req.Builder, RemoveBreakpoint_ReqOrBuilder> m() {
                try {
                    if (this.removeBreakpointBuilder_ == null) {
                        this.removeBreakpointBuilder_ = (SingleFieldBuilder<RemoveBreakpoint_Req, RemoveBreakpoint_Req.Builder, RemoveBreakpoint_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.removeBreakpoint_, this.getParentForChildren(), this.isClean());
                        this.removeBreakpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeBreakpointBuilder_;
            }
            
            public boolean hasStepInto() {
                try {
                    if ((this.bitField0_ & 0x200) == 0x200) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepInto_Req getStepInto() {
                try {
                    if (this.stepIntoBuilder_ == null) {
                        return this.stepInto_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepInto_Req)this.stepIntoBuilder_.getMessage();
            }
            
            public Builder setStepInto(final StepInto_Req stepInto_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepIntoBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepInto_Req stepInto_Req2 = stepInto_Req;
                                if (stepInto_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepInto_Req stepInto_Req2 = stepInto_Req;
                                if (stepInto_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepInto_ = stepInto_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepIntoBuilder_.setMessage((GeneratedMessage)stepInto_Req);
                }
                this.bitField0_ |= 0x200;
                return this;
            }
            
            public Builder setStepInto(final StepInto_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            this.stepInto_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepIntoBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x200;
                return this;
            }
            
            public Builder mergeStepInto(final StepInto_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepIntoBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          512
                //    14: iand           
                //    15: sipush          512
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepIntoBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          512
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepInto() {
                Label_0033: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            this.stepInto_ = StepInto_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepIntoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }
            
            public StepInto_Req.Builder getStepIntoBuilder() {
                this.bitField0_ |= 0x200;
                this.onChanged();
                return (StepInto_Req.Builder)this.H().getBuilder();
            }
            
            public StepInto_ReqOrBuilder getStepIntoOrBuilder() {
                try {
                    if (this.stepIntoBuilder_ != null) {
                        return (StepInto_ReqOrBuilder)this.stepIntoBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepInto_;
            }
            
            private SingleFieldBuilder<StepInto_Req, StepInto_Req.Builder, StepInto_ReqOrBuilder> H() {
                try {
                    if (this.stepIntoBuilder_ == null) {
                        this.stepIntoBuilder_ = (SingleFieldBuilder<StepInto_Req, StepInto_Req.Builder, StepInto_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepInto_, this.getParentForChildren(), this.isClean());
                        this.stepInto_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepIntoBuilder_;
            }
            
            public boolean hasStepOver() {
                try {
                    if ((this.bitField0_ & 0x400) == 0x400) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepOver_Req getStepOver() {
                try {
                    if (this.stepOverBuilder_ == null) {
                        return this.stepOver_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepOver_Req)this.stepOverBuilder_.getMessage();
            }
            
            public Builder setStepOver(final StepOver_Req stepOver_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepOverBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepOver_Req stepOver_Req2 = stepOver_Req;
                                if (stepOver_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepOver_Req stepOver_Req2 = stepOver_Req;
                                if (stepOver_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepOver_ = stepOver_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepOverBuilder_.setMessage((GeneratedMessage)stepOver_Req);
                }
                this.bitField0_ |= 0x400;
                return this;
            }
            
            public Builder setStepOver(final StepOver_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            this.stepOver_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOverBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x400;
                return this;
            }
            
            public Builder mergeStepOver(final StepOver_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOverBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          1024
                //    14: iand           
                //    15: sipush          1024
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOverBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          1024
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepOver() {
                Label_0033: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            this.stepOver_ = StepOver_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOverBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFBFF;
                return this;
            }
            
            public StepOver_Req.Builder getStepOverBuilder() {
                this.bitField0_ |= 0x400;
                this.onChanged();
                return (StepOver_Req.Builder)this.n().getBuilder();
            }
            
            public StepOver_ReqOrBuilder getStepOverOrBuilder() {
                try {
                    if (this.stepOverBuilder_ != null) {
                        return (StepOver_ReqOrBuilder)this.stepOverBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOver_;
            }
            
            private SingleFieldBuilder<StepOver_Req, StepOver_Req.Builder, StepOver_ReqOrBuilder> n() {
                try {
                    if (this.stepOverBuilder_ == null) {
                        this.stepOverBuilder_ = (SingleFieldBuilder<StepOver_Req, StepOver_Req.Builder, StepOver_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepOver_, this.getParentForChildren(), this.isClean());
                        this.stepOver_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOverBuilder_;
            }
            
            public boolean hasStepOut() {
                try {
                    if ((this.bitField0_ & 0x800) == 0x800) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepOut_Req getStepOut() {
                try {
                    if (this.stepOutBuilder_ == null) {
                        return this.stepOut_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepOut_Req)this.stepOutBuilder_.getMessage();
            }
            
            public Builder setStepOut(final StepOut_Req stepOut_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepOutBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepOut_Req stepOut_Req2 = stepOut_Req;
                                if (stepOut_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepOut_Req stepOut_Req2 = stepOut_Req;
                                if (stepOut_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepOut_ = stepOut_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepOutBuilder_.setMessage((GeneratedMessage)stepOut_Req);
                }
                this.bitField0_ |= 0x800;
                return this;
            }
            
            public Builder setStepOut(final StepOut_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            this.stepOut_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOutBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x800;
                return this;
            }
            
            public Builder mergeStepOut(final StepOut_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOutBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          2048
                //    14: iand           
                //    15: sipush          2048
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.stepOutBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          2048
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepOut() {
                Label_0033: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            this.stepOut_ = StepOut_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOutBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFF7FF;
                return this;
            }
            
            public StepOut_Req.Builder getStepOutBuilder() {
                this.bitField0_ |= 0x800;
                this.onChanged();
                return (StepOut_Req.Builder)this.l().getBuilder();
            }
            
            public StepOut_ReqOrBuilder getStepOutOrBuilder() {
                try {
                    if (this.stepOutBuilder_ != null) {
                        return (StepOut_ReqOrBuilder)this.stepOutBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOut_;
            }
            
            private SingleFieldBuilder<StepOut_Req, StepOut_Req.Builder, StepOut_ReqOrBuilder> l() {
                try {
                    if (this.stepOutBuilder_ == null) {
                        this.stepOutBuilder_ = (SingleFieldBuilder<StepOut_Req, StepOut_Req.Builder, StepOut_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepOut_, this.getParentForChildren(), this.isClean());
                        this.stepOut_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOutBuilder_;
            }
            
            public boolean hasEvaluateExpression() {
                try {
                    if ((this.bitField0_ & 0x1000) == 0x1000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public EvaluateExpression_Req getEvaluateExpression() {
                try {
                    if (this.evaluateExpressionBuilder_ == null) {
                        return this.evaluateExpression_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (EvaluateExpression_Req)this.evaluateExpressionBuilder_.getMessage();
            }
            
            public Builder setEvaluateExpression(final EvaluateExpression_Req evaluateExpression_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.evaluateExpressionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final EvaluateExpression_Req evaluateExpression_Req2 = evaluateExpression_Req;
                                if (evaluateExpression_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final EvaluateExpression_Req evaluateExpression_Req2 = evaluateExpression_Req;
                                if (evaluateExpression_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.evaluateExpression_ = evaluateExpression_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.evaluateExpressionBuilder_.setMessage((GeneratedMessage)evaluateExpression_Req);
                }
                this.bitField0_ |= 0x1000;
                return this;
            }
            
            public Builder setEvaluateExpression(final EvaluateExpression_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            this.evaluateExpression_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.evaluateExpressionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1000;
                return this;
            }
            
            public Builder mergeEvaluateExpression(final EvaluateExpression_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpressionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          4096
                //    14: iand           
                //    15: sipush          4096
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.evaluateExpressionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          4096
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearEvaluateExpression() {
                Label_0033: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            this.evaluateExpression_ = EvaluateExpression_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.evaluateExpressionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFEFFF;
                return this;
            }
            
            public EvaluateExpression_Req.Builder getEvaluateExpressionBuilder() {
                this.bitField0_ |= 0x1000;
                this.onChanged();
                return (EvaluateExpression_Req.Builder)this.G().getBuilder();
            }
            
            public EvaluateExpression_ReqOrBuilder getEvaluateExpressionOrBuilder() {
                try {
                    if (this.evaluateExpressionBuilder_ != null) {
                        return (EvaluateExpression_ReqOrBuilder)this.evaluateExpressionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.evaluateExpression_;
            }
            
            private SingleFieldBuilder<EvaluateExpression_Req, EvaluateExpression_Req.Builder, EvaluateExpression_ReqOrBuilder> G() {
                try {
                    if (this.evaluateExpressionBuilder_ == null) {
                        this.evaluateExpressionBuilder_ = (SingleFieldBuilder<EvaluateExpression_Req, EvaluateExpression_Req.Builder, EvaluateExpression_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.evaluateExpression_, this.getParentForChildren(), this.isClean());
                        this.evaluateExpression_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.evaluateExpressionBuilder_;
            }
            
            public boolean hasGetValueChildren() {
                try {
                    if ((this.bitField0_ & 0x2000) == 0x2000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueChildren_Req getGetValueChildren() {
                try {
                    if (this.getValueChildrenBuilder_ == null) {
                        return this.getValueChildren_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueChildren_Req)this.getValueChildrenBuilder_.getMessage();
            }
            
            public Builder setGetValueChildren(final GetValueChildren_Req getValueChildren_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueChildrenBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueChildren_Req getValueChildren_Req2 = getValueChildren_Req;
                                if (getValueChildren_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueChildren_Req getValueChildren_Req2 = getValueChildren_Req;
                                if (getValueChildren_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueChildren_ = getValueChildren_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueChildrenBuilder_.setMessage((GeneratedMessage)getValueChildren_Req);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder setGetValueChildren(final GetValueChildren_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            this.getValueChildren_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueChildrenBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder mergeGetValueChildren(final GetValueChildren_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildrenBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          8192
                //    14: iand           
                //    15: sipush          8192
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueChildrenBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          8192
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueChildren() {
                Label_0033: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            this.getValueChildren_ = GetValueChildren_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueChildrenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                return this;
            }
            
            public GetValueChildren_Req.Builder getGetValueChildrenBuilder() {
                this.bitField0_ |= 0x2000;
                this.onChanged();
                return (GetValueChildren_Req.Builder)this.C().getBuilder();
            }
            
            public GetValueChildren_ReqOrBuilder getGetValueChildrenOrBuilder() {
                try {
                    if (this.getValueChildrenBuilder_ != null) {
                        return (GetValueChildren_ReqOrBuilder)this.getValueChildrenBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueChildren_;
            }
            
            private SingleFieldBuilder<GetValueChildren_Req, GetValueChildren_Req.Builder, GetValueChildren_ReqOrBuilder> C() {
                try {
                    if (this.getValueChildrenBuilder_ == null) {
                        this.getValueChildrenBuilder_ = (SingleFieldBuilder<GetValueChildren_Req, GetValueChildren_Req.Builder, GetValueChildren_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueChildren_, this.getParentForChildren(), this.isClean());
                        this.getValueChildren_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueChildrenBuilder_;
            }
            
            public boolean hasGetVars() {
                try {
                    if ((this.bitField0_ & 0x4000) == 0x4000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetVars_Req getGetVars() {
                try {
                    if (this.getVarsBuilder_ == null) {
                        return this.getVars_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetVars_Req)this.getVarsBuilder_.getMessage();
            }
            
            public Builder setGetVars(final GetVars_Req getVars_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getVarsBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetVars_Req getVars_Req2 = getVars_Req;
                                if (getVars_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetVars_Req getVars_Req2 = getVars_Req;
                                if (getVars_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getVars_ = getVars_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getVarsBuilder_.setMessage((GeneratedMessage)getVars_Req);
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder setGetVars(final GetVars_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            this.getVars_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getVarsBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder mergeGetVars(final GetVars_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVarsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: sipush          16384
                //    14: iand           
                //    15: sipush          16384
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Req;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getVarsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    96: sipush          16384
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetVars() {
                Label_0033: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            this.getVars_ = GetVars_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getVarsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFBFFF;
                return this;
            }
            
            public GetVars_Req.Builder getGetVarsBuilder() {
                this.bitField0_ |= 0x4000;
                this.onChanged();
                return (GetVars_Req.Builder)this.e().getBuilder();
            }
            
            public GetVars_ReqOrBuilder getGetVarsOrBuilder() {
                try {
                    if (this.getVarsBuilder_ != null) {
                        return (GetVars_ReqOrBuilder)this.getVarsBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getVars_;
            }
            
            private SingleFieldBuilder<GetVars_Req, GetVars_Req.Builder, GetVars_ReqOrBuilder> e() {
                try {
                    if (this.getVarsBuilder_ == null) {
                        this.getVarsBuilder_ = (SingleFieldBuilder<GetVars_Req, GetVars_Req.Builder, GetVars_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getVars_, this.getParentForChildren(), this.isClean());
                        this.getVars_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getVarsBuilder_;
            }
            
            public boolean hasHandleConsoleCommand() {
                try {
                    if ((this.bitField0_ & 0x8000) == 0x8000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleConsoleCommand_Req getHandleConsoleCommand() {
                try {
                    if (this.handleConsoleCommandBuilder_ == null) {
                        return this.handleConsoleCommand_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleConsoleCommand_Req)this.handleConsoleCommandBuilder_.getMessage();
            }
            
            public Builder setHandleConsoleCommand(final HandleConsoleCommand_Req handleConsoleCommand_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleConsoleCommandBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleConsoleCommand_Req handleConsoleCommand_Req2 = handleConsoleCommand_Req;
                                if (handleConsoleCommand_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleConsoleCommand_Req handleConsoleCommand_Req2 = handleConsoleCommand_Req;
                                if (handleConsoleCommand_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleConsoleCommand_ = handleConsoleCommand_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleConsoleCommandBuilder_.setMessage((GeneratedMessage)handleConsoleCommand_Req);
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder setHandleConsoleCommand(final HandleConsoleCommand_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            this.handleConsoleCommand_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleConsoleCommandBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder mergeHandleConsoleCommand(final HandleConsoleCommand_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             32768
                //    13: iand           
                //    14: ldc             32768
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleConsoleCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             32768
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleConsoleCommand() {
                Label_0033: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            this.handleConsoleCommand_ = HandleConsoleCommand_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleConsoleCommandBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFF7FFF;
                return this;
            }
            
            public HandleConsoleCommand_Req.Builder getHandleConsoleCommandBuilder() {
                this.bitField0_ |= 0x8000;
                this.onChanged();
                return (HandleConsoleCommand_Req.Builder)this.c().getBuilder();
            }
            
            public HandleConsoleCommand_ReqOrBuilder getHandleConsoleCommandOrBuilder() {
                try {
                    if (this.handleConsoleCommandBuilder_ != null) {
                        return (HandleConsoleCommand_ReqOrBuilder)this.handleConsoleCommandBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleConsoleCommand_;
            }
            
            private SingleFieldBuilder<HandleConsoleCommand_Req, HandleConsoleCommand_Req.Builder, HandleConsoleCommand_ReqOrBuilder> c() {
                try {
                    if (this.handleConsoleCommandBuilder_ == null) {
                        this.handleConsoleCommandBuilder_ = (SingleFieldBuilder<HandleConsoleCommand_Req, HandleConsoleCommand_Req.Builder, HandleConsoleCommand_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleConsoleCommand_, this.getParentForChildren(), this.isClean());
                        this.handleConsoleCommand_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleConsoleCommandBuilder_;
            }
            
            public boolean hasHandleCompletion() {
                try {
                    if ((this.bitField0_ & 0x10000) == 0x10000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleCompletion_Req getHandleCompletion() {
                try {
                    if (this.handleCompletionBuilder_ == null) {
                        return this.handleCompletion_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleCompletion_Req)this.handleCompletionBuilder_.getMessage();
            }
            
            public Builder setHandleCompletion(final HandleCompletion_Req handleCompletion_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleCompletionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleCompletion_Req handleCompletion_Req2 = handleCompletion_Req;
                                if (handleCompletion_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleCompletion_Req handleCompletion_Req2 = handleCompletion_Req;
                                if (handleCompletion_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleCompletion_ = handleCompletion_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleCompletionBuilder_.setMessage((GeneratedMessage)handleCompletion_Req);
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder setHandleCompletion(final HandleCompletion_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            this.handleCompletion_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleCompletionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder mergeHandleCompletion(final HandleCompletion_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             65536
                //    13: iand           
                //    14: ldc             65536
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleCompletionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             65536
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleCompletion() {
                Label_0033: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            this.handleCompletion_ = HandleCompletion_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleCompletionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFEFFFF;
                return this;
            }
            
            public HandleCompletion_Req.Builder getHandleCompletionBuilder() {
                this.bitField0_ |= 0x10000;
                this.onChanged();
                return (HandleCompletion_Req.Builder)this.I().getBuilder();
            }
            
            public HandleCompletion_ReqOrBuilder getHandleCompletionOrBuilder() {
                try {
                    if (this.handleCompletionBuilder_ != null) {
                        return (HandleCompletion_ReqOrBuilder)this.handleCompletionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleCompletion_;
            }
            
            private SingleFieldBuilder<HandleCompletion_Req, HandleCompletion_Req.Builder, HandleCompletion_ReqOrBuilder> I() {
                try {
                    if (this.handleCompletionBuilder_ == null) {
                        this.handleCompletionBuilder_ = (SingleFieldBuilder<HandleCompletion_Req, HandleCompletion_Req.Builder, HandleCompletion_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleCompletion_, this.getParentForChildren(), this.isClean());
                        this.handleCompletion_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleCompletionBuilder_;
            }
            
            public boolean hasAttach() {
                try {
                    if ((this.bitField0_ & 0x20000) == 0x20000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Attach_Req getAttach() {
                try {
                    if (this.attachBuilder_ == null) {
                        return this.attach_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Attach_Req)this.attachBuilder_.getMessage();
            }
            
            public Builder setAttach(final Attach_Req attach_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.attachBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Attach_Req attach_Req2 = attach_Req;
                                if (attach_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Attach_Req attach_Req2 = attach_Req;
                                if (attach_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.attach_ = attach_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.attachBuilder_.setMessage((GeneratedMessage)attach_Req);
                }
                this.bitField0_ |= 0x20000;
                return this;
            }
            
            public Builder setAttach(final Attach_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.attachBuilder_ == null) {
                            this.attach_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20000;
                return this;
            }
            
            public Builder mergeAttach(final Attach_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             131072
                //    13: iand           
                //    14: ldc             131072
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             131072
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAttach() {
                Label_0033: {
                    try {
                        if (this.attachBuilder_ == null) {
                            this.attach_ = Attach_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFDFFFF;
                return this;
            }
            
            public Attach_Req.Builder getAttachBuilder() {
                this.bitField0_ |= 0x20000;
                this.onChanged();
                return (Attach_Req.Builder)this.z().getBuilder();
            }
            
            public Attach_ReqOrBuilder getAttachOrBuilder() {
                try {
                    if (this.attachBuilder_ != null) {
                        return (Attach_ReqOrBuilder)this.attachBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attach_;
            }
            
            private SingleFieldBuilder<Attach_Req, Attach_Req.Builder, Attach_ReqOrBuilder> z() {
                try {
                    if (this.attachBuilder_ == null) {
                        this.attachBuilder_ = (SingleFieldBuilder<Attach_Req, Attach_Req.Builder, Attach_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.attach_, this.getParentForChildren(), this.isClean());
                        this.attach_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachBuilder_;
            }
            
            public boolean hasAttachByName() {
                try {
                    if ((this.bitField0_ & 0x40000) == 0x40000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AttachByName_Req getAttachByName() {
                try {
                    if (this.attachByNameBuilder_ == null) {
                        return this.attachByName_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AttachByName_Req)this.attachByNameBuilder_.getMessage();
            }
            
            public Builder setAttachByName(final AttachByName_Req attachByName_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.attachByNameBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AttachByName_Req attachByName_Req2 = attachByName_Req;
                                if (attachByName_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AttachByName_Req attachByName_Req2 = attachByName_Req;
                                if (attachByName_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.attachByName_ = attachByName_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.attachByNameBuilder_.setMessage((GeneratedMessage)attachByName_Req);
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder setAttachByName(final AttachByName_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            this.attachByName_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachByNameBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder mergeAttachByName(final AttachByName_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByNameBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             262144
                //    13: iand           
                //    14: ldc             262144
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.attachByNameBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             262144
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAttachByName() {
                Label_0033: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            this.attachByName_ = AttachByName_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachByNameBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFBFFFF;
                return this;
            }
            
            public AttachByName_Req.Builder getAttachByNameBuilder() {
                this.bitField0_ |= 0x40000;
                this.onChanged();
                return (AttachByName_Req.Builder)this.d().getBuilder();
            }
            
            public AttachByName_ReqOrBuilder getAttachByNameOrBuilder() {
                try {
                    if (this.attachByNameBuilder_ != null) {
                        return (AttachByName_ReqOrBuilder)this.attachByNameBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachByName_;
            }
            
            private SingleFieldBuilder<AttachByName_Req, AttachByName_Req.Builder, AttachByName_ReqOrBuilder> d() {
                try {
                    if (this.attachByNameBuilder_ == null) {
                        this.attachByNameBuilder_ = (SingleFieldBuilder<AttachByName_Req, AttachByName_Req.Builder, AttachByName_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.attachByName_, this.getParentForChildren(), this.isClean());
                        this.attachByName_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachByNameBuilder_;
            }
            
            public boolean hasDispatchInput() {
                try {
                    if ((this.bitField0_ & 0x80000) == 0x80000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public DispatchInput_Req getDispatchInput() {
                try {
                    if (this.dispatchInputBuilder_ == null) {
                        return this.dispatchInput_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (DispatchInput_Req)this.dispatchInputBuilder_.getMessage();
            }
            
            public Builder setDispatchInput(final DispatchInput_Req dispatchInput_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.dispatchInputBuilder_ != null) {
                                    break Label_0042;
                                }
                                final DispatchInput_Req dispatchInput_Req2 = dispatchInput_Req;
                                if (dispatchInput_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final DispatchInput_Req dispatchInput_Req2 = dispatchInput_Req;
                                if (dispatchInput_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.dispatchInput_ = dispatchInput_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.dispatchInputBuilder_.setMessage((GeneratedMessage)dispatchInput_Req);
                }
                this.bitField0_ |= 0x80000;
                return this;
            }
            
            public Builder setDispatchInput(final DispatchInput_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            this.dispatchInput_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.dispatchInputBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x80000;
                return this;
            }
            
            public Builder mergeDispatchInput(final DispatchInput_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInputBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             524288
                //    13: iand           
                //    14: ldc             524288
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.dispatchInputBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             524288
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearDispatchInput() {
                Label_0033: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            this.dispatchInput_ = DispatchInput_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.dispatchInputBuilder_.clear();
                }
                this.bitField0_ &= 0xFFF7FFFF;
                return this;
            }
            
            public DispatchInput_Req.Builder getDispatchInputBuilder() {
                this.bitField0_ |= 0x80000;
                this.onChanged();
                return (DispatchInput_Req.Builder)this.w().getBuilder();
            }
            
            public DispatchInput_ReqOrBuilder getDispatchInputOrBuilder() {
                try {
                    if (this.dispatchInputBuilder_ != null) {
                        return (DispatchInput_ReqOrBuilder)this.dispatchInputBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.dispatchInput_;
            }
            
            private SingleFieldBuilder<DispatchInput_Req, DispatchInput_Req.Builder, DispatchInput_ReqOrBuilder> w() {
                try {
                    if (this.dispatchInputBuilder_ == null) {
                        this.dispatchInputBuilder_ = (SingleFieldBuilder<DispatchInput_Req, DispatchInput_Req.Builder, DispatchInput_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.dispatchInput_, this.getParentForChildren(), this.isClean());
                        this.dispatchInput_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.dispatchInputBuilder_;
            }
            
            public boolean hasAddWatchpoint() {
                try {
                    if ((this.bitField0_ & 0x100000) == 0x100000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AddWatchpoint_Req getAddWatchpoint() {
                try {
                    if (this.addWatchpointBuilder_ == null) {
                        return this.addWatchpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AddWatchpoint_Req)this.addWatchpointBuilder_.getMessage();
            }
            
            public Builder setAddWatchpoint(final AddWatchpoint_Req addWatchpoint_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.addWatchpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AddWatchpoint_Req addWatchpoint_Req2 = addWatchpoint_Req;
                                if (addWatchpoint_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AddWatchpoint_Req addWatchpoint_Req2 = addWatchpoint_Req;
                                if (addWatchpoint_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.addWatchpoint_ = addWatchpoint_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.addWatchpointBuilder_.setMessage((GeneratedMessage)addWatchpoint_Req);
                }
                this.bitField0_ |= 0x100000;
                return this;
            }
            
            public Builder setAddWatchpoint(final AddWatchpoint_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            this.addWatchpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addWatchpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x100000;
                return this;
            }
            
            public Builder mergeAddWatchpoint(final AddWatchpoint_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             1048576
                //    13: iand           
                //    14: ldc             1048576
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.addWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             1048576
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAddWatchpoint() {
                Label_0033: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            this.addWatchpoint_ = AddWatchpoint_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addWatchpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFEFFFFF;
                return this;
            }
            
            public AddWatchpoint_Req.Builder getAddWatchpointBuilder() {
                this.bitField0_ |= 0x100000;
                this.onChanged();
                return (AddWatchpoint_Req.Builder)this.v().getBuilder();
            }
            
            public AddWatchpoint_ReqOrBuilder getAddWatchpointOrBuilder() {
                try {
                    if (this.addWatchpointBuilder_ != null) {
                        return (AddWatchpoint_ReqOrBuilder)this.addWatchpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addWatchpoint_;
            }
            
            private SingleFieldBuilder<AddWatchpoint_Req, AddWatchpoint_Req.Builder, AddWatchpoint_ReqOrBuilder> v() {
                try {
                    if (this.addWatchpointBuilder_ == null) {
                        this.addWatchpointBuilder_ = (SingleFieldBuilder<AddWatchpoint_Req, AddWatchpoint_Req.Builder, AddWatchpoint_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.addWatchpoint_, this.getParentForChildren(), this.isClean());
                        this.addWatchpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addWatchpointBuilder_;
            }
            
            public boolean hasRemoveWatchpoint() {
                try {
                    if ((this.bitField0_ & 0x200000) == 0x200000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public RemoveWatchpoint_Req getRemoveWatchpoint() {
                try {
                    if (this.removeWatchpointBuilder_ == null) {
                        return this.removeWatchpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (RemoveWatchpoint_Req)this.removeWatchpointBuilder_.getMessage();
            }
            
            public Builder setRemoveWatchpoint(final RemoveWatchpoint_Req removeWatchpoint_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.removeWatchpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final RemoveWatchpoint_Req removeWatchpoint_Req2 = removeWatchpoint_Req;
                                if (removeWatchpoint_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final RemoveWatchpoint_Req removeWatchpoint_Req2 = removeWatchpoint_Req;
                                if (removeWatchpoint_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.removeWatchpoint_ = removeWatchpoint_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.removeWatchpointBuilder_.setMessage((GeneratedMessage)removeWatchpoint_Req);
                }
                this.bitField0_ |= 0x200000;
                return this;
            }
            
            public Builder setRemoveWatchpoint(final RemoveWatchpoint_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            this.removeWatchpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeWatchpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x200000;
                return this;
            }
            
            public Builder mergeRemoveWatchpoint(final RemoveWatchpoint_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             2097152
                //    13: iand           
                //    14: ldc             2097152
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.removeWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             2097152
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearRemoveWatchpoint() {
                Label_0033: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            this.removeWatchpoint_ = RemoveWatchpoint_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeWatchpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFDFFFFF;
                return this;
            }
            
            public RemoveWatchpoint_Req.Builder getRemoveWatchpointBuilder() {
                this.bitField0_ |= 0x200000;
                this.onChanged();
                return (RemoveWatchpoint_Req.Builder)this.a().getBuilder();
            }
            
            public RemoveWatchpoint_ReqOrBuilder getRemoveWatchpointOrBuilder() {
                try {
                    if (this.removeWatchpointBuilder_ != null) {
                        return (RemoveWatchpoint_ReqOrBuilder)this.removeWatchpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeWatchpoint_;
            }
            
            private SingleFieldBuilder<RemoveWatchpoint_Req, RemoveWatchpoint_Req.Builder, RemoveWatchpoint_ReqOrBuilder> a() {
                try {
                    if (this.removeWatchpointBuilder_ == null) {
                        this.removeWatchpointBuilder_ = (SingleFieldBuilder<RemoveWatchpoint_Req, RemoveWatchpoint_Req.Builder, RemoveWatchpoint_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.removeWatchpoint_, this.getParentForChildren(), this.isClean());
                        this.removeWatchpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeWatchpointBuilder_;
            }
            
            public boolean hasDetach() {
                try {
                    if ((this.bitField0_ & 0x400000) == 0x400000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Detach_Req getDetach() {
                try {
                    if (this.detachBuilder_ == null) {
                        return this.detach_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Detach_Req)this.detachBuilder_.getMessage();
            }
            
            public Builder setDetach(final Detach_Req detach_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.detachBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Detach_Req detach_Req2 = detach_Req;
                                if (detach_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Detach_Req detach_Req2 = detach_Req;
                                if (detach_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.detach_ = detach_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.detachBuilder_.setMessage((GeneratedMessage)detach_Req);
                }
                this.bitField0_ |= 0x400000;
                return this;
            }
            
            public Builder setDetach(final Detach_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.detachBuilder_ == null) {
                            this.detach_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.detachBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x400000;
                return this;
            }
            
            public Builder mergeDetach(final Detach_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             4194304
                //    13: iand           
                //    14: ldc             4194304
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.detachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             4194304
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearDetach() {
                Label_0033: {
                    try {
                        if (this.detachBuilder_ == null) {
                            this.detach_ = Detach_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.detachBuilder_.clear();
                }
                this.bitField0_ &= 0xFFBFFFFF;
                return this;
            }
            
            public Detach_Req.Builder getDetachBuilder() {
                this.bitField0_ |= 0x400000;
                this.onChanged();
                return (Detach_Req.Builder)this.k().getBuilder();
            }
            
            public Detach_ReqOrBuilder getDetachOrBuilder() {
                try {
                    if (this.detachBuilder_ != null) {
                        return (Detach_ReqOrBuilder)this.detachBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.detach_;
            }
            
            private SingleFieldBuilder<Detach_Req, Detach_Req.Builder, Detach_ReqOrBuilder> k() {
                try {
                    if (this.detachBuilder_ == null) {
                        this.detachBuilder_ = (SingleFieldBuilder<Detach_Req, Detach_Req.Builder, Detach_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.detach_, this.getParentForChildren(), this.isClean());
                        this.detach_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.detachBuilder_;
            }
            
            public boolean hasKill() {
                try {
                    if ((this.bitField0_ & 0x800000) == 0x800000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Kill_Req getKill() {
                try {
                    if (this.killBuilder_ == null) {
                        return this.kill_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Kill_Req)this.killBuilder_.getMessage();
            }
            
            public Builder setKill(final Kill_Req kill_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.killBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Kill_Req kill_Req2 = kill_Req;
                                if (kill_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Kill_Req kill_Req2 = kill_Req;
                                if (kill_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.kill_ = kill_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.killBuilder_.setMessage((GeneratedMessage)kill_Req);
                }
                this.bitField0_ |= 0x800000;
                return this;
            }
            
            public Builder setKill(final Kill_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.killBuilder_ == null) {
                            this.kill_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.killBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x800000;
                return this;
            }
            
            public Builder mergeKill(final Kill_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.killBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             8388608
                //    13: iand           
                //    14: ldc             8388608
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.killBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             8388608
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearKill() {
                Label_0033: {
                    try {
                        if (this.killBuilder_ == null) {
                            this.kill_ = Kill_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.killBuilder_.clear();
                }
                this.bitField0_ &= 0xFF7FFFFF;
                return this;
            }
            
            public Kill_Req.Builder getKillBuilder() {
                this.bitField0_ |= 0x800000;
                this.onChanged();
                return (Kill_Req.Builder)this.q().getBuilder();
            }
            
            public Kill_ReqOrBuilder getKillOrBuilder() {
                try {
                    if (this.killBuilder_ != null) {
                        return (Kill_ReqOrBuilder)this.killBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.kill_;
            }
            
            private SingleFieldBuilder<Kill_Req, Kill_Req.Builder, Kill_ReqOrBuilder> q() {
                try {
                    if (this.killBuilder_ == null) {
                        this.killBuilder_ = (SingleFieldBuilder<Kill_Req, Kill_Req.Builder, Kill_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.kill_, this.getParentForChildren(), this.isClean());
                        this.kill_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.killBuilder_;
            }
            
            public boolean hasGetChildrenCount() {
                try {
                    if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetChildrenCount_Req getGetChildrenCount() {
                try {
                    if (this.getChildrenCountBuilder_ == null) {
                        return this.getChildrenCount_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetChildrenCount_Req)this.getChildrenCountBuilder_.getMessage();
            }
            
            public Builder setGetChildrenCount(final GetChildrenCount_Req getChildrenCount_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getChildrenCountBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetChildrenCount_Req getChildrenCount_Req2 = getChildrenCount_Req;
                                if (getChildrenCount_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetChildrenCount_Req getChildrenCount_Req2 = getChildrenCount_Req;
                                if (getChildrenCount_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getChildrenCount_ = getChildrenCount_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getChildrenCountBuilder_.setMessage((GeneratedMessage)getChildrenCount_Req);
                }
                this.bitField0_ |= 0x1000000;
                return this;
            }
            
            public Builder setGetChildrenCount(final GetChildrenCount_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            this.getChildrenCount_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getChildrenCountBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1000000;
                return this;
            }
            
            public Builder mergeGetChildrenCount(final GetChildrenCount_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCountBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             16777216
                //    13: iand           
                //    14: ldc             16777216
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getChildrenCountBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             16777216
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetChildrenCount() {
                Label_0033: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            this.getChildrenCount_ = GetChildrenCount_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getChildrenCountBuilder_.clear();
                }
                this.bitField0_ &= 0xFEFFFFFF;
                return this;
            }
            
            public GetChildrenCount_Req.Builder getGetChildrenCountBuilder() {
                this.bitField0_ |= 0x1000000;
                this.onChanged();
                return (GetChildrenCount_Req.Builder)this.t().getBuilder();
            }
            
            public GetChildrenCount_ReqOrBuilder getGetChildrenCountOrBuilder() {
                try {
                    if (this.getChildrenCountBuilder_ != null) {
                        return (GetChildrenCount_ReqOrBuilder)this.getChildrenCountBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getChildrenCount_;
            }
            
            private SingleFieldBuilder<GetChildrenCount_Req, GetChildrenCount_Req.Builder, GetChildrenCount_ReqOrBuilder> t() {
                try {
                    if (this.getChildrenCountBuilder_ == null) {
                        this.getChildrenCountBuilder_ = (SingleFieldBuilder<GetChildrenCount_Req, GetChildrenCount_Req.Builder, GetChildrenCount_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getChildrenCount_, this.getParentForChildren(), this.isClean());
                        this.getChildrenCount_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getChildrenCountBuilder_;
            }
            
            public boolean hasGetArraySlice() {
                try {
                    if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetArraySlice_Req getGetArraySlice() {
                try {
                    if (this.getArraySliceBuilder_ == null) {
                        return this.getArraySlice_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetArraySlice_Req)this.getArraySliceBuilder_.getMessage();
            }
            
            public Builder setGetArraySlice(final GetArraySlice_Req getArraySlice_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getArraySliceBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetArraySlice_Req getArraySlice_Req2 = getArraySlice_Req;
                                if (getArraySlice_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetArraySlice_Req getArraySlice_Req2 = getArraySlice_Req;
                                if (getArraySlice_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getArraySlice_ = getArraySlice_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getArraySliceBuilder_.setMessage((GeneratedMessage)getArraySlice_Req);
                }
                this.bitField0_ |= 0x2000000;
                return this;
            }
            
            public Builder setGetArraySlice(final GetArraySlice_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            this.getArraySlice_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getArraySliceBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2000000;
                return this;
            }
            
            public Builder mergeGetArraySlice(final GetArraySlice_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySliceBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             33554432
                //    13: iand           
                //    14: ldc             33554432
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getArraySliceBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             33554432
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetArraySlice() {
                Label_0033: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            this.getArraySlice_ = GetArraySlice_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getArraySliceBuilder_.clear();
                }
                this.bitField0_ &= 0xFDFFFFFF;
                return this;
            }
            
            public GetArraySlice_Req.Builder getGetArraySliceBuilder() {
                this.bitField0_ |= 0x2000000;
                this.onChanged();
                return (GetArraySlice_Req.Builder)this.p().getBuilder();
            }
            
            public GetArraySlice_ReqOrBuilder getGetArraySliceOrBuilder() {
                try {
                    if (this.getArraySliceBuilder_ != null) {
                        return (GetArraySlice_ReqOrBuilder)this.getArraySliceBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getArraySlice_;
            }
            
            private SingleFieldBuilder<GetArraySlice_Req, GetArraySlice_Req.Builder, GetArraySlice_ReqOrBuilder> p() {
                try {
                    if (this.getArraySliceBuilder_ == null) {
                        this.getArraySliceBuilder_ = (SingleFieldBuilder<GetArraySlice_Req, GetArraySlice_Req.Builder, GetArraySlice_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getArraySlice_, this.getParentForChildren(), this.isClean());
                        this.getArraySlice_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getArraySliceBuilder_;
            }
            
            public boolean hasGetValueData() {
                try {
                    if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueData_Req getGetValueData() {
                try {
                    if (this.getValueDataBuilder_ == null) {
                        return this.getValueData_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueData_Req)this.getValueDataBuilder_.getMessage();
            }
            
            public Builder setGetValueData(final GetValueData_Req getValueData_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueDataBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueData_Req getValueData_Req2 = getValueData_Req;
                                if (getValueData_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueData_Req getValueData_Req2 = getValueData_Req;
                                if (getValueData_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueData_ = getValueData_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueDataBuilder_.setMessage((GeneratedMessage)getValueData_Req);
                }
                this.bitField0_ |= 0x4000000;
                return this;
            }
            
            public Builder setGetValueData(final GetValueData_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            this.getValueData_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDataBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4000000;
                return this;
            }
            
            public Builder mergeGetValueData(final GetValueData_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDataBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             67108864
                //    13: iand           
                //    14: ldc             67108864
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDataBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             67108864
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueData() {
                Label_0033: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            this.getValueData_ = GetValueData_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFBFFFFFF;
                return this;
            }
            
            public GetValueData_Req.Builder getGetValueDataBuilder() {
                this.bitField0_ |= 0x4000000;
                this.onChanged();
                return (GetValueData_Req.Builder)this.r().getBuilder();
            }
            
            public GetValueData_ReqOrBuilder getGetValueDataOrBuilder() {
                try {
                    if (this.getValueDataBuilder_ != null) {
                        return (GetValueData_ReqOrBuilder)this.getValueDataBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueData_;
            }
            
            private SingleFieldBuilder<GetValueData_Req, GetValueData_Req.Builder, GetValueData_ReqOrBuilder> r() {
                try {
                    if (this.getValueDataBuilder_ == null) {
                        this.getValueDataBuilder_ = (SingleFieldBuilder<GetValueData_Req, GetValueData_Req.Builder, GetValueData_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueData_, this.getParentForChildren(), this.isClean());
                        this.getValueData_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDataBuilder_;
            }
            
            public boolean hasGetValueDescription() {
                try {
                    if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueDescription_Req getGetValueDescription() {
                try {
                    if (this.getValueDescriptionBuilder_ == null) {
                        return this.getValueDescription_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueDescription_Req)this.getValueDescriptionBuilder_.getMessage();
            }
            
            public Builder setGetValueDescription(final GetValueDescription_Req getValueDescription_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueDescriptionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueDescription_Req getValueDescription_Req2 = getValueDescription_Req;
                                if (getValueDescription_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueDescription_Req getValueDescription_Req2 = getValueDescription_Req;
                                if (getValueDescription_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueDescription_ = getValueDescription_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueDescriptionBuilder_.setMessage((GeneratedMessage)getValueDescription_Req);
                }
                this.bitField0_ |= 0x8000000;
                return this;
            }
            
            public Builder setGetValueDescription(final GetValueDescription_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            this.getValueDescription_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDescriptionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8000000;
                return this;
            }
            
            public Builder mergeGetValueDescription(final GetValueDescription_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescriptionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             134217728
                //    13: iand           
                //    14: ldc             134217728
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueDescriptionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             134217728
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueDescription() {
                Label_0033: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            this.getValueDescription_ = GetValueDescription_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDescriptionBuilder_.clear();
                }
                this.bitField0_ &= 0xF7FFFFFF;
                return this;
            }
            
            public GetValueDescription_Req.Builder getGetValueDescriptionBuilder() {
                this.bitField0_ |= 0x8000000;
                this.onChanged();
                return (GetValueDescription_Req.Builder)this.A().getBuilder();
            }
            
            public GetValueDescription_ReqOrBuilder getGetValueDescriptionOrBuilder() {
                try {
                    if (this.getValueDescriptionBuilder_ != null) {
                        return (GetValueDescription_ReqOrBuilder)this.getValueDescriptionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDescription_;
            }
            
            private SingleFieldBuilder<GetValueDescription_Req, GetValueDescription_Req.Builder, GetValueDescription_ReqOrBuilder> A() {
                try {
                    if (this.getValueDescriptionBuilder_ == null) {
                        this.getValueDescriptionBuilder_ = (SingleFieldBuilder<GetValueDescription_Req, GetValueDescription_Req.Builder, GetValueDescription_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueDescription_, this.getParentForChildren(), this.isClean());
                        this.getValueDescription_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDescriptionBuilder_;
            }
            
            public boolean hasValuesFilteringPolicy() {
                try {
                    if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ValuesFilteringPolicy_Req getValuesFilteringPolicy() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ == null) {
                        return this.valuesFilteringPolicy_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ValuesFilteringPolicy_Req)this.valuesFilteringPolicyBuilder_.getMessage();
            }
            
            public Builder setValuesFilteringPolicy(final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.valuesFilteringPolicyBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req2 = valuesFilteringPolicy_Req;
                                if (valuesFilteringPolicy_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ValuesFilteringPolicy_Req valuesFilteringPolicy_Req2 = valuesFilteringPolicy_Req;
                                if (valuesFilteringPolicy_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.valuesFilteringPolicy_ = valuesFilteringPolicy_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.valuesFilteringPolicyBuilder_.setMessage((GeneratedMessage)valuesFilteringPolicy_Req);
                }
                this.bitField0_ |= 0x10000000;
                return this;
            }
            
            public Builder setValuesFilteringPolicy(final ValuesFilteringPolicy_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            this.valuesFilteringPolicy_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valuesFilteringPolicyBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10000000;
                return this;
            }
            
            public Builder mergeValuesFilteringPolicy(final ValuesFilteringPolicy_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicyBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             268435456
                //    13: iand           
                //    14: ldc             268435456
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.valuesFilteringPolicyBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             268435456
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearValuesFilteringPolicy() {
                Label_0033: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valuesFilteringPolicyBuilder_.clear();
                }
                this.bitField0_ &= 0xEFFFFFFF;
                return this;
            }
            
            public ValuesFilteringPolicy_Req.Builder getValuesFilteringPolicyBuilder() {
                this.bitField0_ |= 0x10000000;
                this.onChanged();
                return (ValuesFilteringPolicy_Req.Builder)this.y().getBuilder();
            }
            
            public ValuesFilteringPolicy_ReqOrBuilder getValuesFilteringPolicyOrBuilder() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ != null) {
                        return (ValuesFilteringPolicy_ReqOrBuilder)this.valuesFilteringPolicyBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valuesFilteringPolicy_;
            }
            
            private SingleFieldBuilder<ValuesFilteringPolicy_Req, ValuesFilteringPolicy_Req.Builder, ValuesFilteringPolicy_ReqOrBuilder> y() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ == null) {
                        this.valuesFilteringPolicyBuilder_ = (SingleFieldBuilder<ValuesFilteringPolicy_Req, ValuesFilteringPolicy_Req.Builder, ValuesFilteringPolicy_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.valuesFilteringPolicy_, this.getParentForChildren(), this.isClean());
                        this.valuesFilteringPolicy_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valuesFilteringPolicyBuilder_;
            }
            
            public boolean hasConnectPlatform() {
                try {
                    if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ConnectPlatform_Req getConnectPlatform() {
                try {
                    if (this.connectPlatformBuilder_ == null) {
                        return this.connectPlatform_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ConnectPlatform_Req)this.connectPlatformBuilder_.getMessage();
            }
            
            public Builder setConnectPlatform(final ConnectPlatform_Req connectPlatform_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.connectPlatformBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ConnectPlatform_Req connectPlatform_Req2 = connectPlatform_Req;
                                if (connectPlatform_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ConnectPlatform_Req connectPlatform_Req2 = connectPlatform_Req;
                                if (connectPlatform_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.connectPlatform_ = connectPlatform_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.connectPlatformBuilder_.setMessage((GeneratedMessage)connectPlatform_Req);
                }
                this.bitField0_ |= 0x20000000;
                return this;
            }
            
            public Builder setConnectPlatform(final ConnectPlatform_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            this.connectPlatform_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.connectPlatformBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20000000;
                return this;
            }
            
            public Builder mergeConnectPlatform(final ConnectPlatform_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatformBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             536870912
                //    13: iand           
                //    14: ldc             536870912
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.connectPlatformBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             536870912
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearConnectPlatform() {
                Label_0033: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            this.connectPlatform_ = ConnectPlatform_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.connectPlatformBuilder_.clear();
                }
                this.bitField0_ &= 0xDFFFFFFF;
                return this;
            }
            
            public ConnectPlatform_Req.Builder getConnectPlatformBuilder() {
                this.bitField0_ |= 0x20000000;
                this.onChanged();
                return (ConnectPlatform_Req.Builder)this.j().getBuilder();
            }
            
            public ConnectPlatform_ReqOrBuilder getConnectPlatformOrBuilder() {
                try {
                    if (this.connectPlatformBuilder_ != null) {
                        return (ConnectPlatform_ReqOrBuilder)this.connectPlatformBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.connectPlatform_;
            }
            
            private SingleFieldBuilder<ConnectPlatform_Req, ConnectPlatform_Req.Builder, ConnectPlatform_ReqOrBuilder> j() {
                try {
                    if (this.connectPlatformBuilder_ == null) {
                        this.connectPlatformBuilder_ = (SingleFieldBuilder<ConnectPlatform_Req, ConnectPlatform_Req.Builder, ConnectPlatform_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.connectPlatform_, this.getParentForChildren(), this.isClean());
                        this.connectPlatform_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.connectPlatformBuilder_;
            }
            
            public boolean hasGetValueAddress() {
                try {
                    if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueAddress_Req getGetValueAddress() {
                try {
                    if (this.getValueAddressBuilder_ == null) {
                        return this.getValueAddress_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueAddress_Req)this.getValueAddressBuilder_.getMessage();
            }
            
            public Builder setGetValueAddress(final GetValueAddress_Req getValueAddress_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueAddressBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueAddress_Req getValueAddress_Req2 = getValueAddress_Req;
                                if (getValueAddress_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueAddress_Req getValueAddress_Req2 = getValueAddress_Req;
                                if (getValueAddress_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueAddress_ = getValueAddress_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueAddressBuilder_.setMessage((GeneratedMessage)getValueAddress_Req);
                }
                this.bitField0_ |= 0x40000000;
                return this;
            }
            
            public Builder setGetValueAddress(final GetValueAddress_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            this.getValueAddress_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueAddressBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40000000;
                return this;
            }
            
            public Builder mergeGetValueAddress(final GetValueAddress_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddressBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             1073741824
                //    13: iand           
                //    14: ldc             1073741824
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.getValueAddressBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             1073741824
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueAddress() {
                Label_0033: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            this.getValueAddress_ = GetValueAddress_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueAddressBuilder_.clear();
                }
                this.bitField0_ &= 0xBFFFFFFF;
                return this;
            }
            
            public GetValueAddress_Req.Builder getGetValueAddressBuilder() {
                this.bitField0_ |= 0x40000000;
                this.onChanged();
                return (GetValueAddress_Req.Builder)this.x().getBuilder();
            }
            
            public GetValueAddress_ReqOrBuilder getGetValueAddressOrBuilder() {
                try {
                    if (this.getValueAddressBuilder_ != null) {
                        return (GetValueAddress_ReqOrBuilder)this.getValueAddressBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueAddress_;
            }
            
            private SingleFieldBuilder<GetValueAddress_Req, GetValueAddress_Req.Builder, GetValueAddress_ReqOrBuilder> x() {
                try {
                    if (this.getValueAddressBuilder_ == null) {
                        this.getValueAddressBuilder_ = (SingleFieldBuilder<GetValueAddress_Req, GetValueAddress_Req.Builder, GetValueAddress_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueAddress_, this.getParentForChildren(), this.isClean());
                        this.getValueAddress_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueAddressBuilder_;
            }
            
            public boolean hasHandleSignal() {
                try {
                    if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleSignal_Req getHandleSignal() {
                try {
                    if (this.handleSignalBuilder_ == null) {
                        return this.handleSignal_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleSignal_Req)this.handleSignalBuilder_.getMessage();
            }
            
            public Builder setHandleSignal(final HandleSignal_Req handleSignal_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleSignalBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleSignal_Req handleSignal_Req2 = handleSignal_Req;
                                if (handleSignal_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleSignal_Req handleSignal_Req2 = handleSignal_Req;
                                if (handleSignal_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleSignal_ = handleSignal_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleSignalBuilder_.setMessage((GeneratedMessage)handleSignal_Req);
                }
                this.bitField0_ |= Integer.MIN_VALUE;
                return this;
            }
            
            public Builder setHandleSignal(final HandleSignal_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            this.handleSignal_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleSignalBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= Integer.MIN_VALUE;
                return this;
            }
            
            public Builder mergeHandleSignal(final HandleSignal_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignalBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    11: ldc             -2147483648
                //    13: iand           
                //    14: ldc             -2147483648
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Req;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.handleSignalBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //    94: ldc             -2147483648
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleSignal() {
                Label_0033: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            this.handleSignal_ = HandleSignal_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleSignalBuilder_.clear();
                }
                this.bitField0_ &= Integer.MAX_VALUE;
                return this;
            }
            
            public HandleSignal_Req.Builder getHandleSignalBuilder() {
                this.bitField0_ |= Integer.MIN_VALUE;
                this.onChanged();
                return (HandleSignal_Req.Builder)this.D().getBuilder();
            }
            
            public HandleSignal_ReqOrBuilder getHandleSignalOrBuilder() {
                try {
                    if (this.handleSignalBuilder_ != null) {
                        return (HandleSignal_ReqOrBuilder)this.handleSignalBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleSignal_;
            }
            
            private SingleFieldBuilder<HandleSignal_Req, HandleSignal_Req.Builder, HandleSignal_ReqOrBuilder> D() {
                try {
                    if (this.handleSignalBuilder_ == null) {
                        this.handleSignalBuilder_ = (SingleFieldBuilder<HandleSignal_Req, HandleSignal_Req.Builder, HandleSignal_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleSignal_, this.getParentForChildren(), this.isClean());
                        this.handleSignal_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleSignalBuilder_;
            }
            
            public boolean hasExecuteShellCommand() {
                try {
                    if ((this.bitField1_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ExecuteShellCommand_Req getExecuteShellCommand() {
                try {
                    if (this.executeShellCommandBuilder_ == null) {
                        return this.executeShellCommand_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ExecuteShellCommand_Req)this.executeShellCommandBuilder_.getMessage();
            }
            
            public Builder setExecuteShellCommand(final ExecuteShellCommand_Req executeShellCommand_Req) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.executeShellCommandBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ExecuteShellCommand_Req executeShellCommand_Req2 = executeShellCommand_Req;
                                if (executeShellCommand_Req2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ExecuteShellCommand_Req executeShellCommand_Req2 = executeShellCommand_Req;
                                if (executeShellCommand_Req2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.executeShellCommand_ = executeShellCommand_Req;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.executeShellCommandBuilder_.setMessage((GeneratedMessage)executeShellCommand_Req);
                }
                this.bitField1_ |= 0x1;
                return this;
            }
            
            public Builder setExecuteShellCommand(final ExecuteShellCommand_Req.Builder builder) {
                Label_0038: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            this.executeShellCommand_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.executeShellCommandBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField1_ |= 0x1;
                return this;
            }
            
            public Builder mergeExecuteShellCommand(final ExecuteShellCommand_Req p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField1_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Req;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.executeShellCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField1_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeRequest$Builder.bitField1_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearExecuteShellCommand() {
                Label_0033: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            this.executeShellCommand_ = ExecuteShellCommand_Req.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.executeShellCommandBuilder_.clear();
                }
                this.bitField1_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ExecuteShellCommand_Req.Builder getExecuteShellCommandBuilder() {
                this.bitField1_ |= 0x1;
                this.onChanged();
                return (ExecuteShellCommand_Req.Builder)this.B().getBuilder();
            }
            
            public ExecuteShellCommand_ReqOrBuilder getExecuteShellCommandOrBuilder() {
                try {
                    if (this.executeShellCommandBuilder_ != null) {
                        return (ExecuteShellCommand_ReqOrBuilder)this.executeShellCommandBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.executeShellCommand_;
            }
            
            private SingleFieldBuilder<ExecuteShellCommand_Req, ExecuteShellCommand_Req.Builder, ExecuteShellCommand_ReqOrBuilder> B() {
                try {
                    if (this.executeShellCommandBuilder_ == null) {
                        this.executeShellCommandBuilder_ = (SingleFieldBuilder<ExecuteShellCommand_Req, ExecuteShellCommand_Req.Builder, ExecuteShellCommand_ReqOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.executeShellCommand_, this.getParentForChildren(), this.isClean());
                        this.executeShellCommand_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.executeShellCommandBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public static final class CompositeResponse extends GeneratedMessage implements CompositeResponseOrBuilder
    {
        private static final CompositeResponse defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<CompositeResponse> PARSER;
        private int bitField0_;
        private int bitField1_;
        public static final int CREATE_TARGET_FIELD_NUMBER = 1;
        private CreateTarget_Res createTarget_;
        public static final int LAUNCH_FIELD_NUMBER = 2;
        private Launch_Res launch_;
        public static final int CONTINUE_FIELD_NUMBER = 3;
        private Continue_Res continue_;
        public static final int COMPOSITE_BROADCAST_FIELD_NUMBER = 4;
        private Broadcasts.CompositeBroadcast compositeBroadcast_;
        public static final int SUSPEND_FIELD_NUMBER = 5;
        private Suspend_Res suspend_;
        public static final int GET_THREADS_FIELD_NUMBER = 6;
        private GetThreads_Res getThreads_;
        public static final int GET_FRAMES_FIELD_NUMBER = 7;
        private GetFrames_Res getFrames_;
        public static final int ADD_BREAKPOINT_FIELD_NUMBER = 8;
        private AddBreakpoint_Res addBreakpoint_;
        public static final int REMOVE_BREAKPOINT_FIELD_NUMBER = 9;
        private RemoveBreakpoint_Res removeBreakpoint_;
        public static final int STEP_INTO_FIELD_NUMBER = 10;
        private StepInto_Res stepInto_;
        public static final int STEP_OVER_FIELD_NUMBER = 11;
        private StepOver_Res stepOver_;
        public static final int STEP_OUT_FIELD_NUMBER = 12;
        private StepOut_Res stepOut_;
        public static final int EVALUATE_EXPRESSION_FIELD_NUMBER = 13;
        private EvaluateExpression_Res evaluateExpression_;
        public static final int GET_VALUE_CHILDREN_FIELD_NUMBER = 14;
        private GetValueChildren_Res getValueChildren_;
        public static final int GET_VARS_FIELD_NUMBER = 15;
        private GetVars_Res getVars_;
        public static final int HANDLE_CONSOLE_COMMAND_FIELD_NUMBER = 16;
        private HandleConsoleCommand_Res handleConsoleCommand_;
        public static final int HANDLE_COMPLETION_FIELD_NUMBER = 17;
        private HandleCompletion_Res handleCompletion_;
        public static final int ATTACH_FIELD_NUMBER = 18;
        private Attach_Res attach_;
        public static final int ATTACH_BY_NAME_FIELD_NUMBER = 19;
        private AttachByName_Res attachByName_;
        public static final int DISPATCH_INPUT_FIELD_NUMBER = 20;
        private DispatchInput_Res dispatchInput_;
        public static final int ADD_WATCHPOINT_FIELD_NUMBER = 21;
        private AddWatchpoint_Res addWatchpoint_;
        public static final int REMOVE_WATCHPOINT_FIELD_NUMBER = 22;
        private RemoveWatchpoint_Res removeWatchpoint_;
        public static final int DETACH_FIELD_NUMBER = 23;
        private Detach_Res detach_;
        public static final int KILL_FIELD_NUMBER = 24;
        private Kill_Res kill_;
        public static final int GET_CHILDREN_COUNT_FIELD_NUMBER = 25;
        private GetChildrenCount_Res getChildrenCount_;
        public static final int GET_ARRAY_SLICE_FIELD_NUMBER = 26;
        private GetArraySlice_Res getArraySlice_;
        public static final int GET_VALUE_DATA_FIELD_NUMBER = 27;
        private GetValueData_Res getValueData_;
        public static final int GET_VALUE_DESCRIPTION_FIELD_NUMBER = 28;
        private GetValueDescription_Res getValueDescription_;
        public static final int VALUES_FILTERING_POLICY_FIELD_NUMBER = 29;
        private ValuesFilteringPolicy_Res valuesFilteringPolicy_;
        public static final int CONNECT_PLATFORM_FIELD_NUMBER = 30;
        private ConnectPlatform_Res connectPlatform_;
        public static final int GET_VALUE_ADDRESS_FIELD_NUMBER = 31;
        private GetValueAddress_Res getValueAddress_;
        public static final int HANDLE_SIGNAL_FIELD_NUMBER = 32;
        private HandleSignal_Res handleSignal_;
        public static final int EXECUTE_SHELL_COMMAND_FIELD_NUMBER = 33;
        private ExecuteShellCommand_Res executeShellCommand_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        
        private CompositeResponse(final GeneratedMessage.Builder<?> builder) {
            super((GeneratedMessage.Builder)builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private CompositeResponse(final boolean b) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static CompositeResponse getDefaultInstance() {
            return CompositeResponse.defaultInstance;
        }
        
        public CompositeResponse getDefaultInstanceForType() {
            return CompositeResponse.defaultInstance;
        }
        
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private CompositeResponse(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.a();
            final UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder();
            try {
                int i = 0;
                while (i == 0) {
                    final int tag = codedInputStream.readTag();
                    switch (tag) {
                        case 0: {
                            i = 1;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(codedInputStream, builder, extensionRegistryLite, tag)) {
                                i = 1;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            CreateTarget_Res.Builder builder2 = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                builder2 = this.createTarget_.toBuilder();
                            }
                            try {
                                this.createTarget_ = (CreateTarget_Res)codedInputStream.readMessage((Parser)CreateTarget_Res.PARSER, extensionRegistryLite);
                                if (builder2 != null) {
                                    builder2.mergeFrom(this.createTarget_);
                                    this.createTarget_ = builder2.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex) {
                                throw a((IOException)ex);
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            Launch_Res.Builder builder3 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                builder3 = this.launch_.toBuilder();
                            }
                            try {
                                this.launch_ = (Launch_Res)codedInputStream.readMessage((Parser)Launch_Res.PARSER, extensionRegistryLite);
                                if (builder3 != null) {
                                    builder3.mergeFrom(this.launch_);
                                    this.launch_ = builder3.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex2) {
                                throw a((IOException)ex2);
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 26: {
                            Continue_Res.Builder builder4 = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                builder4 = this.continue_.toBuilder();
                            }
                            try {
                                this.continue_ = (Continue_Res)codedInputStream.readMessage((Parser)Continue_Res.PARSER, extensionRegistryLite);
                                if (builder4 != null) {
                                    builder4.mergeFrom(this.continue_);
                                    this.continue_ = builder4.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex3) {
                                throw a((IOException)ex3);
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                        case 34: {
                            Broadcasts.CompositeBroadcast.Builder builder5 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                builder5 = this.compositeBroadcast_.toBuilder();
                            }
                            try {
                                this.compositeBroadcast_ = (Broadcasts.CompositeBroadcast)codedInputStream.readMessage((Parser)Broadcasts.CompositeBroadcast.PARSER, extensionRegistryLite);
                                if (builder5 != null) {
                                    builder5.mergeFrom(this.compositeBroadcast_);
                                    this.compositeBroadcast_ = builder5.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex4) {
                                throw a((IOException)ex4);
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            Suspend_Res.Builder builder6 = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                builder6 = this.suspend_.toBuilder();
                            }
                            try {
                                this.suspend_ = (Suspend_Res)codedInputStream.readMessage((Parser)Suspend_Res.PARSER, extensionRegistryLite);
                                if (builder6 != null) {
                                    builder6.mergeFrom(this.suspend_);
                                    this.suspend_ = builder6.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex5) {
                                throw a((IOException)ex5);
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 50: {
                            GetThreads_Res.Builder builder7 = null;
                            if ((this.bitField0_ & 0x20) == 0x20) {
                                builder7 = this.getThreads_.toBuilder();
                            }
                            try {
                                this.getThreads_ = (GetThreads_Res)codedInputStream.readMessage((Parser)GetThreads_Res.PARSER, extensionRegistryLite);
                                if (builder7 != null) {
                                    builder7.mergeFrom(this.getThreads_);
                                    this.getThreads_ = builder7.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex6) {
                                throw a((IOException)ex6);
                            }
                            this.bitField0_ |= 0x20;
                            continue;
                        }
                        case 58: {
                            GetFrames_Res.Builder builder8 = null;
                            if ((this.bitField0_ & 0x40) == 0x40) {
                                builder8 = this.getFrames_.toBuilder();
                            }
                            try {
                                this.getFrames_ = (GetFrames_Res)codedInputStream.readMessage((Parser)GetFrames_Res.PARSER, extensionRegistryLite);
                                if (builder8 != null) {
                                    builder8.mergeFrom(this.getFrames_);
                                    this.getFrames_ = builder8.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex7) {
                                throw a((IOException)ex7);
                            }
                            this.bitField0_ |= 0x40;
                            continue;
                        }
                        case 66: {
                            AddBreakpoint_Res.Builder builder9 = null;
                            if ((this.bitField0_ & 0x80) == 0x80) {
                                builder9 = this.addBreakpoint_.toBuilder();
                            }
                            try {
                                this.addBreakpoint_ = (AddBreakpoint_Res)codedInputStream.readMessage((Parser)AddBreakpoint_Res.PARSER, extensionRegistryLite);
                                if (builder9 != null) {
                                    builder9.mergeFrom(this.addBreakpoint_);
                                    this.addBreakpoint_ = builder9.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex8) {
                                throw a((IOException)ex8);
                            }
                            this.bitField0_ |= 0x80;
                            continue;
                        }
                        case 74: {
                            RemoveBreakpoint_Res.Builder builder10 = null;
                            if ((this.bitField0_ & 0x100) == 0x100) {
                                builder10 = this.removeBreakpoint_.toBuilder();
                            }
                            try {
                                this.removeBreakpoint_ = (RemoveBreakpoint_Res)codedInputStream.readMessage((Parser)RemoveBreakpoint_Res.PARSER, extensionRegistryLite);
                                if (builder10 != null) {
                                    builder10.mergeFrom(this.removeBreakpoint_);
                                    this.removeBreakpoint_ = builder10.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex9) {
                                throw a((IOException)ex9);
                            }
                            this.bitField0_ |= 0x100;
                            continue;
                        }
                        case 82: {
                            StepInto_Res.Builder builder11 = null;
                            if ((this.bitField0_ & 0x200) == 0x200) {
                                builder11 = this.stepInto_.toBuilder();
                            }
                            try {
                                this.stepInto_ = (StepInto_Res)codedInputStream.readMessage((Parser)StepInto_Res.PARSER, extensionRegistryLite);
                                if (builder11 != null) {
                                    builder11.mergeFrom(this.stepInto_);
                                    this.stepInto_ = builder11.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex10) {
                                throw a((IOException)ex10);
                            }
                            this.bitField0_ |= 0x200;
                            continue;
                        }
                        case 90: {
                            StepOver_Res.Builder builder12 = null;
                            if ((this.bitField0_ & 0x400) == 0x400) {
                                builder12 = this.stepOver_.toBuilder();
                            }
                            try {
                                this.stepOver_ = (StepOver_Res)codedInputStream.readMessage((Parser)StepOver_Res.PARSER, extensionRegistryLite);
                                if (builder12 != null) {
                                    builder12.mergeFrom(this.stepOver_);
                                    this.stepOver_ = builder12.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex11) {
                                throw a((IOException)ex11);
                            }
                            this.bitField0_ |= 0x400;
                            continue;
                        }
                        case 98: {
                            StepOut_Res.Builder builder13 = null;
                            if ((this.bitField0_ & 0x800) == 0x800) {
                                builder13 = this.stepOut_.toBuilder();
                            }
                            try {
                                this.stepOut_ = (StepOut_Res)codedInputStream.readMessage((Parser)StepOut_Res.PARSER, extensionRegistryLite);
                                if (builder13 != null) {
                                    builder13.mergeFrom(this.stepOut_);
                                    this.stepOut_ = builder13.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex12) {
                                throw a((IOException)ex12);
                            }
                            this.bitField0_ |= 0x800;
                            continue;
                        }
                        case 106: {
                            EvaluateExpression_Res.Builder builder14 = null;
                            if ((this.bitField0_ & 0x1000) == 0x1000) {
                                builder14 = this.evaluateExpression_.toBuilder();
                            }
                            try {
                                this.evaluateExpression_ = (EvaluateExpression_Res)codedInputStream.readMessage((Parser)EvaluateExpression_Res.PARSER, extensionRegistryLite);
                                if (builder14 != null) {
                                    builder14.mergeFrom(this.evaluateExpression_);
                                    this.evaluateExpression_ = builder14.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex13) {
                                throw a((IOException)ex13);
                            }
                            this.bitField0_ |= 0x1000;
                            continue;
                        }
                        case 114: {
                            GetValueChildren_Res.Builder builder15 = null;
                            if ((this.bitField0_ & 0x2000) == 0x2000) {
                                builder15 = this.getValueChildren_.toBuilder();
                            }
                            try {
                                this.getValueChildren_ = (GetValueChildren_Res)codedInputStream.readMessage((Parser)GetValueChildren_Res.PARSER, extensionRegistryLite);
                                if (builder15 != null) {
                                    builder15.mergeFrom(this.getValueChildren_);
                                    this.getValueChildren_ = builder15.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex14) {
                                throw a((IOException)ex14);
                            }
                            this.bitField0_ |= 0x2000;
                            continue;
                        }
                        case 122: {
                            GetVars_Res.Builder builder16 = null;
                            if ((this.bitField0_ & 0x4000) == 0x4000) {
                                builder16 = this.getVars_.toBuilder();
                            }
                            try {
                                this.getVars_ = (GetVars_Res)codedInputStream.readMessage((Parser)GetVars_Res.PARSER, extensionRegistryLite);
                                if (builder16 != null) {
                                    builder16.mergeFrom(this.getVars_);
                                    this.getVars_ = builder16.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex15) {
                                throw a((IOException)ex15);
                            }
                            this.bitField0_ |= 0x4000;
                            continue;
                        }
                        case 130: {
                            HandleConsoleCommand_Res.Builder builder17 = null;
                            if ((this.bitField0_ & 0x8000) == 0x8000) {
                                builder17 = this.handleConsoleCommand_.toBuilder();
                            }
                            try {
                                this.handleConsoleCommand_ = (HandleConsoleCommand_Res)codedInputStream.readMessage((Parser)HandleConsoleCommand_Res.PARSER, extensionRegistryLite);
                                if (builder17 != null) {
                                    builder17.mergeFrom(this.handleConsoleCommand_);
                                    this.handleConsoleCommand_ = builder17.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex16) {
                                throw a((IOException)ex16);
                            }
                            this.bitField0_ |= 0x8000;
                            continue;
                        }
                        case 138: {
                            HandleCompletion_Res.Builder builder18 = null;
                            if ((this.bitField0_ & 0x10000) == 0x10000) {
                                builder18 = this.handleCompletion_.toBuilder();
                            }
                            try {
                                this.handleCompletion_ = (HandleCompletion_Res)codedInputStream.readMessage((Parser)HandleCompletion_Res.PARSER, extensionRegistryLite);
                                if (builder18 != null) {
                                    builder18.mergeFrom(this.handleCompletion_);
                                    this.handleCompletion_ = builder18.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex17) {
                                throw a((IOException)ex17);
                            }
                            this.bitField0_ |= 0x10000;
                            continue;
                        }
                        case 146: {
                            Attach_Res.Builder builder19 = null;
                            if ((this.bitField0_ & 0x20000) == 0x20000) {
                                builder19 = this.attach_.toBuilder();
                            }
                            try {
                                this.attach_ = (Attach_Res)codedInputStream.readMessage((Parser)Attach_Res.PARSER, extensionRegistryLite);
                                if (builder19 != null) {
                                    builder19.mergeFrom(this.attach_);
                                    this.attach_ = builder19.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex18) {
                                throw a((IOException)ex18);
                            }
                            this.bitField0_ |= 0x20000;
                            continue;
                        }
                        case 154: {
                            AttachByName_Res.Builder builder20 = null;
                            if ((this.bitField0_ & 0x40000) == 0x40000) {
                                builder20 = this.attachByName_.toBuilder();
                            }
                            try {
                                this.attachByName_ = (AttachByName_Res)codedInputStream.readMessage((Parser)AttachByName_Res.PARSER, extensionRegistryLite);
                                if (builder20 != null) {
                                    builder20.mergeFrom(this.attachByName_);
                                    this.attachByName_ = builder20.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex19) {
                                throw a((IOException)ex19);
                            }
                            this.bitField0_ |= 0x40000;
                            continue;
                        }
                        case 162: {
                            DispatchInput_Res.Builder builder21 = null;
                            if ((this.bitField0_ & 0x80000) == 0x80000) {
                                builder21 = this.dispatchInput_.toBuilder();
                            }
                            try {
                                this.dispatchInput_ = (DispatchInput_Res)codedInputStream.readMessage((Parser)DispatchInput_Res.PARSER, extensionRegistryLite);
                                if (builder21 != null) {
                                    builder21.mergeFrom(this.dispatchInput_);
                                    this.dispatchInput_ = builder21.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex20) {
                                throw a((IOException)ex20);
                            }
                            this.bitField0_ |= 0x80000;
                            continue;
                        }
                        case 170: {
                            AddWatchpoint_Res.Builder builder22 = null;
                            if ((this.bitField0_ & 0x100000) == 0x100000) {
                                builder22 = this.addWatchpoint_.toBuilder();
                            }
                            try {
                                this.addWatchpoint_ = (AddWatchpoint_Res)codedInputStream.readMessage((Parser)AddWatchpoint_Res.PARSER, extensionRegistryLite);
                                if (builder22 != null) {
                                    builder22.mergeFrom(this.addWatchpoint_);
                                    this.addWatchpoint_ = builder22.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex21) {
                                throw a((IOException)ex21);
                            }
                            this.bitField0_ |= 0x100000;
                            continue;
                        }
                        case 178: {
                            RemoveWatchpoint_Res.Builder builder23 = null;
                            if ((this.bitField0_ & 0x200000) == 0x200000) {
                                builder23 = this.removeWatchpoint_.toBuilder();
                            }
                            try {
                                this.removeWatchpoint_ = (RemoveWatchpoint_Res)codedInputStream.readMessage((Parser)RemoveWatchpoint_Res.PARSER, extensionRegistryLite);
                                if (builder23 != null) {
                                    builder23.mergeFrom(this.removeWatchpoint_);
                                    this.removeWatchpoint_ = builder23.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex22) {
                                throw a((IOException)ex22);
                            }
                            this.bitField0_ |= 0x200000;
                            continue;
                        }
                        case 186: {
                            Detach_Res.Builder builder24 = null;
                            if ((this.bitField0_ & 0x400000) == 0x400000) {
                                builder24 = this.detach_.toBuilder();
                            }
                            try {
                                this.detach_ = (Detach_Res)codedInputStream.readMessage((Parser)Detach_Res.PARSER, extensionRegistryLite);
                                if (builder24 != null) {
                                    builder24.mergeFrom(this.detach_);
                                    this.detach_ = builder24.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex23) {
                                throw a((IOException)ex23);
                            }
                            this.bitField0_ |= 0x400000;
                            continue;
                        }
                        case 194: {
                            Kill_Res.Builder builder25 = null;
                            if ((this.bitField0_ & 0x800000) == 0x800000) {
                                builder25 = this.kill_.toBuilder();
                            }
                            try {
                                this.kill_ = (Kill_Res)codedInputStream.readMessage((Parser)Kill_Res.PARSER, extensionRegistryLite);
                                if (builder25 != null) {
                                    builder25.mergeFrom(this.kill_);
                                    this.kill_ = builder25.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex24) {
                                throw a((IOException)ex24);
                            }
                            this.bitField0_ |= 0x800000;
                            continue;
                        }
                        case 202: {
                            GetChildrenCount_Res.Builder builder26 = null;
                            if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                                builder26 = this.getChildrenCount_.toBuilder();
                            }
                            try {
                                this.getChildrenCount_ = (GetChildrenCount_Res)codedInputStream.readMessage((Parser)GetChildrenCount_Res.PARSER, extensionRegistryLite);
                                if (builder26 != null) {
                                    builder26.mergeFrom(this.getChildrenCount_);
                                    this.getChildrenCount_ = builder26.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex25) {
                                throw a((IOException)ex25);
                            }
                            this.bitField0_ |= 0x1000000;
                            continue;
                        }
                        case 210: {
                            GetArraySlice_Res.Builder builder27 = null;
                            if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                                builder27 = this.getArraySlice_.toBuilder();
                            }
                            try {
                                this.getArraySlice_ = (GetArraySlice_Res)codedInputStream.readMessage((Parser)GetArraySlice_Res.PARSER, extensionRegistryLite);
                                if (builder27 != null) {
                                    builder27.mergeFrom(this.getArraySlice_);
                                    this.getArraySlice_ = builder27.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex26) {
                                throw a((IOException)ex26);
                            }
                            this.bitField0_ |= 0x2000000;
                            continue;
                        }
                        case 218: {
                            GetValueData_Res.Builder builder28 = null;
                            if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                                builder28 = this.getValueData_.toBuilder();
                            }
                            try {
                                this.getValueData_ = (GetValueData_Res)codedInputStream.readMessage((Parser)GetValueData_Res.PARSER, extensionRegistryLite);
                                if (builder28 != null) {
                                    builder28.mergeFrom(this.getValueData_);
                                    this.getValueData_ = builder28.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex27) {
                                throw a((IOException)ex27);
                            }
                            this.bitField0_ |= 0x4000000;
                            continue;
                        }
                        case 226: {
                            GetValueDescription_Res.Builder builder29 = null;
                            if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                                builder29 = this.getValueDescription_.toBuilder();
                            }
                            try {
                                this.getValueDescription_ = (GetValueDescription_Res)codedInputStream.readMessage((Parser)GetValueDescription_Res.PARSER, extensionRegistryLite);
                                if (builder29 != null) {
                                    builder29.mergeFrom(this.getValueDescription_);
                                    this.getValueDescription_ = builder29.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex28) {
                                throw a((IOException)ex28);
                            }
                            this.bitField0_ |= 0x8000000;
                            continue;
                        }
                        case 234: {
                            ValuesFilteringPolicy_Res.Builder builder30 = null;
                            if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                                builder30 = this.valuesFilteringPolicy_.toBuilder();
                            }
                            try {
                                this.valuesFilteringPolicy_ = (ValuesFilteringPolicy_Res)codedInputStream.readMessage((Parser)ValuesFilteringPolicy_Res.PARSER, extensionRegistryLite);
                                if (builder30 != null) {
                                    builder30.mergeFrom(this.valuesFilteringPolicy_);
                                    this.valuesFilteringPolicy_ = builder30.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex29) {
                                throw a((IOException)ex29);
                            }
                            this.bitField0_ |= 0x10000000;
                            continue;
                        }
                        case 242: {
                            ConnectPlatform_Res.Builder builder31 = null;
                            if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                                builder31 = this.connectPlatform_.toBuilder();
                            }
                            try {
                                this.connectPlatform_ = (ConnectPlatform_Res)codedInputStream.readMessage((Parser)ConnectPlatform_Res.PARSER, extensionRegistryLite);
                                if (builder31 != null) {
                                    builder31.mergeFrom(this.connectPlatform_);
                                    this.connectPlatform_ = builder31.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex30) {
                                throw a((IOException)ex30);
                            }
                            this.bitField0_ |= 0x20000000;
                            continue;
                        }
                        case 250: {
                            GetValueAddress_Res.Builder builder32 = null;
                            if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                                builder32 = this.getValueAddress_.toBuilder();
                            }
                            try {
                                this.getValueAddress_ = (GetValueAddress_Res)codedInputStream.readMessage((Parser)GetValueAddress_Res.PARSER, extensionRegistryLite);
                                if (builder32 != null) {
                                    builder32.mergeFrom(this.getValueAddress_);
                                    this.getValueAddress_ = builder32.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex31) {
                                throw a((IOException)ex31);
                            }
                            this.bitField0_ |= 0x40000000;
                            continue;
                        }
                        case 258: {
                            HandleSignal_Res.Builder builder33 = null;
                            if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                                builder33 = this.handleSignal_.toBuilder();
                            }
                            try {
                                this.handleSignal_ = (HandleSignal_Res)codedInputStream.readMessage((Parser)HandleSignal_Res.PARSER, extensionRegistryLite);
                                if (builder33 != null) {
                                    builder33.mergeFrom(this.handleSignal_);
                                    this.handleSignal_ = builder33.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex32) {
                                throw a((IOException)ex32);
                            }
                            this.bitField0_ |= Integer.MIN_VALUE;
                            continue;
                        }
                        case 266: {
                            ExecuteShellCommand_Res.Builder builder34 = null;
                            if ((this.bitField1_ & 0x1) == 0x1) {
                                builder34 = this.executeShellCommand_.toBuilder();
                            }
                            try {
                                this.executeShellCommand_ = (ExecuteShellCommand_Res)codedInputStream.readMessage((Parser)ExecuteShellCommand_Res.PARSER, extensionRegistryLite);
                                if (builder34 != null) {
                                    builder34.mergeFrom(this.executeShellCommand_);
                                    this.executeShellCommand_ = builder34.buildPartial();
                                }
                            }
                            catch (InvalidProtocolBufferException ex33) {
                                throw a((IOException)ex33);
                            }
                            this.bitField1_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException ex34) {
                throw ex34.setUnfinishedMessage((MessageLite)this);
            }
            catch (IOException ex35) {
                throw new InvalidProtocolBufferException(ex35.getMessage()).setUnfinishedMessage((MessageLite)this);
            }
            finally {
                this.unknownFields = builder.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return Protocol.internal_static_CompositeResponse_descriptor;
        }
        
        protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return Protocol.internal_static_CompositeResponse_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CompositeResponse.class, (Class)Builder.class);
        }
        
        public Parser<CompositeResponse> getParserForType() {
            return CompositeResponse.PARSER;
        }
        
        public boolean hasCreateTarget() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        public CreateTarget_Res getCreateTarget() {
            return this.createTarget_;
        }
        
        public CreateTarget_ResOrBuilder getCreateTargetOrBuilder() {
            return this.createTarget_;
        }
        
        public boolean hasLaunch() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        public Launch_Res getLaunch() {
            return this.launch_;
        }
        
        public Launch_ResOrBuilder getLaunchOrBuilder() {
            return this.launch_;
        }
        
        public boolean hasContinue() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        public Continue_Res getContinue() {
            return this.continue_;
        }
        
        public Continue_ResOrBuilder getContinueOrBuilder() {
            return this.continue_;
        }
        
        public boolean hasCompositeBroadcast() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        public Broadcasts.CompositeBroadcast getCompositeBroadcast() {
            return this.compositeBroadcast_;
        }
        
        public Broadcasts.CompositeBroadcastOrBuilder getCompositeBroadcastOrBuilder() {
            return this.compositeBroadcast_;
        }
        
        public boolean hasSuspend() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        public Suspend_Res getSuspend() {
            return this.suspend_;
        }
        
        public Suspend_ResOrBuilder getSuspendOrBuilder() {
            return this.suspend_;
        }
        
        public boolean hasGetThreads() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        public GetThreads_Res getGetThreads() {
            return this.getThreads_;
        }
        
        public GetThreads_ResOrBuilder getGetThreadsOrBuilder() {
            return this.getThreads_;
        }
        
        public boolean hasGetFrames() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        public GetFrames_Res getGetFrames() {
            return this.getFrames_;
        }
        
        public GetFrames_ResOrBuilder getGetFramesOrBuilder() {
            return this.getFrames_;
        }
        
        public boolean hasAddBreakpoint() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        public AddBreakpoint_Res getAddBreakpoint() {
            return this.addBreakpoint_;
        }
        
        public AddBreakpoint_ResOrBuilder getAddBreakpointOrBuilder() {
            return this.addBreakpoint_;
        }
        
        public boolean hasRemoveBreakpoint() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        public RemoveBreakpoint_Res getRemoveBreakpoint() {
            return this.removeBreakpoint_;
        }
        
        public RemoveBreakpoint_ResOrBuilder getRemoveBreakpointOrBuilder() {
            return this.removeBreakpoint_;
        }
        
        public boolean hasStepInto() {
            return (this.bitField0_ & 0x200) == 0x200;
        }
        
        public StepInto_Res getStepInto() {
            return this.stepInto_;
        }
        
        public StepInto_ResOrBuilder getStepIntoOrBuilder() {
            return this.stepInto_;
        }
        
        public boolean hasStepOver() {
            return (this.bitField0_ & 0x400) == 0x400;
        }
        
        public StepOver_Res getStepOver() {
            return this.stepOver_;
        }
        
        public StepOver_ResOrBuilder getStepOverOrBuilder() {
            return this.stepOver_;
        }
        
        public boolean hasStepOut() {
            return (this.bitField0_ & 0x800) == 0x800;
        }
        
        public StepOut_Res getStepOut() {
            return this.stepOut_;
        }
        
        public StepOut_ResOrBuilder getStepOutOrBuilder() {
            return this.stepOut_;
        }
        
        public boolean hasEvaluateExpression() {
            return (this.bitField0_ & 0x1000) == 0x1000;
        }
        
        public EvaluateExpression_Res getEvaluateExpression() {
            return this.evaluateExpression_;
        }
        
        public EvaluateExpression_ResOrBuilder getEvaluateExpressionOrBuilder() {
            return this.evaluateExpression_;
        }
        
        public boolean hasGetValueChildren() {
            return (this.bitField0_ & 0x2000) == 0x2000;
        }
        
        public GetValueChildren_Res getGetValueChildren() {
            return this.getValueChildren_;
        }
        
        public GetValueChildren_ResOrBuilder getGetValueChildrenOrBuilder() {
            return this.getValueChildren_;
        }
        
        public boolean hasGetVars() {
            return (this.bitField0_ & 0x4000) == 0x4000;
        }
        
        public GetVars_Res getGetVars() {
            return this.getVars_;
        }
        
        public GetVars_ResOrBuilder getGetVarsOrBuilder() {
            return this.getVars_;
        }
        
        public boolean hasHandleConsoleCommand() {
            return (this.bitField0_ & 0x8000) == 0x8000;
        }
        
        public HandleConsoleCommand_Res getHandleConsoleCommand() {
            return this.handleConsoleCommand_;
        }
        
        public HandleConsoleCommand_ResOrBuilder getHandleConsoleCommandOrBuilder() {
            return this.handleConsoleCommand_;
        }
        
        public boolean hasHandleCompletion() {
            return (this.bitField0_ & 0x10000) == 0x10000;
        }
        
        public HandleCompletion_Res getHandleCompletion() {
            return this.handleCompletion_;
        }
        
        public HandleCompletion_ResOrBuilder getHandleCompletionOrBuilder() {
            return this.handleCompletion_;
        }
        
        public boolean hasAttach() {
            return (this.bitField0_ & 0x20000) == 0x20000;
        }
        
        public Attach_Res getAttach() {
            return this.attach_;
        }
        
        public Attach_ResOrBuilder getAttachOrBuilder() {
            return this.attach_;
        }
        
        public boolean hasAttachByName() {
            return (this.bitField0_ & 0x40000) == 0x40000;
        }
        
        public AttachByName_Res getAttachByName() {
            return this.attachByName_;
        }
        
        public AttachByName_ResOrBuilder getAttachByNameOrBuilder() {
            return this.attachByName_;
        }
        
        public boolean hasDispatchInput() {
            return (this.bitField0_ & 0x80000) == 0x80000;
        }
        
        public DispatchInput_Res getDispatchInput() {
            return this.dispatchInput_;
        }
        
        public DispatchInput_ResOrBuilder getDispatchInputOrBuilder() {
            return this.dispatchInput_;
        }
        
        public boolean hasAddWatchpoint() {
            return (this.bitField0_ & 0x100000) == 0x100000;
        }
        
        public AddWatchpoint_Res getAddWatchpoint() {
            return this.addWatchpoint_;
        }
        
        public AddWatchpoint_ResOrBuilder getAddWatchpointOrBuilder() {
            return this.addWatchpoint_;
        }
        
        public boolean hasRemoveWatchpoint() {
            return (this.bitField0_ & 0x200000) == 0x200000;
        }
        
        public RemoveWatchpoint_Res getRemoveWatchpoint() {
            return this.removeWatchpoint_;
        }
        
        public RemoveWatchpoint_ResOrBuilder getRemoveWatchpointOrBuilder() {
            return this.removeWatchpoint_;
        }
        
        public boolean hasDetach() {
            return (this.bitField0_ & 0x400000) == 0x400000;
        }
        
        public Detach_Res getDetach() {
            return this.detach_;
        }
        
        public Detach_ResOrBuilder getDetachOrBuilder() {
            return this.detach_;
        }
        
        public boolean hasKill() {
            return (this.bitField0_ & 0x800000) == 0x800000;
        }
        
        public Kill_Res getKill() {
            return this.kill_;
        }
        
        public Kill_ResOrBuilder getKillOrBuilder() {
            return this.kill_;
        }
        
        public boolean hasGetChildrenCount() {
            return (this.bitField0_ & 0x1000000) == 0x1000000;
        }
        
        public GetChildrenCount_Res getGetChildrenCount() {
            return this.getChildrenCount_;
        }
        
        public GetChildrenCount_ResOrBuilder getGetChildrenCountOrBuilder() {
            return this.getChildrenCount_;
        }
        
        public boolean hasGetArraySlice() {
            return (this.bitField0_ & 0x2000000) == 0x2000000;
        }
        
        public GetArraySlice_Res getGetArraySlice() {
            return this.getArraySlice_;
        }
        
        public GetArraySlice_ResOrBuilder getGetArraySliceOrBuilder() {
            return this.getArraySlice_;
        }
        
        public boolean hasGetValueData() {
            return (this.bitField0_ & 0x4000000) == 0x4000000;
        }
        
        public GetValueData_Res getGetValueData() {
            return this.getValueData_;
        }
        
        public GetValueData_ResOrBuilder getGetValueDataOrBuilder() {
            return this.getValueData_;
        }
        
        public boolean hasGetValueDescription() {
            return (this.bitField0_ & 0x8000000) == 0x8000000;
        }
        
        public GetValueDescription_Res getGetValueDescription() {
            return this.getValueDescription_;
        }
        
        public GetValueDescription_ResOrBuilder getGetValueDescriptionOrBuilder() {
            return this.getValueDescription_;
        }
        
        public boolean hasValuesFilteringPolicy() {
            return (this.bitField0_ & 0x10000000) == 0x10000000;
        }
        
        public ValuesFilteringPolicy_Res getValuesFilteringPolicy() {
            return this.valuesFilteringPolicy_;
        }
        
        public ValuesFilteringPolicy_ResOrBuilder getValuesFilteringPolicyOrBuilder() {
            return this.valuesFilteringPolicy_;
        }
        
        public boolean hasConnectPlatform() {
            return (this.bitField0_ & 0x20000000) == 0x20000000;
        }
        
        public ConnectPlatform_Res getConnectPlatform() {
            return this.connectPlatform_;
        }
        
        public ConnectPlatform_ResOrBuilder getConnectPlatformOrBuilder() {
            return this.connectPlatform_;
        }
        
        public boolean hasGetValueAddress() {
            return (this.bitField0_ & 0x40000000) == 0x40000000;
        }
        
        public GetValueAddress_Res getGetValueAddress() {
            return this.getValueAddress_;
        }
        
        public GetValueAddress_ResOrBuilder getGetValueAddressOrBuilder() {
            return this.getValueAddress_;
        }
        
        public boolean hasHandleSignal() {
            return (this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE;
        }
        
        public HandleSignal_Res getHandleSignal() {
            return this.handleSignal_;
        }
        
        public HandleSignal_ResOrBuilder getHandleSignalOrBuilder() {
            return this.handleSignal_;
        }
        
        public boolean hasExecuteShellCommand() {
            return (this.bitField1_ & 0x1) == 0x1;
        }
        
        public ExecuteShellCommand_Res getExecuteShellCommand() {
            return this.executeShellCommand_;
        }
        
        public ExecuteShellCommand_ResOrBuilder getExecuteShellCommandOrBuilder() {
            return this.executeShellCommand_;
        }
        
        private void a() {
            this.createTarget_ = CreateTarget_Res.getDefaultInstance();
            this.launch_ = Launch_Res.getDefaultInstance();
            this.continue_ = Continue_Res.getDefaultInstance();
            this.compositeBroadcast_ = Broadcasts.CompositeBroadcast.getDefaultInstance();
            this.suspend_ = Suspend_Res.getDefaultInstance();
            this.getThreads_ = GetThreads_Res.getDefaultInstance();
            this.getFrames_ = GetFrames_Res.getDefaultInstance();
            this.addBreakpoint_ = AddBreakpoint_Res.getDefaultInstance();
            this.removeBreakpoint_ = RemoveBreakpoint_Res.getDefaultInstance();
            this.stepInto_ = StepInto_Res.getDefaultInstance();
            this.stepOver_ = StepOver_Res.getDefaultInstance();
            this.stepOut_ = StepOut_Res.getDefaultInstance();
            this.evaluateExpression_ = EvaluateExpression_Res.getDefaultInstance();
            this.getValueChildren_ = GetValueChildren_Res.getDefaultInstance();
            this.getVars_ = GetVars_Res.getDefaultInstance();
            this.handleConsoleCommand_ = HandleConsoleCommand_Res.getDefaultInstance();
            this.handleCompletion_ = HandleCompletion_Res.getDefaultInstance();
            this.attach_ = Attach_Res.getDefaultInstance();
            this.attachByName_ = AttachByName_Res.getDefaultInstance();
            this.dispatchInput_ = DispatchInput_Res.getDefaultInstance();
            this.addWatchpoint_ = AddWatchpoint_Res.getDefaultInstance();
            this.removeWatchpoint_ = RemoveWatchpoint_Res.getDefaultInstance();
            this.detach_ = Detach_Res.getDefaultInstance();
            this.kill_ = Kill_Res.getDefaultInstance();
            this.getChildrenCount_ = GetChildrenCount_Res.getDefaultInstance();
            this.getArraySlice_ = GetArraySlice_Res.getDefaultInstance();
            this.getValueData_ = GetValueData_Res.getDefaultInstance();
            this.getValueDescription_ = GetValueDescription_Res.getDefaultInstance();
            this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Res.getDefaultInstance();
            this.connectPlatform_ = ConnectPlatform_Res.getDefaultInstance();
            this.getValueAddress_ = GetValueAddress_Res.getDefaultInstance();
            this.handleSignal_ = HandleSignal_Res.getDefaultInstance();
            this.executeShellCommand_ = ExecuteShellCommand_Res.getDefaultInstance();
        }
        
        public final boolean isInitialized() {
            final byte memoizedIsInitialized = this.memoizedIsInitialized;
            if (memoizedIsInitialized != -1) {
                return memoizedIsInitialized == 1;
            }
            if (this.hasCreateTarget() && !this.getCreateTarget().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasLaunch() && !this.getLaunch().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasContinue() && !this.getContinue().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasCompositeBroadcast() && !this.getCompositeBroadcast().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasSuspend() && !this.getSuspend().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetThreads() && !this.getGetThreads().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetFrames() && !this.getGetFrames().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAddBreakpoint() && !this.getAddBreakpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasRemoveBreakpoint() && !this.getRemoveBreakpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepInto() && !this.getStepInto().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepOver() && !this.getStepOver().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasStepOut() && !this.getStepOut().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasEvaluateExpression() && !this.getEvaluateExpression().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueChildren() && !this.getGetValueChildren().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetVars() && !this.getGetVars().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleConsoleCommand() && !this.getHandleConsoleCommand().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleCompletion() && !this.getHandleCompletion().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAttach() && !this.getAttach().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAttachByName() && !this.getAttachByName().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasDispatchInput() && !this.getDispatchInput().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAddWatchpoint() && !this.getAddWatchpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasRemoveWatchpoint() && !this.getRemoveWatchpoint().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasDetach() && !this.getDetach().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasKill() && !this.getKill().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetChildrenCount() && !this.getGetChildrenCount().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetArraySlice() && !this.getGetArraySlice().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueData() && !this.getGetValueData().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueDescription() && !this.getGetValueDescription().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasValuesFilteringPolicy() && !this.getValuesFilteringPolicy().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasConnectPlatform() && !this.getConnectPlatform().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasGetValueAddress() && !this.getGetValueAddress().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasHandleSignal() && !this.getHandleSignal().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasExecuteShellCommand() && !this.getExecuteShellCommand().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        public void writeTo(final CodedOutputStream codedOutputStream) throws IOException {
            try {
                this.getSerializedSize();
                if ((this.bitField0_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(1, (MessageLite)this.createTarget_);
                }
            }
            catch (IOException ex) {
                throw a(ex);
            }
            try {
                if ((this.bitField0_ & 0x2) == 0x2) {
                    codedOutputStream.writeMessage(2, (MessageLite)this.launch_);
                }
            }
            catch (IOException ex2) {
                throw a(ex2);
            }
            try {
                if ((this.bitField0_ & 0x4) == 0x4) {
                    codedOutputStream.writeMessage(3, (MessageLite)this.continue_);
                }
            }
            catch (IOException ex3) {
                throw a(ex3);
            }
            try {
                if ((this.bitField0_ & 0x8) == 0x8) {
                    codedOutputStream.writeMessage(4, (MessageLite)this.compositeBroadcast_);
                }
            }
            catch (IOException ex4) {
                throw a(ex4);
            }
            try {
                if ((this.bitField0_ & 0x10) == 0x10) {
                    codedOutputStream.writeMessage(5, (MessageLite)this.suspend_);
                }
            }
            catch (IOException ex5) {
                throw a(ex5);
            }
            try {
                if ((this.bitField0_ & 0x20) == 0x20) {
                    codedOutputStream.writeMessage(6, (MessageLite)this.getThreads_);
                }
            }
            catch (IOException ex6) {
                throw a(ex6);
            }
            try {
                if ((this.bitField0_ & 0x40) == 0x40) {
                    codedOutputStream.writeMessage(7, (MessageLite)this.getFrames_);
                }
            }
            catch (IOException ex7) {
                throw a(ex7);
            }
            try {
                if ((this.bitField0_ & 0x80) == 0x80) {
                    codedOutputStream.writeMessage(8, (MessageLite)this.addBreakpoint_);
                }
            }
            catch (IOException ex8) {
                throw a(ex8);
            }
            try {
                if ((this.bitField0_ & 0x100) == 0x100) {
                    codedOutputStream.writeMessage(9, (MessageLite)this.removeBreakpoint_);
                }
            }
            catch (IOException ex9) {
                throw a(ex9);
            }
            try {
                if ((this.bitField0_ & 0x200) == 0x200) {
                    codedOutputStream.writeMessage(10, (MessageLite)this.stepInto_);
                }
            }
            catch (IOException ex10) {
                throw a(ex10);
            }
            try {
                if ((this.bitField0_ & 0x400) == 0x400) {
                    codedOutputStream.writeMessage(11, (MessageLite)this.stepOver_);
                }
            }
            catch (IOException ex11) {
                throw a(ex11);
            }
            try {
                if ((this.bitField0_ & 0x800) == 0x800) {
                    codedOutputStream.writeMessage(12, (MessageLite)this.stepOut_);
                }
            }
            catch (IOException ex12) {
                throw a(ex12);
            }
            try {
                if ((this.bitField0_ & 0x1000) == 0x1000) {
                    codedOutputStream.writeMessage(13, (MessageLite)this.evaluateExpression_);
                }
            }
            catch (IOException ex13) {
                throw a(ex13);
            }
            try {
                if ((this.bitField0_ & 0x2000) == 0x2000) {
                    codedOutputStream.writeMessage(14, (MessageLite)this.getValueChildren_);
                }
            }
            catch (IOException ex14) {
                throw a(ex14);
            }
            try {
                if ((this.bitField0_ & 0x4000) == 0x4000) {
                    codedOutputStream.writeMessage(15, (MessageLite)this.getVars_);
                }
            }
            catch (IOException ex15) {
                throw a(ex15);
            }
            try {
                if ((this.bitField0_ & 0x8000) == 0x8000) {
                    codedOutputStream.writeMessage(16, (MessageLite)this.handleConsoleCommand_);
                }
            }
            catch (IOException ex16) {
                throw a(ex16);
            }
            try {
                if ((this.bitField0_ & 0x10000) == 0x10000) {
                    codedOutputStream.writeMessage(17, (MessageLite)this.handleCompletion_);
                }
            }
            catch (IOException ex17) {
                throw a(ex17);
            }
            try {
                if ((this.bitField0_ & 0x20000) == 0x20000) {
                    codedOutputStream.writeMessage(18, (MessageLite)this.attach_);
                }
            }
            catch (IOException ex18) {
                throw a(ex18);
            }
            try {
                if ((this.bitField0_ & 0x40000) == 0x40000) {
                    codedOutputStream.writeMessage(19, (MessageLite)this.attachByName_);
                }
            }
            catch (IOException ex19) {
                throw a(ex19);
            }
            try {
                if ((this.bitField0_ & 0x80000) == 0x80000) {
                    codedOutputStream.writeMessage(20, (MessageLite)this.dispatchInput_);
                }
            }
            catch (IOException ex20) {
                throw a(ex20);
            }
            try {
                if ((this.bitField0_ & 0x100000) == 0x100000) {
                    codedOutputStream.writeMessage(21, (MessageLite)this.addWatchpoint_);
                }
            }
            catch (IOException ex21) {
                throw a(ex21);
            }
            try {
                if ((this.bitField0_ & 0x200000) == 0x200000) {
                    codedOutputStream.writeMessage(22, (MessageLite)this.removeWatchpoint_);
                }
            }
            catch (IOException ex22) {
                throw a(ex22);
            }
            try {
                if ((this.bitField0_ & 0x400000) == 0x400000) {
                    codedOutputStream.writeMessage(23, (MessageLite)this.detach_);
                }
            }
            catch (IOException ex23) {
                throw a(ex23);
            }
            try {
                if ((this.bitField0_ & 0x800000) == 0x800000) {
                    codedOutputStream.writeMessage(24, (MessageLite)this.kill_);
                }
            }
            catch (IOException ex24) {
                throw a(ex24);
            }
            try {
                if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                    codedOutputStream.writeMessage(25, (MessageLite)this.getChildrenCount_);
                }
            }
            catch (IOException ex25) {
                throw a(ex25);
            }
            try {
                if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                    codedOutputStream.writeMessage(26, (MessageLite)this.getArraySlice_);
                }
            }
            catch (IOException ex26) {
                throw a(ex26);
            }
            try {
                if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                    codedOutputStream.writeMessage(27, (MessageLite)this.getValueData_);
                }
            }
            catch (IOException ex27) {
                throw a(ex27);
            }
            try {
                if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                    codedOutputStream.writeMessage(28, (MessageLite)this.getValueDescription_);
                }
            }
            catch (IOException ex28) {
                throw a(ex28);
            }
            try {
                if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                    codedOutputStream.writeMessage(29, (MessageLite)this.valuesFilteringPolicy_);
                }
            }
            catch (IOException ex29) {
                throw a(ex29);
            }
            try {
                if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                    codedOutputStream.writeMessage(30, (MessageLite)this.connectPlatform_);
                }
            }
            catch (IOException ex30) {
                throw a(ex30);
            }
            try {
                if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                    codedOutputStream.writeMessage(31, (MessageLite)this.getValueAddress_);
                }
            }
            catch (IOException ex31) {
                throw a(ex31);
            }
            try {
                if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                    codedOutputStream.writeMessage(32, (MessageLite)this.handleSignal_);
                }
            }
            catch (IOException ex32) {
                throw a(ex32);
            }
            try {
                if ((this.bitField1_ & 0x1) == 0x1) {
                    codedOutputStream.writeMessage(33, (MessageLite)this.executeShellCommand_);
                }
            }
            catch (IOException ex33) {
                throw a(ex33);
            }
            this.getUnknownFields().writeTo(codedOutputStream);
        }
        
        public int getSerializedSize() {
            final int memoizedSerializedSize = this.memoizedSerializedSize;
            if (memoizedSerializedSize != -1) {
                return memoizedSerializedSize;
            }
            int n = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(1, (MessageLite)this.createTarget_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                n += CodedOutputStream.computeMessageSize(2, (MessageLite)this.launch_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                n += CodedOutputStream.computeMessageSize(3, (MessageLite)this.continue_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                n += CodedOutputStream.computeMessageSize(4, (MessageLite)this.compositeBroadcast_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                n += CodedOutputStream.computeMessageSize(5, (MessageLite)this.suspend_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                n += CodedOutputStream.computeMessageSize(6, (MessageLite)this.getThreads_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                n += CodedOutputStream.computeMessageSize(7, (MessageLite)this.getFrames_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                n += CodedOutputStream.computeMessageSize(8, (MessageLite)this.addBreakpoint_);
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                n += CodedOutputStream.computeMessageSize(9, (MessageLite)this.removeBreakpoint_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                n += CodedOutputStream.computeMessageSize(10, (MessageLite)this.stepInto_);
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                n += CodedOutputStream.computeMessageSize(11, (MessageLite)this.stepOver_);
            }
            if ((this.bitField0_ & 0x800) == 0x800) {
                n += CodedOutputStream.computeMessageSize(12, (MessageLite)this.stepOut_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                n += CodedOutputStream.computeMessageSize(13, (MessageLite)this.evaluateExpression_);
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                n += CodedOutputStream.computeMessageSize(14, (MessageLite)this.getValueChildren_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                n += CodedOutputStream.computeMessageSize(15, (MessageLite)this.getVars_);
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                n += CodedOutputStream.computeMessageSize(16, (MessageLite)this.handleConsoleCommand_);
            }
            if ((this.bitField0_ & 0x10000) == 0x10000) {
                n += CodedOutputStream.computeMessageSize(17, (MessageLite)this.handleCompletion_);
            }
            if ((this.bitField0_ & 0x20000) == 0x20000) {
                n += CodedOutputStream.computeMessageSize(18, (MessageLite)this.attach_);
            }
            if ((this.bitField0_ & 0x40000) == 0x40000) {
                n += CodedOutputStream.computeMessageSize(19, (MessageLite)this.attachByName_);
            }
            if ((this.bitField0_ & 0x80000) == 0x80000) {
                n += CodedOutputStream.computeMessageSize(20, (MessageLite)this.dispatchInput_);
            }
            if ((this.bitField0_ & 0x100000) == 0x100000) {
                n += CodedOutputStream.computeMessageSize(21, (MessageLite)this.addWatchpoint_);
            }
            if ((this.bitField0_ & 0x200000) == 0x200000) {
                n += CodedOutputStream.computeMessageSize(22, (MessageLite)this.removeWatchpoint_);
            }
            if ((this.bitField0_ & 0x400000) == 0x400000) {
                n += CodedOutputStream.computeMessageSize(23, (MessageLite)this.detach_);
            }
            if ((this.bitField0_ & 0x800000) == 0x800000) {
                n += CodedOutputStream.computeMessageSize(24, (MessageLite)this.kill_);
            }
            if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                n += CodedOutputStream.computeMessageSize(25, (MessageLite)this.getChildrenCount_);
            }
            if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                n += CodedOutputStream.computeMessageSize(26, (MessageLite)this.getArraySlice_);
            }
            if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                n += CodedOutputStream.computeMessageSize(27, (MessageLite)this.getValueData_);
            }
            if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                n += CodedOutputStream.computeMessageSize(28, (MessageLite)this.getValueDescription_);
            }
            if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                n += CodedOutputStream.computeMessageSize(29, (MessageLite)this.valuesFilteringPolicy_);
            }
            if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                n += CodedOutputStream.computeMessageSize(30, (MessageLite)this.connectPlatform_);
            }
            if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                n += CodedOutputStream.computeMessageSize(31, (MessageLite)this.getValueAddress_);
            }
            if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                n += CodedOutputStream.computeMessageSize(32, (MessageLite)this.handleSignal_);
            }
            if ((this.bitField1_ & 0x1) == 0x1) {
                n += CodedOutputStream.computeMessageSize(33, (MessageLite)this.executeShellCommand_);
            }
            return this.memoizedSerializedSize = n + this.getUnknownFields().getSerializedSize();
        }
        
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        public static CompositeResponse parseFrom(final ByteString byteString) throws InvalidProtocolBufferException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(byteString);
        }
        
        public static CompositeResponse parseFrom(final ByteString byteString, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(byteString, extensionRegistryLite);
        }
        
        public static CompositeResponse parseFrom(final byte[] array) throws InvalidProtocolBufferException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(array);
        }
        
        public static CompositeResponse parseFrom(final byte[] array, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(array, extensionRegistryLite);
        }
        
        public static CompositeResponse parseFrom(final InputStream inputStream) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(inputStream);
        }
        
        public static CompositeResponse parseFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(inputStream, extensionRegistryLite);
        }
        
        public static CompositeResponse parseDelimitedFrom(final InputStream inputStream) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseDelimitedFrom(inputStream);
        }
        
        public static CompositeResponse parseDelimitedFrom(final InputStream inputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseDelimitedFrom(inputStream, extensionRegistryLite);
        }
        
        public static CompositeResponse parseFrom(final CodedInputStream codedInputStream) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(codedInputStream);
        }
        
        public static CompositeResponse parseFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return (CompositeResponse)CompositeResponse.PARSER.parseFrom(codedInputStream, extensionRegistryLite);
        }
        
        public static Builder newBuilder() {
            return j();
        }
        
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final CompositeResponse compositeResponse) {
            return newBuilder().mergeFrom(compositeResponse);
        }
        
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        protected Builder newBuilderForType(final GeneratedMessage.BuilderParent builderParent) {
            return new Builder(builderParent);
        }
        
        static {
            CompositeResponse.PARSER = (Parser<CompositeResponse>)new AbstractParser<CompositeResponse>() {
                public CompositeResponse parsePartialFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                    return new CompositeResponse(codedInputStream, extensionRegistryLite);
                }
            };
            (defaultInstance = new CompositeResponse(true)).a();
        }
        
        private static IOException a(final IOException ex) {
            return ex;
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements CompositeResponseOrBuilder
        {
            private int bitField0_;
            private int bitField1_;
            private CreateTarget_Res createTarget_;
            private SingleFieldBuilder<CreateTarget_Res, CreateTarget_Res.Builder, CreateTarget_ResOrBuilder> createTargetBuilder_;
            private Launch_Res launch_;
            private SingleFieldBuilder<Launch_Res, Launch_Res.Builder, Launch_ResOrBuilder> launchBuilder_;
            private Continue_Res continue_;
            private SingleFieldBuilder<Continue_Res, Continue_Res.Builder, Continue_ResOrBuilder> continueBuilder_;
            private Broadcasts.CompositeBroadcast compositeBroadcast_;
            private SingleFieldBuilder<Broadcasts.CompositeBroadcast, Broadcasts.CompositeBroadcast.Builder, Broadcasts.CompositeBroadcastOrBuilder> compositeBroadcastBuilder_;
            private Suspend_Res suspend_;
            private SingleFieldBuilder<Suspend_Res, Suspend_Res.Builder, Suspend_ResOrBuilder> suspendBuilder_;
            private GetThreads_Res getThreads_;
            private SingleFieldBuilder<GetThreads_Res, GetThreads_Res.Builder, GetThreads_ResOrBuilder> getThreadsBuilder_;
            private GetFrames_Res getFrames_;
            private SingleFieldBuilder<GetFrames_Res, GetFrames_Res.Builder, GetFrames_ResOrBuilder> getFramesBuilder_;
            private AddBreakpoint_Res addBreakpoint_;
            private SingleFieldBuilder<AddBreakpoint_Res, AddBreakpoint_Res.Builder, AddBreakpoint_ResOrBuilder> addBreakpointBuilder_;
            private RemoveBreakpoint_Res removeBreakpoint_;
            private SingleFieldBuilder<RemoveBreakpoint_Res, RemoveBreakpoint_Res.Builder, RemoveBreakpoint_ResOrBuilder> removeBreakpointBuilder_;
            private StepInto_Res stepInto_;
            private SingleFieldBuilder<StepInto_Res, StepInto_Res.Builder, StepInto_ResOrBuilder> stepIntoBuilder_;
            private StepOver_Res stepOver_;
            private SingleFieldBuilder<StepOver_Res, StepOver_Res.Builder, StepOver_ResOrBuilder> stepOverBuilder_;
            private StepOut_Res stepOut_;
            private SingleFieldBuilder<StepOut_Res, StepOut_Res.Builder, StepOut_ResOrBuilder> stepOutBuilder_;
            private EvaluateExpression_Res evaluateExpression_;
            private SingleFieldBuilder<EvaluateExpression_Res, EvaluateExpression_Res.Builder, EvaluateExpression_ResOrBuilder> evaluateExpressionBuilder_;
            private GetValueChildren_Res getValueChildren_;
            private SingleFieldBuilder<GetValueChildren_Res, GetValueChildren_Res.Builder, GetValueChildren_ResOrBuilder> getValueChildrenBuilder_;
            private GetVars_Res getVars_;
            private SingleFieldBuilder<GetVars_Res, GetVars_Res.Builder, GetVars_ResOrBuilder> getVarsBuilder_;
            private HandleConsoleCommand_Res handleConsoleCommand_;
            private SingleFieldBuilder<HandleConsoleCommand_Res, HandleConsoleCommand_Res.Builder, HandleConsoleCommand_ResOrBuilder> handleConsoleCommandBuilder_;
            private HandleCompletion_Res handleCompletion_;
            private SingleFieldBuilder<HandleCompletion_Res, HandleCompletion_Res.Builder, HandleCompletion_ResOrBuilder> handleCompletionBuilder_;
            private Attach_Res attach_;
            private SingleFieldBuilder<Attach_Res, Attach_Res.Builder, Attach_ResOrBuilder> attachBuilder_;
            private AttachByName_Res attachByName_;
            private SingleFieldBuilder<AttachByName_Res, AttachByName_Res.Builder, AttachByName_ResOrBuilder> attachByNameBuilder_;
            private DispatchInput_Res dispatchInput_;
            private SingleFieldBuilder<DispatchInput_Res, DispatchInput_Res.Builder, DispatchInput_ResOrBuilder> dispatchInputBuilder_;
            private AddWatchpoint_Res addWatchpoint_;
            private SingleFieldBuilder<AddWatchpoint_Res, AddWatchpoint_Res.Builder, AddWatchpoint_ResOrBuilder> addWatchpointBuilder_;
            private RemoveWatchpoint_Res removeWatchpoint_;
            private SingleFieldBuilder<RemoveWatchpoint_Res, RemoveWatchpoint_Res.Builder, RemoveWatchpoint_ResOrBuilder> removeWatchpointBuilder_;
            private Detach_Res detach_;
            private SingleFieldBuilder<Detach_Res, Detach_Res.Builder, Detach_ResOrBuilder> detachBuilder_;
            private Kill_Res kill_;
            private SingleFieldBuilder<Kill_Res, Kill_Res.Builder, Kill_ResOrBuilder> killBuilder_;
            private GetChildrenCount_Res getChildrenCount_;
            private SingleFieldBuilder<GetChildrenCount_Res, GetChildrenCount_Res.Builder, GetChildrenCount_ResOrBuilder> getChildrenCountBuilder_;
            private GetArraySlice_Res getArraySlice_;
            private SingleFieldBuilder<GetArraySlice_Res, GetArraySlice_Res.Builder, GetArraySlice_ResOrBuilder> getArraySliceBuilder_;
            private GetValueData_Res getValueData_;
            private SingleFieldBuilder<GetValueData_Res, GetValueData_Res.Builder, GetValueData_ResOrBuilder> getValueDataBuilder_;
            private GetValueDescription_Res getValueDescription_;
            private SingleFieldBuilder<GetValueDescription_Res, GetValueDescription_Res.Builder, GetValueDescription_ResOrBuilder> getValueDescriptionBuilder_;
            private ValuesFilteringPolicy_Res valuesFilteringPolicy_;
            private SingleFieldBuilder<ValuesFilteringPolicy_Res, ValuesFilteringPolicy_Res.Builder, ValuesFilteringPolicy_ResOrBuilder> valuesFilteringPolicyBuilder_;
            private ConnectPlatform_Res connectPlatform_;
            private SingleFieldBuilder<ConnectPlatform_Res, ConnectPlatform_Res.Builder, ConnectPlatform_ResOrBuilder> connectPlatformBuilder_;
            private GetValueAddress_Res getValueAddress_;
            private SingleFieldBuilder<GetValueAddress_Res, GetValueAddress_Res.Builder, GetValueAddress_ResOrBuilder> getValueAddressBuilder_;
            private HandleSignal_Res handleSignal_;
            private SingleFieldBuilder<HandleSignal_Res, HandleSignal_Res.Builder, HandleSignal_ResOrBuilder> handleSignalBuilder_;
            private ExecuteShellCommand_Res executeShellCommand_;
            private SingleFieldBuilder<ExecuteShellCommand_Res, ExecuteShellCommand_Res.Builder, ExecuteShellCommand_ResOrBuilder> executeShellCommandBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return Protocol.internal_static_CompositeResponse_descriptor;
            }
            
            protected GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return Protocol.internal_static_CompositeResponse_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)CompositeResponse.class, (Class)Builder.class);
            }
            
            private Builder() {
                this.createTarget_ = CreateTarget_Res.getDefaultInstance();
                this.launch_ = Launch_Res.getDefaultInstance();
                this.continue_ = Continue_Res.getDefaultInstance();
                this.compositeBroadcast_ = Broadcasts.CompositeBroadcast.getDefaultInstance();
                this.suspend_ = Suspend_Res.getDefaultInstance();
                this.getThreads_ = GetThreads_Res.getDefaultInstance();
                this.getFrames_ = GetFrames_Res.getDefaultInstance();
                this.addBreakpoint_ = AddBreakpoint_Res.getDefaultInstance();
                this.removeBreakpoint_ = RemoveBreakpoint_Res.getDefaultInstance();
                this.stepInto_ = StepInto_Res.getDefaultInstance();
                this.stepOver_ = StepOver_Res.getDefaultInstance();
                this.stepOut_ = StepOut_Res.getDefaultInstance();
                this.evaluateExpression_ = EvaluateExpression_Res.getDefaultInstance();
                this.getValueChildren_ = GetValueChildren_Res.getDefaultInstance();
                this.getVars_ = GetVars_Res.getDefaultInstance();
                this.handleConsoleCommand_ = HandleConsoleCommand_Res.getDefaultInstance();
                this.handleCompletion_ = HandleCompletion_Res.getDefaultInstance();
                this.attach_ = Attach_Res.getDefaultInstance();
                this.attachByName_ = AttachByName_Res.getDefaultInstance();
                this.dispatchInput_ = DispatchInput_Res.getDefaultInstance();
                this.addWatchpoint_ = AddWatchpoint_Res.getDefaultInstance();
                this.removeWatchpoint_ = RemoveWatchpoint_Res.getDefaultInstance();
                this.detach_ = Detach_Res.getDefaultInstance();
                this.kill_ = Kill_Res.getDefaultInstance();
                this.getChildrenCount_ = GetChildrenCount_Res.getDefaultInstance();
                this.getArraySlice_ = GetArraySlice_Res.getDefaultInstance();
                this.getValueData_ = GetValueData_Res.getDefaultInstance();
                this.getValueDescription_ = GetValueDescription_Res.getDefaultInstance();
                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Res.getDefaultInstance();
                this.connectPlatform_ = ConnectPlatform_Res.getDefaultInstance();
                this.getValueAddress_ = GetValueAddress_Res.getDefaultInstance();
                this.handleSignal_ = HandleSignal_Res.getDefaultInstance();
                this.executeShellCommand_ = ExecuteShellCommand_Res.getDefaultInstance();
                this.y();
            }
            
            private Builder(final GeneratedMessage.BuilderParent builderParent) {
                super(builderParent);
                this.createTarget_ = CreateTarget_Res.getDefaultInstance();
                this.launch_ = Launch_Res.getDefaultInstance();
                this.continue_ = Continue_Res.getDefaultInstance();
                this.compositeBroadcast_ = Broadcasts.CompositeBroadcast.getDefaultInstance();
                this.suspend_ = Suspend_Res.getDefaultInstance();
                this.getThreads_ = GetThreads_Res.getDefaultInstance();
                this.getFrames_ = GetFrames_Res.getDefaultInstance();
                this.addBreakpoint_ = AddBreakpoint_Res.getDefaultInstance();
                this.removeBreakpoint_ = RemoveBreakpoint_Res.getDefaultInstance();
                this.stepInto_ = StepInto_Res.getDefaultInstance();
                this.stepOver_ = StepOver_Res.getDefaultInstance();
                this.stepOut_ = StepOut_Res.getDefaultInstance();
                this.evaluateExpression_ = EvaluateExpression_Res.getDefaultInstance();
                this.getValueChildren_ = GetValueChildren_Res.getDefaultInstance();
                this.getVars_ = GetVars_Res.getDefaultInstance();
                this.handleConsoleCommand_ = HandleConsoleCommand_Res.getDefaultInstance();
                this.handleCompletion_ = HandleCompletion_Res.getDefaultInstance();
                this.attach_ = Attach_Res.getDefaultInstance();
                this.attachByName_ = AttachByName_Res.getDefaultInstance();
                this.dispatchInput_ = DispatchInput_Res.getDefaultInstance();
                this.addWatchpoint_ = AddWatchpoint_Res.getDefaultInstance();
                this.removeWatchpoint_ = RemoveWatchpoint_Res.getDefaultInstance();
                this.detach_ = Detach_Res.getDefaultInstance();
                this.kill_ = Kill_Res.getDefaultInstance();
                this.getChildrenCount_ = GetChildrenCount_Res.getDefaultInstance();
                this.getArraySlice_ = GetArraySlice_Res.getDefaultInstance();
                this.getValueData_ = GetValueData_Res.getDefaultInstance();
                this.getValueDescription_ = GetValueDescription_Res.getDefaultInstance();
                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Res.getDefaultInstance();
                this.connectPlatform_ = ConnectPlatform_Res.getDefaultInstance();
                this.getValueAddress_ = GetValueAddress_Res.getDefaultInstance();
                this.handleSignal_ = HandleSignal_Res.getDefaultInstance();
                this.executeShellCommand_ = ExecuteShellCommand_Res.getDefaultInstance();
                this.y();
            }
            
            private void y() {
                try {
                    if (CompositeResponse.alwaysUseFieldBuilders) {
                        this.x();
                        this.r();
                        this.v();
                        this.B();
                        this.p();
                        this.C();
                        this.a();
                        this.I();
                        this.h();
                        this.k();
                        this.i();
                        this.F();
                        this.e();
                        this.q();
                        this.f();
                        this.H();
                        this.A();
                        this.G();
                        this.m();
                        this.n();
                        this.l();
                        this.b();
                        this.c();
                        this.g();
                        this.o();
                        this.d();
                        this.w();
                        this.s();
                        this.D();
                        this.E();
                        this.z();
                        this.u();
                        this.t();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
            }
            
            private static Builder j() {
                return new Builder();
            }
            
            public Builder clear() {
                Label_1322: {
                    Label_1282: {
                        Label_1242: {
                            Label_1202: {
                                Label_1162: {
                                    Label_1122: {
                                        Label_1082: {
                                            Label_1042: {
                                                Label_1002: {
                                                    Label_0962: {
                                                        Label_0922: {
                                                            Label_0882: {
                                                                Label_0842: {
                                                                    Label_0802: {
                                                                        Label_0762: {
                                                                            Label_0722: {
                                                                                Label_0682: {
                                                                                    Label_0642: {
                                                                                        Label_0601: {
                                                                                            Label_0560: {
                                                                                                Label_0519: {
                                                                                                    Label_0478: {
                                                                                                        Label_0437: {
                                                                                                            Label_0396: {
                                                                                                                Label_0355: {
                                                                                                                    Label_0314: {
                                                                                                                        Label_0274: {
                                                                                                                            Label_0234: {
                                                                                                                                Label_0194: {
                                                                                                                                    Label_0154: {
                                                                                                                                        Label_0114: {
                                                                                                                                            Label_0074: {
                                                                                                                                                Label_0034: {
                                                                                                                                                    try {
                                                                                                                                                        super.clear();
                                                                                                                                                        if (this.createTargetBuilder_ == null) {
                                                                                                                                                            this.createTarget_ = CreateTarget_Res.getDefaultInstance();
                                                                                                                                                            break Label_0034;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    catch (NullPointerException ex) {
                                                                                                                                                        throw b(ex);
                                                                                                                                                    }
                                                                                                                                                    this.createTargetBuilder_.clear();
                                                                                                                                                    try {
                                                                                                                                                        this.bitField0_ &= 0xFFFFFFFE;
                                                                                                                                                        if (this.launchBuilder_ == null) {
                                                                                                                                                            this.launch_ = Launch_Res.getDefaultInstance();
                                                                                                                                                            break Label_0074;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    catch (NullPointerException ex2) {
                                                                                                                                                        throw b(ex2);
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                this.launchBuilder_.clear();
                                                                                                                                                try {
                                                                                                                                                    this.bitField0_ &= 0xFFFFFFFD;
                                                                                                                                                    if (this.continueBuilder_ == null) {
                                                                                                                                                        this.continue_ = Continue_Res.getDefaultInstance();
                                                                                                                                                        break Label_0114;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                catch (NullPointerException ex3) {
                                                                                                                                                    throw b(ex3);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            this.continueBuilder_.clear();
                                                                                                                                            try {
                                                                                                                                                this.bitField0_ &= 0xFFFFFFFB;
                                                                                                                                                if (this.compositeBroadcastBuilder_ == null) {
                                                                                                                                                    this.compositeBroadcast_ = Broadcasts.CompositeBroadcast.getDefaultInstance();
                                                                                                                                                    break Label_0154;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            catch (NullPointerException ex4) {
                                                                                                                                                throw b(ex4);
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        this.compositeBroadcastBuilder_.clear();
                                                                                                                                        try {
                                                                                                                                            this.bitField0_ &= 0xFFFFFFF7;
                                                                                                                                            if (this.suspendBuilder_ == null) {
                                                                                                                                                this.suspend_ = Suspend_Res.getDefaultInstance();
                                                                                                                                                break Label_0194;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        catch (NullPointerException ex5) {
                                                                                                                                            throw b(ex5);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    this.suspendBuilder_.clear();
                                                                                                                                    try {
                                                                                                                                        this.bitField0_ &= 0xFFFFFFEF;
                                                                                                                                        if (this.getThreadsBuilder_ == null) {
                                                                                                                                            this.getThreads_ = GetThreads_Res.getDefaultInstance();
                                                                                                                                            break Label_0234;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    catch (NullPointerException ex6) {
                                                                                                                                        throw b(ex6);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                this.getThreadsBuilder_.clear();
                                                                                                                                try {
                                                                                                                                    this.bitField0_ &= 0xFFFFFFDF;
                                                                                                                                    if (this.getFramesBuilder_ == null) {
                                                                                                                                        this.getFrames_ = GetFrames_Res.getDefaultInstance();
                                                                                                                                        break Label_0274;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                catch (NullPointerException ex7) {
                                                                                                                                    throw b(ex7);
                                                                                                                                }
                                                                                                                            }
                                                                                                                            this.getFramesBuilder_.clear();
                                                                                                                            try {
                                                                                                                                this.bitField0_ &= 0xFFFFFFBF;
                                                                                                                                if (this.addBreakpointBuilder_ == null) {
                                                                                                                                    this.addBreakpoint_ = AddBreakpoint_Res.getDefaultInstance();
                                                                                                                                    break Label_0314;
                                                                                                                                }
                                                                                                                            }
                                                                                                                            catch (NullPointerException ex8) {
                                                                                                                                throw b(ex8);
                                                                                                                            }
                                                                                                                        }
                                                                                                                        this.addBreakpointBuilder_.clear();
                                                                                                                        try {
                                                                                                                            this.bitField0_ &= 0xFFFFFF7F;
                                                                                                                            if (this.removeBreakpointBuilder_ == null) {
                                                                                                                                this.removeBreakpoint_ = RemoveBreakpoint_Res.getDefaultInstance();
                                                                                                                                break Label_0355;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        catch (NullPointerException ex9) {
                                                                                                                            throw b(ex9);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    this.removeBreakpointBuilder_.clear();
                                                                                                                    try {
                                                                                                                        this.bitField0_ &= 0xFFFFFEFF;
                                                                                                                        if (this.stepIntoBuilder_ == null) {
                                                                                                                            this.stepInto_ = StepInto_Res.getDefaultInstance();
                                                                                                                            break Label_0396;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    catch (NullPointerException ex10) {
                                                                                                                        throw b(ex10);
                                                                                                                    }
                                                                                                                }
                                                                                                                this.stepIntoBuilder_.clear();
                                                                                                                try {
                                                                                                                    this.bitField0_ &= 0xFFFFFDFF;
                                                                                                                    if (this.stepOverBuilder_ == null) {
                                                                                                                        this.stepOver_ = StepOver_Res.getDefaultInstance();
                                                                                                                        break Label_0437;
                                                                                                                    }
                                                                                                                }
                                                                                                                catch (NullPointerException ex11) {
                                                                                                                    throw b(ex11);
                                                                                                                }
                                                                                                            }
                                                                                                            this.stepOverBuilder_.clear();
                                                                                                            try {
                                                                                                                this.bitField0_ &= 0xFFFFFBFF;
                                                                                                                if (this.stepOutBuilder_ == null) {
                                                                                                                    this.stepOut_ = StepOut_Res.getDefaultInstance();
                                                                                                                    break Label_0478;
                                                                                                                }
                                                                                                            }
                                                                                                            catch (NullPointerException ex12) {
                                                                                                                throw b(ex12);
                                                                                                            }
                                                                                                        }
                                                                                                        this.stepOutBuilder_.clear();
                                                                                                        try {
                                                                                                            this.bitField0_ &= 0xFFFFF7FF;
                                                                                                            if (this.evaluateExpressionBuilder_ == null) {
                                                                                                                this.evaluateExpression_ = EvaluateExpression_Res.getDefaultInstance();
                                                                                                                break Label_0519;
                                                                                                            }
                                                                                                        }
                                                                                                        catch (NullPointerException ex13) {
                                                                                                            throw b(ex13);
                                                                                                        }
                                                                                                    }
                                                                                                    this.evaluateExpressionBuilder_.clear();
                                                                                                    try {
                                                                                                        this.bitField0_ &= 0xFFFFEFFF;
                                                                                                        if (this.getValueChildrenBuilder_ == null) {
                                                                                                            this.getValueChildren_ = GetValueChildren_Res.getDefaultInstance();
                                                                                                            break Label_0560;
                                                                                                        }
                                                                                                    }
                                                                                                    catch (NullPointerException ex14) {
                                                                                                        throw b(ex14);
                                                                                                    }
                                                                                                }
                                                                                                this.getValueChildrenBuilder_.clear();
                                                                                                try {
                                                                                                    this.bitField0_ &= 0xFFFFDFFF;
                                                                                                    if (this.getVarsBuilder_ == null) {
                                                                                                        this.getVars_ = GetVars_Res.getDefaultInstance();
                                                                                                        break Label_0601;
                                                                                                    }
                                                                                                }
                                                                                                catch (NullPointerException ex15) {
                                                                                                    throw b(ex15);
                                                                                                }
                                                                                            }
                                                                                            this.getVarsBuilder_.clear();
                                                                                            try {
                                                                                                this.bitField0_ &= 0xFFFFBFFF;
                                                                                                if (this.handleConsoleCommandBuilder_ == null) {
                                                                                                    this.handleConsoleCommand_ = HandleConsoleCommand_Res.getDefaultInstance();
                                                                                                    break Label_0642;
                                                                                                }
                                                                                            }
                                                                                            catch (NullPointerException ex16) {
                                                                                                throw b(ex16);
                                                                                            }
                                                                                        }
                                                                                        this.handleConsoleCommandBuilder_.clear();
                                                                                        try {
                                                                                            this.bitField0_ &= 0xFFFF7FFF;
                                                                                            if (this.handleCompletionBuilder_ == null) {
                                                                                                this.handleCompletion_ = HandleCompletion_Res.getDefaultInstance();
                                                                                                break Label_0682;
                                                                                            }
                                                                                        }
                                                                                        catch (NullPointerException ex17) {
                                                                                            throw b(ex17);
                                                                                        }
                                                                                    }
                                                                                    this.handleCompletionBuilder_.clear();
                                                                                    try {
                                                                                        this.bitField0_ &= 0xFFFEFFFF;
                                                                                        if (this.attachBuilder_ == null) {
                                                                                            this.attach_ = Attach_Res.getDefaultInstance();
                                                                                            break Label_0722;
                                                                                        }
                                                                                    }
                                                                                    catch (NullPointerException ex18) {
                                                                                        throw b(ex18);
                                                                                    }
                                                                                }
                                                                                this.attachBuilder_.clear();
                                                                                try {
                                                                                    this.bitField0_ &= 0xFFFDFFFF;
                                                                                    if (this.attachByNameBuilder_ == null) {
                                                                                        this.attachByName_ = AttachByName_Res.getDefaultInstance();
                                                                                        break Label_0762;
                                                                                    }
                                                                                }
                                                                                catch (NullPointerException ex19) {
                                                                                    throw b(ex19);
                                                                                }
                                                                            }
                                                                            this.attachByNameBuilder_.clear();
                                                                            try {
                                                                                this.bitField0_ &= 0xFFFBFFFF;
                                                                                if (this.dispatchInputBuilder_ == null) {
                                                                                    this.dispatchInput_ = DispatchInput_Res.getDefaultInstance();
                                                                                    break Label_0802;
                                                                                }
                                                                            }
                                                                            catch (NullPointerException ex20) {
                                                                                throw b(ex20);
                                                                            }
                                                                        }
                                                                        this.dispatchInputBuilder_.clear();
                                                                        try {
                                                                            this.bitField0_ &= 0xFFF7FFFF;
                                                                            if (this.addWatchpointBuilder_ == null) {
                                                                                this.addWatchpoint_ = AddWatchpoint_Res.getDefaultInstance();
                                                                                break Label_0842;
                                                                            }
                                                                        }
                                                                        catch (NullPointerException ex21) {
                                                                            throw b(ex21);
                                                                        }
                                                                    }
                                                                    this.addWatchpointBuilder_.clear();
                                                                    try {
                                                                        this.bitField0_ &= 0xFFEFFFFF;
                                                                        if (this.removeWatchpointBuilder_ == null) {
                                                                            this.removeWatchpoint_ = RemoveWatchpoint_Res.getDefaultInstance();
                                                                            break Label_0882;
                                                                        }
                                                                    }
                                                                    catch (NullPointerException ex22) {
                                                                        throw b(ex22);
                                                                    }
                                                                }
                                                                this.removeWatchpointBuilder_.clear();
                                                                try {
                                                                    this.bitField0_ &= 0xFFDFFFFF;
                                                                    if (this.detachBuilder_ == null) {
                                                                        this.detach_ = Detach_Res.getDefaultInstance();
                                                                        break Label_0922;
                                                                    }
                                                                }
                                                                catch (NullPointerException ex23) {
                                                                    throw b(ex23);
                                                                }
                                                            }
                                                            this.detachBuilder_.clear();
                                                            try {
                                                                this.bitField0_ &= 0xFFBFFFFF;
                                                                if (this.killBuilder_ == null) {
                                                                    this.kill_ = Kill_Res.getDefaultInstance();
                                                                    break Label_0962;
                                                                }
                                                            }
                                                            catch (NullPointerException ex24) {
                                                                throw b(ex24);
                                                            }
                                                        }
                                                        this.killBuilder_.clear();
                                                        try {
                                                            this.bitField0_ &= 0xFF7FFFFF;
                                                            if (this.getChildrenCountBuilder_ == null) {
                                                                this.getChildrenCount_ = GetChildrenCount_Res.getDefaultInstance();
                                                                break Label_1002;
                                                            }
                                                        }
                                                        catch (NullPointerException ex25) {
                                                            throw b(ex25);
                                                        }
                                                    }
                                                    this.getChildrenCountBuilder_.clear();
                                                    try {
                                                        this.bitField0_ &= 0xFEFFFFFF;
                                                        if (this.getArraySliceBuilder_ == null) {
                                                            this.getArraySlice_ = GetArraySlice_Res.getDefaultInstance();
                                                            break Label_1042;
                                                        }
                                                    }
                                                    catch (NullPointerException ex26) {
                                                        throw b(ex26);
                                                    }
                                                }
                                                this.getArraySliceBuilder_.clear();
                                                try {
                                                    this.bitField0_ &= 0xFDFFFFFF;
                                                    if (this.getValueDataBuilder_ == null) {
                                                        this.getValueData_ = GetValueData_Res.getDefaultInstance();
                                                        break Label_1082;
                                                    }
                                                }
                                                catch (NullPointerException ex27) {
                                                    throw b(ex27);
                                                }
                                            }
                                            this.getValueDataBuilder_.clear();
                                            try {
                                                this.bitField0_ &= 0xFBFFFFFF;
                                                if (this.getValueDescriptionBuilder_ == null) {
                                                    this.getValueDescription_ = GetValueDescription_Res.getDefaultInstance();
                                                    break Label_1122;
                                                }
                                            }
                                            catch (NullPointerException ex28) {
                                                throw b(ex28);
                                            }
                                        }
                                        this.getValueDescriptionBuilder_.clear();
                                        try {
                                            this.bitField0_ &= 0xF7FFFFFF;
                                            if (this.valuesFilteringPolicyBuilder_ == null) {
                                                this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Res.getDefaultInstance();
                                                break Label_1162;
                                            }
                                        }
                                        catch (NullPointerException ex29) {
                                            throw b(ex29);
                                        }
                                    }
                                    this.valuesFilteringPolicyBuilder_.clear();
                                    try {
                                        this.bitField0_ &= 0xEFFFFFFF;
                                        if (this.connectPlatformBuilder_ == null) {
                                            this.connectPlatform_ = ConnectPlatform_Res.getDefaultInstance();
                                            break Label_1202;
                                        }
                                    }
                                    catch (NullPointerException ex30) {
                                        throw b(ex30);
                                    }
                                }
                                this.connectPlatformBuilder_.clear();
                                try {
                                    this.bitField0_ &= 0xDFFFFFFF;
                                    if (this.getValueAddressBuilder_ == null) {
                                        this.getValueAddress_ = GetValueAddress_Res.getDefaultInstance();
                                        break Label_1242;
                                    }
                                }
                                catch (NullPointerException ex31) {
                                    throw b(ex31);
                                }
                            }
                            this.getValueAddressBuilder_.clear();
                            try {
                                this.bitField0_ &= 0xBFFFFFFF;
                                if (this.handleSignalBuilder_ == null) {
                                    this.handleSignal_ = HandleSignal_Res.getDefaultInstance();
                                    break Label_1282;
                                }
                            }
                            catch (NullPointerException ex32) {
                                throw b(ex32);
                            }
                        }
                        this.handleSignalBuilder_.clear();
                        try {
                            this.bitField0_ &= Integer.MAX_VALUE;
                            if (this.executeShellCommandBuilder_ == null) {
                                this.executeShellCommand_ = ExecuteShellCommand_Res.getDefaultInstance();
                                break Label_1322;
                            }
                        }
                        catch (NullPointerException ex33) {
                            throw b(ex33);
                        }
                    }
                    this.executeShellCommandBuilder_.clear();
                }
                this.bitField1_ &= 0xFFFFFFFE;
                return this;
            }
            
            public Builder clone() {
                return j().mergeFrom(this.buildPartial());
            }
            
            public Descriptors.Descriptor getDescriptorForType() {
                return Protocol.internal_static_CompositeResponse_descriptor;
            }
            
            public CompositeResponse getDefaultInstanceForType() {
                return CompositeResponse.getDefaultInstance();
            }
            
            public CompositeResponse build() {
                final CompositeResponse buildPartial = this.buildPartial();
                try {
                    if (!buildPartial.isInitialized()) {
                        throw newUninitializedMessageException((Message)buildPartial);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return buildPartial;
            }
            
            public CompositeResponse buildPartial() {
                final CompositeResponse compositeResponse = new CompositeResponse((GeneratedMessage.Builder)this);
                final int bitField0_ = this.bitField0_;
                final int bitField1_ = this.bitField1_;
                int n = 0;
                int n2 = 0;
                if ((bitField0_ & 0x1) == 0x1) {
                    n |= 0x1;
                }
                Label_0077: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            compositeResponse.createTarget_ = this.createTarget_;
                            break Label_0077;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    compositeResponse.createTarget_ = (CreateTarget_Res)this.createTargetBuilder_.build();
                }
                if ((bitField0_ & 0x2) == 0x2) {
                    n |= 0x2;
                }
                Label_0128: {
                    try {
                        if (this.launchBuilder_ == null) {
                            compositeResponse.launch_ = this.launch_;
                            break Label_0128;
                        }
                    }
                    catch (NullPointerException ex2) {
                        throw b(ex2);
                    }
                    compositeResponse.launch_ = (Launch_Res)this.launchBuilder_.build();
                }
                if ((bitField0_ & 0x4) == 0x4) {
                    n |= 0x4;
                }
                Label_0179: {
                    try {
                        if (this.continueBuilder_ == null) {
                            compositeResponse.continue_ = this.continue_;
                            break Label_0179;
                        }
                    }
                    catch (NullPointerException ex3) {
                        throw b(ex3);
                    }
                    compositeResponse.continue_ = (Continue_Res)this.continueBuilder_.build();
                }
                if ((bitField0_ & 0x8) == 0x8) {
                    n |= 0x8;
                }
                Label_0233: {
                    try {
                        if (this.compositeBroadcastBuilder_ == null) {
                            compositeResponse.compositeBroadcast_ = this.compositeBroadcast_;
                            break Label_0233;
                        }
                    }
                    catch (NullPointerException ex4) {
                        throw b(ex4);
                    }
                    compositeResponse.compositeBroadcast_ = (Broadcasts.CompositeBroadcast)this.compositeBroadcastBuilder_.build();
                }
                if ((bitField0_ & 0x10) == 0x10) {
                    n |= 0x10;
                }
                Label_0287: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            compositeResponse.suspend_ = this.suspend_;
                            break Label_0287;
                        }
                    }
                    catch (NullPointerException ex5) {
                        throw b(ex5);
                    }
                    compositeResponse.suspend_ = (Suspend_Res)this.suspendBuilder_.build();
                }
                if ((bitField0_ & 0x20) == 0x20) {
                    n |= 0x20;
                }
                Label_0341: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            compositeResponse.getThreads_ = this.getThreads_;
                            break Label_0341;
                        }
                    }
                    catch (NullPointerException ex6) {
                        throw b(ex6);
                    }
                    compositeResponse.getThreads_ = (GetThreads_Res)this.getThreadsBuilder_.build();
                }
                if ((bitField0_ & 0x40) == 0x40) {
                    n |= 0x40;
                }
                Label_0395: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            compositeResponse.getFrames_ = this.getFrames_;
                            break Label_0395;
                        }
                    }
                    catch (NullPointerException ex7) {
                        throw b(ex7);
                    }
                    compositeResponse.getFrames_ = (GetFrames_Res)this.getFramesBuilder_.build();
                }
                if ((bitField0_ & 0x80) == 0x80) {
                    n |= 0x80;
                }
                Label_0452: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            compositeResponse.addBreakpoint_ = this.addBreakpoint_;
                            break Label_0452;
                        }
                    }
                    catch (NullPointerException ex8) {
                        throw b(ex8);
                    }
                    compositeResponse.addBreakpoint_ = (AddBreakpoint_Res)this.addBreakpointBuilder_.build();
                }
                if ((bitField0_ & 0x100) == 0x100) {
                    n |= 0x100;
                }
                Label_0509: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            compositeResponse.removeBreakpoint_ = this.removeBreakpoint_;
                            break Label_0509;
                        }
                    }
                    catch (NullPointerException ex9) {
                        throw b(ex9);
                    }
                    compositeResponse.removeBreakpoint_ = (RemoveBreakpoint_Res)this.removeBreakpointBuilder_.build();
                }
                if ((bitField0_ & 0x200) == 0x200) {
                    n |= 0x200;
                }
                Label_0566: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            compositeResponse.stepInto_ = this.stepInto_;
                            break Label_0566;
                        }
                    }
                    catch (NullPointerException ex10) {
                        throw b(ex10);
                    }
                    compositeResponse.stepInto_ = (StepInto_Res)this.stepIntoBuilder_.build();
                }
                if ((bitField0_ & 0x400) == 0x400) {
                    n |= 0x400;
                }
                Label_0623: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            compositeResponse.stepOver_ = this.stepOver_;
                            break Label_0623;
                        }
                    }
                    catch (NullPointerException ex11) {
                        throw b(ex11);
                    }
                    compositeResponse.stepOver_ = (StepOver_Res)this.stepOverBuilder_.build();
                }
                if ((bitField0_ & 0x800) == 0x800) {
                    n |= 0x800;
                }
                Label_0680: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            compositeResponse.stepOut_ = this.stepOut_;
                            break Label_0680;
                        }
                    }
                    catch (NullPointerException ex12) {
                        throw b(ex12);
                    }
                    compositeResponse.stepOut_ = (StepOut_Res)this.stepOutBuilder_.build();
                }
                if ((bitField0_ & 0x1000) == 0x1000) {
                    n |= 0x1000;
                }
                Label_0737: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            compositeResponse.evaluateExpression_ = this.evaluateExpression_;
                            break Label_0737;
                        }
                    }
                    catch (NullPointerException ex13) {
                        throw b(ex13);
                    }
                    compositeResponse.evaluateExpression_ = (EvaluateExpression_Res)this.evaluateExpressionBuilder_.build();
                }
                if ((bitField0_ & 0x2000) == 0x2000) {
                    n |= 0x2000;
                }
                Label_0794: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            compositeResponse.getValueChildren_ = this.getValueChildren_;
                            break Label_0794;
                        }
                    }
                    catch (NullPointerException ex14) {
                        throw b(ex14);
                    }
                    compositeResponse.getValueChildren_ = (GetValueChildren_Res)this.getValueChildrenBuilder_.build();
                }
                if ((bitField0_ & 0x4000) == 0x4000) {
                    n |= 0x4000;
                }
                Label_0851: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            compositeResponse.getVars_ = this.getVars_;
                            break Label_0851;
                        }
                    }
                    catch (NullPointerException ex15) {
                        throw b(ex15);
                    }
                    compositeResponse.getVars_ = (GetVars_Res)this.getVarsBuilder_.build();
                }
                if ((bitField0_ & 0x8000) == 0x8000) {
                    n |= 0x8000;
                }
                Label_0905: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            compositeResponse.handleConsoleCommand_ = this.handleConsoleCommand_;
                            break Label_0905;
                        }
                    }
                    catch (NullPointerException ex16) {
                        throw b(ex16);
                    }
                    compositeResponse.handleConsoleCommand_ = (HandleConsoleCommand_Res)this.handleConsoleCommandBuilder_.build();
                }
                if ((bitField0_ & 0x10000) == 0x10000) {
                    n |= 0x10000;
                }
                Label_0959: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            compositeResponse.handleCompletion_ = this.handleCompletion_;
                            break Label_0959;
                        }
                    }
                    catch (NullPointerException ex17) {
                        throw b(ex17);
                    }
                    compositeResponse.handleCompletion_ = (HandleCompletion_Res)this.handleCompletionBuilder_.build();
                }
                if ((bitField0_ & 0x20000) == 0x20000) {
                    n |= 0x20000;
                }
                Label_1013: {
                    try {
                        if (this.attachBuilder_ == null) {
                            compositeResponse.attach_ = this.attach_;
                            break Label_1013;
                        }
                    }
                    catch (NullPointerException ex18) {
                        throw b(ex18);
                    }
                    compositeResponse.attach_ = (Attach_Res)this.attachBuilder_.build();
                }
                if ((bitField0_ & 0x40000) == 0x40000) {
                    n |= 0x40000;
                }
                Label_1067: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            compositeResponse.attachByName_ = this.attachByName_;
                            break Label_1067;
                        }
                    }
                    catch (NullPointerException ex19) {
                        throw b(ex19);
                    }
                    compositeResponse.attachByName_ = (AttachByName_Res)this.attachByNameBuilder_.build();
                }
                if ((bitField0_ & 0x80000) == 0x80000) {
                    n |= 0x80000;
                }
                Label_1121: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            compositeResponse.dispatchInput_ = this.dispatchInput_;
                            break Label_1121;
                        }
                    }
                    catch (NullPointerException ex20) {
                        throw b(ex20);
                    }
                    compositeResponse.dispatchInput_ = (DispatchInput_Res)this.dispatchInputBuilder_.build();
                }
                if ((bitField0_ & 0x100000) == 0x100000) {
                    n |= 0x100000;
                }
                Label_1175: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            compositeResponse.addWatchpoint_ = this.addWatchpoint_;
                            break Label_1175;
                        }
                    }
                    catch (NullPointerException ex21) {
                        throw b(ex21);
                    }
                    compositeResponse.addWatchpoint_ = (AddWatchpoint_Res)this.addWatchpointBuilder_.build();
                }
                if ((bitField0_ & 0x200000) == 0x200000) {
                    n |= 0x200000;
                }
                Label_1229: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            compositeResponse.removeWatchpoint_ = this.removeWatchpoint_;
                            break Label_1229;
                        }
                    }
                    catch (NullPointerException ex22) {
                        throw b(ex22);
                    }
                    compositeResponse.removeWatchpoint_ = (RemoveWatchpoint_Res)this.removeWatchpointBuilder_.build();
                }
                if ((bitField0_ & 0x400000) == 0x400000) {
                    n |= 0x400000;
                }
                Label_1283: {
                    try {
                        if (this.detachBuilder_ == null) {
                            compositeResponse.detach_ = this.detach_;
                            break Label_1283;
                        }
                    }
                    catch (NullPointerException ex23) {
                        throw b(ex23);
                    }
                    compositeResponse.detach_ = (Detach_Res)this.detachBuilder_.build();
                }
                if ((bitField0_ & 0x800000) == 0x800000) {
                    n |= 0x800000;
                }
                Label_1337: {
                    try {
                        if (this.killBuilder_ == null) {
                            compositeResponse.kill_ = this.kill_;
                            break Label_1337;
                        }
                    }
                    catch (NullPointerException ex24) {
                        throw b(ex24);
                    }
                    compositeResponse.kill_ = (Kill_Res)this.killBuilder_.build();
                }
                if ((bitField0_ & 0x1000000) == 0x1000000) {
                    n |= 0x1000000;
                }
                Label_1391: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            compositeResponse.getChildrenCount_ = this.getChildrenCount_;
                            break Label_1391;
                        }
                    }
                    catch (NullPointerException ex25) {
                        throw b(ex25);
                    }
                    compositeResponse.getChildrenCount_ = (GetChildrenCount_Res)this.getChildrenCountBuilder_.build();
                }
                if ((bitField0_ & 0x2000000) == 0x2000000) {
                    n |= 0x2000000;
                }
                Label_1445: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            compositeResponse.getArraySlice_ = this.getArraySlice_;
                            break Label_1445;
                        }
                    }
                    catch (NullPointerException ex26) {
                        throw b(ex26);
                    }
                    compositeResponse.getArraySlice_ = (GetArraySlice_Res)this.getArraySliceBuilder_.build();
                }
                if ((bitField0_ & 0x4000000) == 0x4000000) {
                    n |= 0x4000000;
                }
                Label_1499: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            compositeResponse.getValueData_ = this.getValueData_;
                            break Label_1499;
                        }
                    }
                    catch (NullPointerException ex27) {
                        throw b(ex27);
                    }
                    compositeResponse.getValueData_ = (GetValueData_Res)this.getValueDataBuilder_.build();
                }
                if ((bitField0_ & 0x8000000) == 0x8000000) {
                    n |= 0x8000000;
                }
                Label_1553: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            compositeResponse.getValueDescription_ = this.getValueDescription_;
                            break Label_1553;
                        }
                    }
                    catch (NullPointerException ex28) {
                        throw b(ex28);
                    }
                    compositeResponse.getValueDescription_ = (GetValueDescription_Res)this.getValueDescriptionBuilder_.build();
                }
                if ((bitField0_ & 0x10000000) == 0x10000000) {
                    n |= 0x10000000;
                }
                Label_1607: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            compositeResponse.valuesFilteringPolicy_ = this.valuesFilteringPolicy_;
                            break Label_1607;
                        }
                    }
                    catch (NullPointerException ex29) {
                        throw b(ex29);
                    }
                    compositeResponse.valuesFilteringPolicy_ = (ValuesFilteringPolicy_Res)this.valuesFilteringPolicyBuilder_.build();
                }
                if ((bitField0_ & 0x20000000) == 0x20000000) {
                    n |= 0x20000000;
                }
                Label_1661: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            compositeResponse.connectPlatform_ = this.connectPlatform_;
                            break Label_1661;
                        }
                    }
                    catch (NullPointerException ex30) {
                        throw b(ex30);
                    }
                    compositeResponse.connectPlatform_ = (ConnectPlatform_Res)this.connectPlatformBuilder_.build();
                }
                if ((bitField0_ & 0x40000000) == 0x40000000) {
                    n |= 0x40000000;
                }
                Label_1715: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            compositeResponse.getValueAddress_ = this.getValueAddress_;
                            break Label_1715;
                        }
                    }
                    catch (NullPointerException ex31) {
                        throw b(ex31);
                    }
                    compositeResponse.getValueAddress_ = (GetValueAddress_Res)this.getValueAddressBuilder_.build();
                }
                if ((bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                    n |= Integer.MIN_VALUE;
                }
                Label_1769: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            compositeResponse.handleSignal_ = this.handleSignal_;
                            break Label_1769;
                        }
                    }
                    catch (NullPointerException ex32) {
                        throw b(ex32);
                    }
                    compositeResponse.handleSignal_ = (HandleSignal_Res)this.handleSignalBuilder_.build();
                }
                if ((bitField1_ & 0x1) == 0x1) {
                    n2 |= 0x1;
                }
                Label_1820: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            compositeResponse.executeShellCommand_ = this.executeShellCommand_;
                            break Label_1820;
                        }
                    }
                    catch (NullPointerException ex33) {
                        throw b(ex33);
                    }
                    compositeResponse.executeShellCommand_ = (ExecuteShellCommand_Res)this.executeShellCommandBuilder_.build();
                }
                compositeResponse.bitField0_ = n;
                compositeResponse.bitField1_ = n2;
                this.onBuilt();
                return compositeResponse;
            }
            
            public Builder mergeFrom(final Message message) {
                try {
                    if (message instanceof CompositeResponse) {
                        return this.mergeFrom((CompositeResponse)message);
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                super.mergeFrom(message);
                return this;
            }
            
            public Builder mergeFrom(final CompositeResponse compositeResponse) {
                try {
                    if (compositeResponse == CompositeResponse.getDefaultInstance()) {
                        return this;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                try {
                    if (compositeResponse.hasCreateTarget()) {
                        this.mergeCreateTarget(compositeResponse.getCreateTarget());
                    }
                }
                catch (NullPointerException ex2) {
                    throw b(ex2);
                }
                try {
                    if (compositeResponse.hasLaunch()) {
                        this.mergeLaunch(compositeResponse.getLaunch());
                    }
                }
                catch (NullPointerException ex3) {
                    throw b(ex3);
                }
                try {
                    if (compositeResponse.hasContinue()) {
                        this.mergeContinue(compositeResponse.getContinue());
                    }
                }
                catch (NullPointerException ex4) {
                    throw b(ex4);
                }
                try {
                    if (compositeResponse.hasCompositeBroadcast()) {
                        this.mergeCompositeBroadcast(compositeResponse.getCompositeBroadcast());
                    }
                }
                catch (NullPointerException ex5) {
                    throw b(ex5);
                }
                try {
                    if (compositeResponse.hasSuspend()) {
                        this.mergeSuspend(compositeResponse.getSuspend());
                    }
                }
                catch (NullPointerException ex6) {
                    throw b(ex6);
                }
                try {
                    if (compositeResponse.hasGetThreads()) {
                        this.mergeGetThreads(compositeResponse.getGetThreads());
                    }
                }
                catch (NullPointerException ex7) {
                    throw b(ex7);
                }
                try {
                    if (compositeResponse.hasGetFrames()) {
                        this.mergeGetFrames(compositeResponse.getGetFrames());
                    }
                }
                catch (NullPointerException ex8) {
                    throw b(ex8);
                }
                try {
                    if (compositeResponse.hasAddBreakpoint()) {
                        this.mergeAddBreakpoint(compositeResponse.getAddBreakpoint());
                    }
                }
                catch (NullPointerException ex9) {
                    throw b(ex9);
                }
                try {
                    if (compositeResponse.hasRemoveBreakpoint()) {
                        this.mergeRemoveBreakpoint(compositeResponse.getRemoveBreakpoint());
                    }
                }
                catch (NullPointerException ex10) {
                    throw b(ex10);
                }
                try {
                    if (compositeResponse.hasStepInto()) {
                        this.mergeStepInto(compositeResponse.getStepInto());
                    }
                }
                catch (NullPointerException ex11) {
                    throw b(ex11);
                }
                try {
                    if (compositeResponse.hasStepOver()) {
                        this.mergeStepOver(compositeResponse.getStepOver());
                    }
                }
                catch (NullPointerException ex12) {
                    throw b(ex12);
                }
                try {
                    if (compositeResponse.hasStepOut()) {
                        this.mergeStepOut(compositeResponse.getStepOut());
                    }
                }
                catch (NullPointerException ex13) {
                    throw b(ex13);
                }
                try {
                    if (compositeResponse.hasEvaluateExpression()) {
                        this.mergeEvaluateExpression(compositeResponse.getEvaluateExpression());
                    }
                }
                catch (NullPointerException ex14) {
                    throw b(ex14);
                }
                try {
                    if (compositeResponse.hasGetValueChildren()) {
                        this.mergeGetValueChildren(compositeResponse.getGetValueChildren());
                    }
                }
                catch (NullPointerException ex15) {
                    throw b(ex15);
                }
                try {
                    if (compositeResponse.hasGetVars()) {
                        this.mergeGetVars(compositeResponse.getGetVars());
                    }
                }
                catch (NullPointerException ex16) {
                    throw b(ex16);
                }
                try {
                    if (compositeResponse.hasHandleConsoleCommand()) {
                        this.mergeHandleConsoleCommand(compositeResponse.getHandleConsoleCommand());
                    }
                }
                catch (NullPointerException ex17) {
                    throw b(ex17);
                }
                try {
                    if (compositeResponse.hasHandleCompletion()) {
                        this.mergeHandleCompletion(compositeResponse.getHandleCompletion());
                    }
                }
                catch (NullPointerException ex18) {
                    throw b(ex18);
                }
                try {
                    if (compositeResponse.hasAttach()) {
                        this.mergeAttach(compositeResponse.getAttach());
                    }
                }
                catch (NullPointerException ex19) {
                    throw b(ex19);
                }
                try {
                    if (compositeResponse.hasAttachByName()) {
                        this.mergeAttachByName(compositeResponse.getAttachByName());
                    }
                }
                catch (NullPointerException ex20) {
                    throw b(ex20);
                }
                try {
                    if (compositeResponse.hasDispatchInput()) {
                        this.mergeDispatchInput(compositeResponse.getDispatchInput());
                    }
                }
                catch (NullPointerException ex21) {
                    throw b(ex21);
                }
                try {
                    if (compositeResponse.hasAddWatchpoint()) {
                        this.mergeAddWatchpoint(compositeResponse.getAddWatchpoint());
                    }
                }
                catch (NullPointerException ex22) {
                    throw b(ex22);
                }
                try {
                    if (compositeResponse.hasRemoveWatchpoint()) {
                        this.mergeRemoveWatchpoint(compositeResponse.getRemoveWatchpoint());
                    }
                }
                catch (NullPointerException ex23) {
                    throw b(ex23);
                }
                try {
                    if (compositeResponse.hasDetach()) {
                        this.mergeDetach(compositeResponse.getDetach());
                    }
                }
                catch (NullPointerException ex24) {
                    throw b(ex24);
                }
                try {
                    if (compositeResponse.hasKill()) {
                        this.mergeKill(compositeResponse.getKill());
                    }
                }
                catch (NullPointerException ex25) {
                    throw b(ex25);
                }
                try {
                    if (compositeResponse.hasGetChildrenCount()) {
                        this.mergeGetChildrenCount(compositeResponse.getGetChildrenCount());
                    }
                }
                catch (NullPointerException ex26) {
                    throw b(ex26);
                }
                try {
                    if (compositeResponse.hasGetArraySlice()) {
                        this.mergeGetArraySlice(compositeResponse.getGetArraySlice());
                    }
                }
                catch (NullPointerException ex27) {
                    throw b(ex27);
                }
                try {
                    if (compositeResponse.hasGetValueData()) {
                        this.mergeGetValueData(compositeResponse.getGetValueData());
                    }
                }
                catch (NullPointerException ex28) {
                    throw b(ex28);
                }
                try {
                    if (compositeResponse.hasGetValueDescription()) {
                        this.mergeGetValueDescription(compositeResponse.getGetValueDescription());
                    }
                }
                catch (NullPointerException ex29) {
                    throw b(ex29);
                }
                try {
                    if (compositeResponse.hasValuesFilteringPolicy()) {
                        this.mergeValuesFilteringPolicy(compositeResponse.getValuesFilteringPolicy());
                    }
                }
                catch (NullPointerException ex30) {
                    throw b(ex30);
                }
                try {
                    if (compositeResponse.hasConnectPlatform()) {
                        this.mergeConnectPlatform(compositeResponse.getConnectPlatform());
                    }
                }
                catch (NullPointerException ex31) {
                    throw b(ex31);
                }
                try {
                    if (compositeResponse.hasGetValueAddress()) {
                        this.mergeGetValueAddress(compositeResponse.getGetValueAddress());
                    }
                }
                catch (NullPointerException ex32) {
                    throw b(ex32);
                }
                try {
                    if (compositeResponse.hasHandleSignal()) {
                        this.mergeHandleSignal(compositeResponse.getHandleSignal());
                    }
                }
                catch (NullPointerException ex33) {
                    throw b(ex33);
                }
                try {
                    if (compositeResponse.hasExecuteShellCommand()) {
                        this.mergeExecuteShellCommand(compositeResponse.getExecuteShellCommand());
                    }
                }
                catch (NullPointerException ex34) {
                    throw b(ex34);
                }
                this.mergeUnknownFields(compositeResponse.getUnknownFields());
                return this;
            }
            
            public final boolean isInitialized() {
                Label_0960: {
                    Label_0930: {
                        Label_0900: {
                            Label_0870: {
                                Label_0840: {
                                    Label_0810: {
                                        Label_0780: {
                                            Label_0750: {
                                                Label_0720: {
                                                    Label_0690: {
                                                        Label_0660: {
                                                            Label_0630: {
                                                                Label_0600: {
                                                                    Label_0570: {
                                                                        Label_0540: {
                                                                            Label_0510: {
                                                                                Label_0480: {
                                                                                    Label_0450: {
                                                                                        Label_0420: {
                                                                                            Label_0390: {
                                                                                                Label_0360: {
                                                                                                    Label_0330: {
                                                                                                        Label_0300: {
                                                                                                            Label_0270: {
                                                                                                                Label_0240: {
                                                                                                                    Label_0210: {
                                                                                                                        Label_0180: {
                                                                                                                            Label_0150: {
                                                                                                                                Label_0120: {
                                                                                                                                    Label_0090: {
                                                                                                                                        Label_0060: {
                                                                                                                                            Label_0030: {
                                                                                                                                                try {
                                                                                                                                                    if (!this.hasCreateTarget()) {
                                                                                                                                                        break Label_0030;
                                                                                                                                                    }
                                                                                                                                                    final Builder builder = this;
                                                                                                                                                    final CreateTarget_Res createTarget_Res = builder.getCreateTarget();
                                                                                                                                                    final boolean b = createTarget_Res.isInitialized();
                                                                                                                                                    if (!b) {
                                                                                                                                                        return false;
                                                                                                                                                    }
                                                                                                                                                    break Label_0030;
                                                                                                                                                }
                                                                                                                                                catch (NullPointerException ex) {
                                                                                                                                                    throw b(ex);
                                                                                                                                                }
                                                                                                                                                try {
                                                                                                                                                    final Builder builder = this;
                                                                                                                                                    final CreateTarget_Res createTarget_Res = builder.getCreateTarget();
                                                                                                                                                    final boolean b = createTarget_Res.isInitialized();
                                                                                                                                                    if (!b) {
                                                                                                                                                        return false;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                catch (NullPointerException ex2) {
                                                                                                                                                    throw b(ex2);
                                                                                                                                                }
                                                                                                                                                try {
                                                                                                                                                    if (!this.hasLaunch()) {
                                                                                                                                                        break Label_0060;
                                                                                                                                                    }
                                                                                                                                                    final Builder builder2 = this;
                                                                                                                                                    final Launch_Res launch_Res = builder2.getLaunch();
                                                                                                                                                    final boolean b2 = launch_Res.isInitialized();
                                                                                                                                                    if (!b2) {
                                                                                                                                                        return false;
                                                                                                                                                    }
                                                                                                                                                    break Label_0060;
                                                                                                                                                }
                                                                                                                                                catch (NullPointerException ex3) {
                                                                                                                                                    throw b(ex3);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            try {
                                                                                                                                                final Builder builder2 = this;
                                                                                                                                                final Launch_Res launch_Res = builder2.getLaunch();
                                                                                                                                                final boolean b2 = launch_Res.isInitialized();
                                                                                                                                                if (!b2) {
                                                                                                                                                    return false;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            catch (NullPointerException ex4) {
                                                                                                                                                throw b(ex4);
                                                                                                                                            }
                                                                                                                                            try {
                                                                                                                                                if (!this.hasContinue()) {
                                                                                                                                                    break Label_0090;
                                                                                                                                                }
                                                                                                                                                final Builder builder3 = this;
                                                                                                                                                final Continue_Res continue_Res = builder3.getContinue();
                                                                                                                                                final boolean b3 = continue_Res.isInitialized();
                                                                                                                                                if (!b3) {
                                                                                                                                                    return false;
                                                                                                                                                }
                                                                                                                                                break Label_0090;
                                                                                                                                            }
                                                                                                                                            catch (NullPointerException ex5) {
                                                                                                                                                throw b(ex5);
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        try {
                                                                                                                                            final Builder builder3 = this;
                                                                                                                                            final Continue_Res continue_Res = builder3.getContinue();
                                                                                                                                            final boolean b3 = continue_Res.isInitialized();
                                                                                                                                            if (!b3) {
                                                                                                                                                return false;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        catch (NullPointerException ex6) {
                                                                                                                                            throw b(ex6);
                                                                                                                                        }
                                                                                                                                        try {
                                                                                                                                            if (!this.hasCompositeBroadcast()) {
                                                                                                                                                break Label_0120;
                                                                                                                                            }
                                                                                                                                            final Builder builder4 = this;
                                                                                                                                            final Broadcasts.CompositeBroadcast compositeBroadcast = builder4.getCompositeBroadcast();
                                                                                                                                            final boolean b4 = compositeBroadcast.isInitialized();
                                                                                                                                            if (!b4) {
                                                                                                                                                return false;
                                                                                                                                            }
                                                                                                                                            break Label_0120;
                                                                                                                                        }
                                                                                                                                        catch (NullPointerException ex7) {
                                                                                                                                            throw b(ex7);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    try {
                                                                                                                                        final Builder builder4 = this;
                                                                                                                                        final Broadcasts.CompositeBroadcast compositeBroadcast = builder4.getCompositeBroadcast();
                                                                                                                                        final boolean b4 = compositeBroadcast.isInitialized();
                                                                                                                                        if (!b4) {
                                                                                                                                            return false;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    catch (NullPointerException ex8) {
                                                                                                                                        throw b(ex8);
                                                                                                                                    }
                                                                                                                                    try {
                                                                                                                                        if (!this.hasSuspend()) {
                                                                                                                                            break Label_0150;
                                                                                                                                        }
                                                                                                                                        final Builder builder5 = this;
                                                                                                                                        final Suspend_Res suspend_Res = builder5.getSuspend();
                                                                                                                                        final boolean b5 = suspend_Res.isInitialized();
                                                                                                                                        if (!b5) {
                                                                                                                                            return false;
                                                                                                                                        }
                                                                                                                                        break Label_0150;
                                                                                                                                    }
                                                                                                                                    catch (NullPointerException ex9) {
                                                                                                                                        throw b(ex9);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                try {
                                                                                                                                    final Builder builder5 = this;
                                                                                                                                    final Suspend_Res suspend_Res = builder5.getSuspend();
                                                                                                                                    final boolean b5 = suspend_Res.isInitialized();
                                                                                                                                    if (!b5) {
                                                                                                                                        return false;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                catch (NullPointerException ex10) {
                                                                                                                                    throw b(ex10);
                                                                                                                                }
                                                                                                                                try {
                                                                                                                                    if (!this.hasGetThreads()) {
                                                                                                                                        break Label_0180;
                                                                                                                                    }
                                                                                                                                    final Builder builder6 = this;
                                                                                                                                    final GetThreads_Res getThreads_Res = builder6.getGetThreads();
                                                                                                                                    final boolean b6 = getThreads_Res.isInitialized();
                                                                                                                                    if (!b6) {
                                                                                                                                        return false;
                                                                                                                                    }
                                                                                                                                    break Label_0180;
                                                                                                                                }
                                                                                                                                catch (NullPointerException ex11) {
                                                                                                                                    throw b(ex11);
                                                                                                                                }
                                                                                                                            }
                                                                                                                            try {
                                                                                                                                final Builder builder6 = this;
                                                                                                                                final GetThreads_Res getThreads_Res = builder6.getGetThreads();
                                                                                                                                final boolean b6 = getThreads_Res.isInitialized();
                                                                                                                                if (!b6) {
                                                                                                                                    return false;
                                                                                                                                }
                                                                                                                            }
                                                                                                                            catch (NullPointerException ex12) {
                                                                                                                                throw b(ex12);
                                                                                                                            }
                                                                                                                            try {
                                                                                                                                if (!this.hasGetFrames()) {
                                                                                                                                    break Label_0210;
                                                                                                                                }
                                                                                                                                final Builder builder7 = this;
                                                                                                                                final GetFrames_Res getFrames_Res = builder7.getGetFrames();
                                                                                                                                final boolean b7 = getFrames_Res.isInitialized();
                                                                                                                                if (!b7) {
                                                                                                                                    return false;
                                                                                                                                }
                                                                                                                                break Label_0210;
                                                                                                                            }
                                                                                                                            catch (NullPointerException ex13) {
                                                                                                                                throw b(ex13);
                                                                                                                            }
                                                                                                                        }
                                                                                                                        try {
                                                                                                                            final Builder builder7 = this;
                                                                                                                            final GetFrames_Res getFrames_Res = builder7.getGetFrames();
                                                                                                                            final boolean b7 = getFrames_Res.isInitialized();
                                                                                                                            if (!b7) {
                                                                                                                                return false;
                                                                                                                            }
                                                                                                                        }
                                                                                                                        catch (NullPointerException ex14) {
                                                                                                                            throw b(ex14);
                                                                                                                        }
                                                                                                                        try {
                                                                                                                            if (!this.hasAddBreakpoint()) {
                                                                                                                                break Label_0240;
                                                                                                                            }
                                                                                                                            final Builder builder8 = this;
                                                                                                                            final AddBreakpoint_Res addBreakpoint_Res = builder8.getAddBreakpoint();
                                                                                                                            final boolean b8 = addBreakpoint_Res.isInitialized();
                                                                                                                            if (!b8) {
                                                                                                                                return false;
                                                                                                                            }
                                                                                                                            break Label_0240;
                                                                                                                        }
                                                                                                                        catch (NullPointerException ex15) {
                                                                                                                            throw b(ex15);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    try {
                                                                                                                        final Builder builder8 = this;
                                                                                                                        final AddBreakpoint_Res addBreakpoint_Res = builder8.getAddBreakpoint();
                                                                                                                        final boolean b8 = addBreakpoint_Res.isInitialized();
                                                                                                                        if (!b8) {
                                                                                                                            return false;
                                                                                                                        }
                                                                                                                    }
                                                                                                                    catch (NullPointerException ex16) {
                                                                                                                        throw b(ex16);
                                                                                                                    }
                                                                                                                    try {
                                                                                                                        if (!this.hasRemoveBreakpoint()) {
                                                                                                                            break Label_0270;
                                                                                                                        }
                                                                                                                        final Builder builder9 = this;
                                                                                                                        final RemoveBreakpoint_Res removeBreakpoint_Res = builder9.getRemoveBreakpoint();
                                                                                                                        final boolean b9 = removeBreakpoint_Res.isInitialized();
                                                                                                                        if (!b9) {
                                                                                                                            return false;
                                                                                                                        }
                                                                                                                        break Label_0270;
                                                                                                                    }
                                                                                                                    catch (NullPointerException ex17) {
                                                                                                                        throw b(ex17);
                                                                                                                    }
                                                                                                                }
                                                                                                                try {
                                                                                                                    final Builder builder9 = this;
                                                                                                                    final RemoveBreakpoint_Res removeBreakpoint_Res = builder9.getRemoveBreakpoint();
                                                                                                                    final boolean b9 = removeBreakpoint_Res.isInitialized();
                                                                                                                    if (!b9) {
                                                                                                                        return false;
                                                                                                                    }
                                                                                                                }
                                                                                                                catch (NullPointerException ex18) {
                                                                                                                    throw b(ex18);
                                                                                                                }
                                                                                                                try {
                                                                                                                    if (!this.hasStepInto()) {
                                                                                                                        break Label_0300;
                                                                                                                    }
                                                                                                                    final Builder builder10 = this;
                                                                                                                    final StepInto_Res stepInto_Res = builder10.getStepInto();
                                                                                                                    final boolean b10 = stepInto_Res.isInitialized();
                                                                                                                    if (!b10) {
                                                                                                                        return false;
                                                                                                                    }
                                                                                                                    break Label_0300;
                                                                                                                }
                                                                                                                catch (NullPointerException ex19) {
                                                                                                                    throw b(ex19);
                                                                                                                }
                                                                                                            }
                                                                                                            try {
                                                                                                                final Builder builder10 = this;
                                                                                                                final StepInto_Res stepInto_Res = builder10.getStepInto();
                                                                                                                final boolean b10 = stepInto_Res.isInitialized();
                                                                                                                if (!b10) {
                                                                                                                    return false;
                                                                                                                }
                                                                                                            }
                                                                                                            catch (NullPointerException ex20) {
                                                                                                                throw b(ex20);
                                                                                                            }
                                                                                                            try {
                                                                                                                if (!this.hasStepOver()) {
                                                                                                                    break Label_0330;
                                                                                                                }
                                                                                                                final Builder builder11 = this;
                                                                                                                final StepOver_Res stepOver_Res = builder11.getStepOver();
                                                                                                                final boolean b11 = stepOver_Res.isInitialized();
                                                                                                                if (!b11) {
                                                                                                                    return false;
                                                                                                                }
                                                                                                                break Label_0330;
                                                                                                            }
                                                                                                            catch (NullPointerException ex21) {
                                                                                                                throw b(ex21);
                                                                                                            }
                                                                                                        }
                                                                                                        try {
                                                                                                            final Builder builder11 = this;
                                                                                                            final StepOver_Res stepOver_Res = builder11.getStepOver();
                                                                                                            final boolean b11 = stepOver_Res.isInitialized();
                                                                                                            if (!b11) {
                                                                                                                return false;
                                                                                                            }
                                                                                                        }
                                                                                                        catch (NullPointerException ex22) {
                                                                                                            throw b(ex22);
                                                                                                        }
                                                                                                        try {
                                                                                                            if (!this.hasStepOut()) {
                                                                                                                break Label_0360;
                                                                                                            }
                                                                                                            final Builder builder12 = this;
                                                                                                            final StepOut_Res stepOut_Res = builder12.getStepOut();
                                                                                                            final boolean b12 = stepOut_Res.isInitialized();
                                                                                                            if (!b12) {
                                                                                                                return false;
                                                                                                            }
                                                                                                            break Label_0360;
                                                                                                        }
                                                                                                        catch (NullPointerException ex23) {
                                                                                                            throw b(ex23);
                                                                                                        }
                                                                                                    }
                                                                                                    try {
                                                                                                        final Builder builder12 = this;
                                                                                                        final StepOut_Res stepOut_Res = builder12.getStepOut();
                                                                                                        final boolean b12 = stepOut_Res.isInitialized();
                                                                                                        if (!b12) {
                                                                                                            return false;
                                                                                                        }
                                                                                                    }
                                                                                                    catch (NullPointerException ex24) {
                                                                                                        throw b(ex24);
                                                                                                    }
                                                                                                    try {
                                                                                                        if (!this.hasEvaluateExpression()) {
                                                                                                            break Label_0390;
                                                                                                        }
                                                                                                        final Builder builder13 = this;
                                                                                                        final EvaluateExpression_Res evaluateExpression_Res = builder13.getEvaluateExpression();
                                                                                                        final boolean b13 = evaluateExpression_Res.isInitialized();
                                                                                                        if (!b13) {
                                                                                                            return false;
                                                                                                        }
                                                                                                        break Label_0390;
                                                                                                    }
                                                                                                    catch (NullPointerException ex25) {
                                                                                                        throw b(ex25);
                                                                                                    }
                                                                                                }
                                                                                                try {
                                                                                                    final Builder builder13 = this;
                                                                                                    final EvaluateExpression_Res evaluateExpression_Res = builder13.getEvaluateExpression();
                                                                                                    final boolean b13 = evaluateExpression_Res.isInitialized();
                                                                                                    if (!b13) {
                                                                                                        return false;
                                                                                                    }
                                                                                                }
                                                                                                catch (NullPointerException ex26) {
                                                                                                    throw b(ex26);
                                                                                                }
                                                                                                try {
                                                                                                    if (!this.hasGetValueChildren()) {
                                                                                                        break Label_0420;
                                                                                                    }
                                                                                                    final Builder builder14 = this;
                                                                                                    final GetValueChildren_Res getValueChildren_Res = builder14.getGetValueChildren();
                                                                                                    final boolean b14 = getValueChildren_Res.isInitialized();
                                                                                                    if (!b14) {
                                                                                                        return false;
                                                                                                    }
                                                                                                    break Label_0420;
                                                                                                }
                                                                                                catch (NullPointerException ex27) {
                                                                                                    throw b(ex27);
                                                                                                }
                                                                                            }
                                                                                            try {
                                                                                                final Builder builder14 = this;
                                                                                                final GetValueChildren_Res getValueChildren_Res = builder14.getGetValueChildren();
                                                                                                final boolean b14 = getValueChildren_Res.isInitialized();
                                                                                                if (!b14) {
                                                                                                    return false;
                                                                                                }
                                                                                            }
                                                                                            catch (NullPointerException ex28) {
                                                                                                throw b(ex28);
                                                                                            }
                                                                                            try {
                                                                                                if (!this.hasGetVars()) {
                                                                                                    break Label_0450;
                                                                                                }
                                                                                                final Builder builder15 = this;
                                                                                                final GetVars_Res getVars_Res = builder15.getGetVars();
                                                                                                final boolean b15 = getVars_Res.isInitialized();
                                                                                                if (!b15) {
                                                                                                    return false;
                                                                                                }
                                                                                                break Label_0450;
                                                                                            }
                                                                                            catch (NullPointerException ex29) {
                                                                                                throw b(ex29);
                                                                                            }
                                                                                        }
                                                                                        try {
                                                                                            final Builder builder15 = this;
                                                                                            final GetVars_Res getVars_Res = builder15.getGetVars();
                                                                                            final boolean b15 = getVars_Res.isInitialized();
                                                                                            if (!b15) {
                                                                                                return false;
                                                                                            }
                                                                                        }
                                                                                        catch (NullPointerException ex30) {
                                                                                            throw b(ex30);
                                                                                        }
                                                                                        try {
                                                                                            if (!this.hasHandleConsoleCommand()) {
                                                                                                break Label_0480;
                                                                                            }
                                                                                            final Builder builder16 = this;
                                                                                            final HandleConsoleCommand_Res handleConsoleCommand_Res = builder16.getHandleConsoleCommand();
                                                                                            final boolean b16 = handleConsoleCommand_Res.isInitialized();
                                                                                            if (!b16) {
                                                                                                return false;
                                                                                            }
                                                                                            break Label_0480;
                                                                                        }
                                                                                        catch (NullPointerException ex31) {
                                                                                            throw b(ex31);
                                                                                        }
                                                                                    }
                                                                                    try {
                                                                                        final Builder builder16 = this;
                                                                                        final HandleConsoleCommand_Res handleConsoleCommand_Res = builder16.getHandleConsoleCommand();
                                                                                        final boolean b16 = handleConsoleCommand_Res.isInitialized();
                                                                                        if (!b16) {
                                                                                            return false;
                                                                                        }
                                                                                    }
                                                                                    catch (NullPointerException ex32) {
                                                                                        throw b(ex32);
                                                                                    }
                                                                                    try {
                                                                                        if (!this.hasHandleCompletion()) {
                                                                                            break Label_0510;
                                                                                        }
                                                                                        final Builder builder17 = this;
                                                                                        final HandleCompletion_Res handleCompletion_Res = builder17.getHandleCompletion();
                                                                                        final boolean b17 = handleCompletion_Res.isInitialized();
                                                                                        if (!b17) {
                                                                                            return false;
                                                                                        }
                                                                                        break Label_0510;
                                                                                    }
                                                                                    catch (NullPointerException ex33) {
                                                                                        throw b(ex33);
                                                                                    }
                                                                                }
                                                                                try {
                                                                                    final Builder builder17 = this;
                                                                                    final HandleCompletion_Res handleCompletion_Res = builder17.getHandleCompletion();
                                                                                    final boolean b17 = handleCompletion_Res.isInitialized();
                                                                                    if (!b17) {
                                                                                        return false;
                                                                                    }
                                                                                }
                                                                                catch (NullPointerException ex34) {
                                                                                    throw b(ex34);
                                                                                }
                                                                                try {
                                                                                    if (!this.hasAttach()) {
                                                                                        break Label_0540;
                                                                                    }
                                                                                    final Builder builder18 = this;
                                                                                    final Attach_Res attach_Res = builder18.getAttach();
                                                                                    final boolean b18 = attach_Res.isInitialized();
                                                                                    if (!b18) {
                                                                                        return false;
                                                                                    }
                                                                                    break Label_0540;
                                                                                }
                                                                                catch (NullPointerException ex35) {
                                                                                    throw b(ex35);
                                                                                }
                                                                            }
                                                                            try {
                                                                                final Builder builder18 = this;
                                                                                final Attach_Res attach_Res = builder18.getAttach();
                                                                                final boolean b18 = attach_Res.isInitialized();
                                                                                if (!b18) {
                                                                                    return false;
                                                                                }
                                                                            }
                                                                            catch (NullPointerException ex36) {
                                                                                throw b(ex36);
                                                                            }
                                                                            try {
                                                                                if (!this.hasAttachByName()) {
                                                                                    break Label_0570;
                                                                                }
                                                                                final Builder builder19 = this;
                                                                                final AttachByName_Res attachByName_Res = builder19.getAttachByName();
                                                                                final boolean b19 = attachByName_Res.isInitialized();
                                                                                if (!b19) {
                                                                                    return false;
                                                                                }
                                                                                break Label_0570;
                                                                            }
                                                                            catch (NullPointerException ex37) {
                                                                                throw b(ex37);
                                                                            }
                                                                        }
                                                                        try {
                                                                            final Builder builder19 = this;
                                                                            final AttachByName_Res attachByName_Res = builder19.getAttachByName();
                                                                            final boolean b19 = attachByName_Res.isInitialized();
                                                                            if (!b19) {
                                                                                return false;
                                                                            }
                                                                        }
                                                                        catch (NullPointerException ex38) {
                                                                            throw b(ex38);
                                                                        }
                                                                        try {
                                                                            if (!this.hasDispatchInput()) {
                                                                                break Label_0600;
                                                                            }
                                                                            final Builder builder20 = this;
                                                                            final DispatchInput_Res dispatchInput_Res = builder20.getDispatchInput();
                                                                            final boolean b20 = dispatchInput_Res.isInitialized();
                                                                            if (!b20) {
                                                                                return false;
                                                                            }
                                                                            break Label_0600;
                                                                        }
                                                                        catch (NullPointerException ex39) {
                                                                            throw b(ex39);
                                                                        }
                                                                    }
                                                                    try {
                                                                        final Builder builder20 = this;
                                                                        final DispatchInput_Res dispatchInput_Res = builder20.getDispatchInput();
                                                                        final boolean b20 = dispatchInput_Res.isInitialized();
                                                                        if (!b20) {
                                                                            return false;
                                                                        }
                                                                    }
                                                                    catch (NullPointerException ex40) {
                                                                        throw b(ex40);
                                                                    }
                                                                    try {
                                                                        if (!this.hasAddWatchpoint()) {
                                                                            break Label_0630;
                                                                        }
                                                                        final Builder builder21 = this;
                                                                        final AddWatchpoint_Res addWatchpoint_Res = builder21.getAddWatchpoint();
                                                                        final boolean b21 = addWatchpoint_Res.isInitialized();
                                                                        if (!b21) {
                                                                            return false;
                                                                        }
                                                                        break Label_0630;
                                                                    }
                                                                    catch (NullPointerException ex41) {
                                                                        throw b(ex41);
                                                                    }
                                                                }
                                                                try {
                                                                    final Builder builder21 = this;
                                                                    final AddWatchpoint_Res addWatchpoint_Res = builder21.getAddWatchpoint();
                                                                    final boolean b21 = addWatchpoint_Res.isInitialized();
                                                                    if (!b21) {
                                                                        return false;
                                                                    }
                                                                }
                                                                catch (NullPointerException ex42) {
                                                                    throw b(ex42);
                                                                }
                                                                try {
                                                                    if (!this.hasRemoveWatchpoint()) {
                                                                        break Label_0660;
                                                                    }
                                                                    final Builder builder22 = this;
                                                                    final RemoveWatchpoint_Res removeWatchpoint_Res = builder22.getRemoveWatchpoint();
                                                                    final boolean b22 = removeWatchpoint_Res.isInitialized();
                                                                    if (!b22) {
                                                                        return false;
                                                                    }
                                                                    break Label_0660;
                                                                }
                                                                catch (NullPointerException ex43) {
                                                                    throw b(ex43);
                                                                }
                                                            }
                                                            try {
                                                                final Builder builder22 = this;
                                                                final RemoveWatchpoint_Res removeWatchpoint_Res = builder22.getRemoveWatchpoint();
                                                                final boolean b22 = removeWatchpoint_Res.isInitialized();
                                                                if (!b22) {
                                                                    return false;
                                                                }
                                                            }
                                                            catch (NullPointerException ex44) {
                                                                throw b(ex44);
                                                            }
                                                            try {
                                                                if (!this.hasDetach()) {
                                                                    break Label_0690;
                                                                }
                                                                final Builder builder23 = this;
                                                                final Detach_Res detach_Res = builder23.getDetach();
                                                                final boolean b23 = detach_Res.isInitialized();
                                                                if (!b23) {
                                                                    return false;
                                                                }
                                                                break Label_0690;
                                                            }
                                                            catch (NullPointerException ex45) {
                                                                throw b(ex45);
                                                            }
                                                        }
                                                        try {
                                                            final Builder builder23 = this;
                                                            final Detach_Res detach_Res = builder23.getDetach();
                                                            final boolean b23 = detach_Res.isInitialized();
                                                            if (!b23) {
                                                                return false;
                                                            }
                                                        }
                                                        catch (NullPointerException ex46) {
                                                            throw b(ex46);
                                                        }
                                                        try {
                                                            if (!this.hasKill()) {
                                                                break Label_0720;
                                                            }
                                                            final Builder builder24 = this;
                                                            final Kill_Res kill_Res = builder24.getKill();
                                                            final boolean b24 = kill_Res.isInitialized();
                                                            if (!b24) {
                                                                return false;
                                                            }
                                                            break Label_0720;
                                                        }
                                                        catch (NullPointerException ex47) {
                                                            throw b(ex47);
                                                        }
                                                    }
                                                    try {
                                                        final Builder builder24 = this;
                                                        final Kill_Res kill_Res = builder24.getKill();
                                                        final boolean b24 = kill_Res.isInitialized();
                                                        if (!b24) {
                                                            return false;
                                                        }
                                                    }
                                                    catch (NullPointerException ex48) {
                                                        throw b(ex48);
                                                    }
                                                    try {
                                                        if (!this.hasGetChildrenCount()) {
                                                            break Label_0750;
                                                        }
                                                        final Builder builder25 = this;
                                                        final GetChildrenCount_Res getChildrenCount_Res = builder25.getGetChildrenCount();
                                                        final boolean b25 = getChildrenCount_Res.isInitialized();
                                                        if (!b25) {
                                                            return false;
                                                        }
                                                        break Label_0750;
                                                    }
                                                    catch (NullPointerException ex49) {
                                                        throw b(ex49);
                                                    }
                                                }
                                                try {
                                                    final Builder builder25 = this;
                                                    final GetChildrenCount_Res getChildrenCount_Res = builder25.getGetChildrenCount();
                                                    final boolean b25 = getChildrenCount_Res.isInitialized();
                                                    if (!b25) {
                                                        return false;
                                                    }
                                                }
                                                catch (NullPointerException ex50) {
                                                    throw b(ex50);
                                                }
                                                try {
                                                    if (!this.hasGetArraySlice()) {
                                                        break Label_0780;
                                                    }
                                                    final Builder builder26 = this;
                                                    final GetArraySlice_Res getArraySlice_Res = builder26.getGetArraySlice();
                                                    final boolean b26 = getArraySlice_Res.isInitialized();
                                                    if (!b26) {
                                                        return false;
                                                    }
                                                    break Label_0780;
                                                }
                                                catch (NullPointerException ex51) {
                                                    throw b(ex51);
                                                }
                                            }
                                            try {
                                                final Builder builder26 = this;
                                                final GetArraySlice_Res getArraySlice_Res = builder26.getGetArraySlice();
                                                final boolean b26 = getArraySlice_Res.isInitialized();
                                                if (!b26) {
                                                    return false;
                                                }
                                            }
                                            catch (NullPointerException ex52) {
                                                throw b(ex52);
                                            }
                                            try {
                                                if (!this.hasGetValueData()) {
                                                    break Label_0810;
                                                }
                                                final Builder builder27 = this;
                                                final GetValueData_Res getValueData_Res = builder27.getGetValueData();
                                                final boolean b27 = getValueData_Res.isInitialized();
                                                if (!b27) {
                                                    return false;
                                                }
                                                break Label_0810;
                                            }
                                            catch (NullPointerException ex53) {
                                                throw b(ex53);
                                            }
                                        }
                                        try {
                                            final Builder builder27 = this;
                                            final GetValueData_Res getValueData_Res = builder27.getGetValueData();
                                            final boolean b27 = getValueData_Res.isInitialized();
                                            if (!b27) {
                                                return false;
                                            }
                                        }
                                        catch (NullPointerException ex54) {
                                            throw b(ex54);
                                        }
                                        try {
                                            if (!this.hasGetValueDescription()) {
                                                break Label_0840;
                                            }
                                            final Builder builder28 = this;
                                            final GetValueDescription_Res getValueDescription_Res = builder28.getGetValueDescription();
                                            final boolean b28 = getValueDescription_Res.isInitialized();
                                            if (!b28) {
                                                return false;
                                            }
                                            break Label_0840;
                                        }
                                        catch (NullPointerException ex55) {
                                            throw b(ex55);
                                        }
                                    }
                                    try {
                                        final Builder builder28 = this;
                                        final GetValueDescription_Res getValueDescription_Res = builder28.getGetValueDescription();
                                        final boolean b28 = getValueDescription_Res.isInitialized();
                                        if (!b28) {
                                            return false;
                                        }
                                    }
                                    catch (NullPointerException ex56) {
                                        throw b(ex56);
                                    }
                                    try {
                                        if (!this.hasValuesFilteringPolicy()) {
                                            break Label_0870;
                                        }
                                        final Builder builder29 = this;
                                        final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res = builder29.getValuesFilteringPolicy();
                                        final boolean b29 = valuesFilteringPolicy_Res.isInitialized();
                                        if (!b29) {
                                            return false;
                                        }
                                        break Label_0870;
                                    }
                                    catch (NullPointerException ex57) {
                                        throw b(ex57);
                                    }
                                }
                                try {
                                    final Builder builder29 = this;
                                    final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res = builder29.getValuesFilteringPolicy();
                                    final boolean b29 = valuesFilteringPolicy_Res.isInitialized();
                                    if (!b29) {
                                        return false;
                                    }
                                }
                                catch (NullPointerException ex58) {
                                    throw b(ex58);
                                }
                                try {
                                    if (!this.hasConnectPlatform()) {
                                        break Label_0900;
                                    }
                                    final Builder builder30 = this;
                                    final ConnectPlatform_Res connectPlatform_Res = builder30.getConnectPlatform();
                                    final boolean b30 = connectPlatform_Res.isInitialized();
                                    if (!b30) {
                                        return false;
                                    }
                                    break Label_0900;
                                }
                                catch (NullPointerException ex59) {
                                    throw b(ex59);
                                }
                            }
                            try {
                                final Builder builder30 = this;
                                final ConnectPlatform_Res connectPlatform_Res = builder30.getConnectPlatform();
                                final boolean b30 = connectPlatform_Res.isInitialized();
                                if (!b30) {
                                    return false;
                                }
                            }
                            catch (NullPointerException ex60) {
                                throw b(ex60);
                            }
                            try {
                                if (!this.hasGetValueAddress()) {
                                    break Label_0930;
                                }
                                final Builder builder31 = this;
                                final GetValueAddress_Res getValueAddress_Res = builder31.getGetValueAddress();
                                final boolean b31 = getValueAddress_Res.isInitialized();
                                if (!b31) {
                                    return false;
                                }
                                break Label_0930;
                            }
                            catch (NullPointerException ex61) {
                                throw b(ex61);
                            }
                        }
                        try {
                            final Builder builder31 = this;
                            final GetValueAddress_Res getValueAddress_Res = builder31.getGetValueAddress();
                            final boolean b31 = getValueAddress_Res.isInitialized();
                            if (!b31) {
                                return false;
                            }
                        }
                        catch (NullPointerException ex62) {
                            throw b(ex62);
                        }
                        try {
                            if (!this.hasHandleSignal()) {
                                break Label_0960;
                            }
                            final Builder builder32 = this;
                            final HandleSignal_Res handleSignal_Res = builder32.getHandleSignal();
                            final boolean b32 = handleSignal_Res.isInitialized();
                            if (!b32) {
                                return false;
                            }
                            break Label_0960;
                        }
                        catch (NullPointerException ex63) {
                            throw b(ex63);
                        }
                    }
                    try {
                        final Builder builder32 = this;
                        final HandleSignal_Res handleSignal_Res = builder32.getHandleSignal();
                        final boolean b32 = handleSignal_Res.isInitialized();
                        if (!b32) {
                            return false;
                        }
                    }
                    catch (NullPointerException ex64) {
                        throw b(ex64);
                    }
                    try {
                        if (!this.hasExecuteShellCommand()) {
                            return true;
                        }
                        final Builder builder33 = this;
                        final ExecuteShellCommand_Res executeShellCommand_Res = builder33.getExecuteShellCommand();
                        final boolean b33 = executeShellCommand_Res.isInitialized();
                        if (!b33) {
                            return false;
                        }
                        return true;
                    }
                    catch (NullPointerException ex65) {
                        throw b(ex65);
                    }
                }
                try {
                    final Builder builder33 = this;
                    final ExecuteShellCommand_Res executeShellCommand_Res = builder33.getExecuteShellCommand();
                    final boolean b33 = executeShellCommand_Res.isInitialized();
                    if (!b33) {
                        return false;
                    }
                }
                catch (NullPointerException ex66) {
                    throw b(ex66);
                }
                return true;
            }
            
            public Builder mergeFrom(final CodedInputStream codedInputStream, final ExtensionRegistryLite extensionRegistryLite) throws IOException {
                CompositeResponse compositeResponse = null;
                try {
                    compositeResponse = (CompositeResponse)CompositeResponse.PARSER.parsePartialFrom(codedInputStream, extensionRegistryLite);
                }
                catch (InvalidProtocolBufferException ex) {
                    compositeResponse = (CompositeResponse)ex.getUnfinishedMessage();
                    throw ex;
                }
                finally {
                    try {
                        if (compositeResponse != null) {
                            this.mergeFrom(compositeResponse);
                        }
                    }
                    catch (InvalidProtocolBufferException ex2) {
                        throw b((Exception)ex2);
                    }
                }
                return this;
            }
            
            public boolean hasCreateTarget() {
                try {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public CreateTarget_Res getCreateTarget() {
                try {
                    if (this.createTargetBuilder_ == null) {
                        return this.createTarget_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (CreateTarget_Res)this.createTargetBuilder_.getMessage();
            }
            
            public Builder setCreateTarget(final CreateTarget_Res createTarget_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.createTargetBuilder_ != null) {
                                    break Label_0042;
                                }
                                final CreateTarget_Res createTarget_Res2 = createTarget_Res;
                                if (createTarget_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final CreateTarget_Res createTarget_Res2 = createTarget_Res;
                                if (createTarget_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.createTarget_ = createTarget_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.createTargetBuilder_.setMessage((GeneratedMessage)createTarget_Res);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCreateTarget(final CreateTarget_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            this.createTarget_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.createTargetBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCreateTarget(final CreateTarget_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTargetBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTarget_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CreateTarget_Res;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.createTargetBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCreateTarget() {
                Label_0033: {
                    try {
                        if (this.createTargetBuilder_ == null) {
                            this.createTarget_ = CreateTarget_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.createTargetBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public CreateTarget_Res.Builder getCreateTargetBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return (CreateTarget_Res.Builder)this.x().getBuilder();
            }
            
            public CreateTarget_ResOrBuilder getCreateTargetOrBuilder() {
                try {
                    if (this.createTargetBuilder_ != null) {
                        return (CreateTarget_ResOrBuilder)this.createTargetBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.createTarget_;
            }
            
            private SingleFieldBuilder<CreateTarget_Res, CreateTarget_Res.Builder, CreateTarget_ResOrBuilder> x() {
                try {
                    if (this.createTargetBuilder_ == null) {
                        this.createTargetBuilder_ = (SingleFieldBuilder<CreateTarget_Res, CreateTarget_Res.Builder, CreateTarget_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.createTarget_, this.getParentForChildren(), this.isClean());
                        this.createTarget_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.createTargetBuilder_;
            }
            
            public boolean hasLaunch() {
                try {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Launch_Res getLaunch() {
                try {
                    if (this.launchBuilder_ == null) {
                        return this.launch_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Launch_Res)this.launchBuilder_.getMessage();
            }
            
            public Builder setLaunch(final Launch_Res launch_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.launchBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Launch_Res launch_Res2 = launch_Res;
                                if (launch_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Launch_Res launch_Res2 = launch_Res;
                                if (launch_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.launch_ = launch_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.launchBuilder_.setMessage((GeneratedMessage)launch_Res);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setLaunch(final Launch_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.launchBuilder_ == null) {
                            this.launch_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.launchBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeLaunch(final Launch_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launchBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: iconst_2       
                //    12: iand           
                //    13: iconst_2       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launch_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Launch_Res;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.launchBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    92: iconst_2       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearLaunch() {
                Label_0033: {
                    try {
                        if (this.launchBuilder_ == null) {
                            this.launch_ = Launch_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.launchBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public Launch_Res.Builder getLaunchBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return (Launch_Res.Builder)this.r().getBuilder();
            }
            
            public Launch_ResOrBuilder getLaunchOrBuilder() {
                try {
                    if (this.launchBuilder_ != null) {
                        return (Launch_ResOrBuilder)this.launchBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.launch_;
            }
            
            private SingleFieldBuilder<Launch_Res, Launch_Res.Builder, Launch_ResOrBuilder> r() {
                try {
                    if (this.launchBuilder_ == null) {
                        this.launchBuilder_ = (SingleFieldBuilder<Launch_Res, Launch_Res.Builder, Launch_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.launch_, this.getParentForChildren(), this.isClean());
                        this.launch_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.launchBuilder_;
            }
            
            public boolean hasContinue() {
                try {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Continue_Res getContinue() {
                try {
                    if (this.continueBuilder_ == null) {
                        return this.continue_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Continue_Res)this.continueBuilder_.getMessage();
            }
            
            public Builder setContinue(final Continue_Res continue_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.continueBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Continue_Res continue_Res2 = continue_Res;
                                if (continue_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Continue_Res continue_Res2 = continue_Res;
                                if (continue_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.continue_ = continue_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.continueBuilder_.setMessage((GeneratedMessage)continue_Res);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setContinue(final Continue_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.continueBuilder_ == null) {
                            this.continue_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.continueBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeContinue(final Continue_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: iconst_4       
                //    12: iand           
                //    13: iconst_4       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continue_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Continue_Res;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.continueBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    92: iconst_4       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearContinue() {
                Label_0033: {
                    try {
                        if (this.continueBuilder_ == null) {
                            this.continue_ = Continue_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.continueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public Continue_Res.Builder getContinueBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return (Continue_Res.Builder)this.v().getBuilder();
            }
            
            public Continue_ResOrBuilder getContinueOrBuilder() {
                try {
                    if (this.continueBuilder_ != null) {
                        return (Continue_ResOrBuilder)this.continueBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.continue_;
            }
            
            private SingleFieldBuilder<Continue_Res, Continue_Res.Builder, Continue_ResOrBuilder> v() {
                try {
                    if (this.continueBuilder_ == null) {
                        this.continueBuilder_ = (SingleFieldBuilder<Continue_Res, Continue_Res.Builder, Continue_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.continue_, this.getParentForChildren(), this.isClean());
                        this.continue_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.continueBuilder_;
            }
            
            public boolean hasCompositeBroadcast() {
                try {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Broadcasts.CompositeBroadcast getCompositeBroadcast() {
                try {
                    if (this.compositeBroadcastBuilder_ == null) {
                        return this.compositeBroadcast_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Broadcasts.CompositeBroadcast)this.compositeBroadcastBuilder_.getMessage();
            }
            
            public Builder setCompositeBroadcast(final Broadcasts.CompositeBroadcast compositeBroadcast) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.compositeBroadcastBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Broadcasts.CompositeBroadcast compositeBroadcast2 = compositeBroadcast;
                                if (compositeBroadcast2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Broadcasts.CompositeBroadcast compositeBroadcast2 = compositeBroadcast;
                                if (compositeBroadcast2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.compositeBroadcast_ = compositeBroadcast;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.compositeBroadcastBuilder_.setMessage((GeneratedMessage)compositeBroadcast);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setCompositeBroadcast(final Broadcasts.CompositeBroadcast.Builder builder) {
                Label_0038: {
                    try {
                        if (this.compositeBroadcastBuilder_ == null) {
                            this.compositeBroadcast_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.compositeBroadcastBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeCompositeBroadcast(final Broadcasts.CompositeBroadcast p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcastBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: bipush          8
                //    13: iand           
                //    14: bipush          8
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcast_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcast_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcast_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcast_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Broadcasts$CompositeBroadcast;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.compositeBroadcastBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: bipush          8
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearCompositeBroadcast() {
                Label_0033: {
                    try {
                        if (this.compositeBroadcastBuilder_ == null) {
                            this.compositeBroadcast_ = Broadcasts.CompositeBroadcast.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.compositeBroadcastBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Broadcasts.CompositeBroadcast.Builder getCompositeBroadcastBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return (Broadcasts.CompositeBroadcast.Builder)this.B().getBuilder();
            }
            
            public Broadcasts.CompositeBroadcastOrBuilder getCompositeBroadcastOrBuilder() {
                try {
                    if (this.compositeBroadcastBuilder_ != null) {
                        return (Broadcasts.CompositeBroadcastOrBuilder)this.compositeBroadcastBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.compositeBroadcast_;
            }
            
            private SingleFieldBuilder<Broadcasts.CompositeBroadcast, Broadcasts.CompositeBroadcast.Builder, Broadcasts.CompositeBroadcastOrBuilder> B() {
                try {
                    if (this.compositeBroadcastBuilder_ == null) {
                        this.compositeBroadcastBuilder_ = (SingleFieldBuilder<Broadcasts.CompositeBroadcast, Broadcasts.CompositeBroadcast.Builder, Broadcasts.CompositeBroadcastOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.compositeBroadcast_, this.getParentForChildren(), this.isClean());
                        this.compositeBroadcast_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.compositeBroadcastBuilder_;
            }
            
            public boolean hasSuspend() {
                try {
                    if ((this.bitField0_ & 0x10) == 0x10) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Suspend_Res getSuspend() {
                try {
                    if (this.suspendBuilder_ == null) {
                        return this.suspend_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Suspend_Res)this.suspendBuilder_.getMessage();
            }
            
            public Builder setSuspend(final Suspend_Res suspend_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.suspendBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Suspend_Res suspend_Res2 = suspend_Res;
                                if (suspend_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Suspend_Res suspend_Res2 = suspend_Res;
                                if (suspend_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.suspend_ = suspend_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.suspendBuilder_.setMessage((GeneratedMessage)suspend_Res);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setSuspend(final Suspend_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            this.suspend_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.suspendBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergeSuspend(final Suspend_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspendBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: bipush          16
                //    13: iand           
                //    14: bipush          16
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspend_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Suspend_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.suspendBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: bipush          16
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearSuspend() {
                Label_0033: {
                    try {
                        if (this.suspendBuilder_ == null) {
                            this.suspend_ = Suspend_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.suspendBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public Suspend_Res.Builder getSuspendBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return (Suspend_Res.Builder)this.p().getBuilder();
            }
            
            public Suspend_ResOrBuilder getSuspendOrBuilder() {
                try {
                    if (this.suspendBuilder_ != null) {
                        return (Suspend_ResOrBuilder)this.suspendBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.suspend_;
            }
            
            private SingleFieldBuilder<Suspend_Res, Suspend_Res.Builder, Suspend_ResOrBuilder> p() {
                try {
                    if (this.suspendBuilder_ == null) {
                        this.suspendBuilder_ = (SingleFieldBuilder<Suspend_Res, Suspend_Res.Builder, Suspend_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.suspend_, this.getParentForChildren(), this.isClean());
                        this.suspend_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.suspendBuilder_;
            }
            
            public boolean hasGetThreads() {
                try {
                    if ((this.bitField0_ & 0x20) == 0x20) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetThreads_Res getGetThreads() {
                try {
                    if (this.getThreadsBuilder_ == null) {
                        return this.getThreads_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetThreads_Res)this.getThreadsBuilder_.getMessage();
            }
            
            public Builder setGetThreads(final GetThreads_Res getThreads_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getThreadsBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetThreads_Res getThreads_Res2 = getThreads_Res;
                                if (getThreads_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetThreads_Res getThreads_Res2 = getThreads_Res;
                                if (getThreads_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getThreads_ = getThreads_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getThreadsBuilder_.setMessage((GeneratedMessage)getThreads_Res);
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder setGetThreads(final GetThreads_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            this.getThreads_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getThreadsBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder mergeGetThreads(final GetThreads_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreadsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: bipush          32
                //    13: iand           
                //    14: bipush          32
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreads_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetThreads_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getThreadsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: bipush          32
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetThreads() {
                Label_0033: {
                    try {
                        if (this.getThreadsBuilder_ == null) {
                            this.getThreads_ = GetThreads_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getThreadsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            public GetThreads_Res.Builder getGetThreadsBuilder() {
                this.bitField0_ |= 0x20;
                this.onChanged();
                return (GetThreads_Res.Builder)this.C().getBuilder();
            }
            
            public GetThreads_ResOrBuilder getGetThreadsOrBuilder() {
                try {
                    if (this.getThreadsBuilder_ != null) {
                        return (GetThreads_ResOrBuilder)this.getThreadsBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getThreads_;
            }
            
            private SingleFieldBuilder<GetThreads_Res, GetThreads_Res.Builder, GetThreads_ResOrBuilder> C() {
                try {
                    if (this.getThreadsBuilder_ == null) {
                        this.getThreadsBuilder_ = (SingleFieldBuilder<GetThreads_Res, GetThreads_Res.Builder, GetThreads_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getThreads_, this.getParentForChildren(), this.isClean());
                        this.getThreads_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getThreadsBuilder_;
            }
            
            public boolean hasGetFrames() {
                try {
                    if ((this.bitField0_ & 0x40) == 0x40) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetFrames_Res getGetFrames() {
                try {
                    if (this.getFramesBuilder_ == null) {
                        return this.getFrames_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetFrames_Res)this.getFramesBuilder_.getMessage();
            }
            
            public Builder setGetFrames(final GetFrames_Res getFrames_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getFramesBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetFrames_Res getFrames_Res2 = getFrames_Res;
                                if (getFrames_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetFrames_Res getFrames_Res2 = getFrames_Res;
                                if (getFrames_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getFrames_ = getFrames_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getFramesBuilder_.setMessage((GeneratedMessage)getFrames_Res);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder setGetFrames(final GetFrames_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            this.getFrames_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getFramesBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder mergeGetFrames(final GetFrames_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFramesBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: bipush          64
                //    13: iand           
                //    14: bipush          64
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFrames_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetFrames_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getFramesBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: bipush          64
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetFrames() {
                Label_0033: {
                    try {
                        if (this.getFramesBuilder_ == null) {
                            this.getFrames_ = GetFrames_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getFramesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            public GetFrames_Res.Builder getGetFramesBuilder() {
                this.bitField0_ |= 0x40;
                this.onChanged();
                return (GetFrames_Res.Builder)this.a().getBuilder();
            }
            
            public GetFrames_ResOrBuilder getGetFramesOrBuilder() {
                try {
                    if (this.getFramesBuilder_ != null) {
                        return (GetFrames_ResOrBuilder)this.getFramesBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getFrames_;
            }
            
            private SingleFieldBuilder<GetFrames_Res, GetFrames_Res.Builder, GetFrames_ResOrBuilder> a() {
                try {
                    if (this.getFramesBuilder_ == null) {
                        this.getFramesBuilder_ = (SingleFieldBuilder<GetFrames_Res, GetFrames_Res.Builder, GetFrames_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getFrames_, this.getParentForChildren(), this.isClean());
                        this.getFrames_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getFramesBuilder_;
            }
            
            public boolean hasAddBreakpoint() {
                try {
                    if ((this.bitField0_ & 0x80) == 0x80) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AddBreakpoint_Res getAddBreakpoint() {
                try {
                    if (this.addBreakpointBuilder_ == null) {
                        return this.addBreakpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AddBreakpoint_Res)this.addBreakpointBuilder_.getMessage();
            }
            
            public Builder setAddBreakpoint(final AddBreakpoint_Res addBreakpoint_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.addBreakpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AddBreakpoint_Res addBreakpoint_Res2 = addBreakpoint_Res;
                                if (addBreakpoint_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AddBreakpoint_Res addBreakpoint_Res2 = addBreakpoint_Res;
                                if (addBreakpoint_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.addBreakpoint_ = addBreakpoint_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.addBreakpointBuilder_.setMessage((GeneratedMessage)addBreakpoint_Res);
                }
                this.bitField0_ |= 0x80;
                return this;
            }
            
            public Builder setAddBreakpoint(final AddBreakpoint_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            this.addBreakpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addBreakpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x80;
                return this;
            }
            
            public Builder mergeAddBreakpoint(final AddBreakpoint_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          128
                //    14: iand           
                //    15: sipush          128
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddBreakpoint_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          128
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAddBreakpoint() {
                Label_0033: {
                    try {
                        if (this.addBreakpointBuilder_ == null) {
                            this.addBreakpoint_ = AddBreakpoint_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addBreakpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }
            
            public AddBreakpoint_Res.Builder getAddBreakpointBuilder() {
                this.bitField0_ |= 0x80;
                this.onChanged();
                return (AddBreakpoint_Res.Builder)this.I().getBuilder();
            }
            
            public AddBreakpoint_ResOrBuilder getAddBreakpointOrBuilder() {
                try {
                    if (this.addBreakpointBuilder_ != null) {
                        return (AddBreakpoint_ResOrBuilder)this.addBreakpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addBreakpoint_;
            }
            
            private SingleFieldBuilder<AddBreakpoint_Res, AddBreakpoint_Res.Builder, AddBreakpoint_ResOrBuilder> I() {
                try {
                    if (this.addBreakpointBuilder_ == null) {
                        this.addBreakpointBuilder_ = (SingleFieldBuilder<AddBreakpoint_Res, AddBreakpoint_Res.Builder, AddBreakpoint_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.addBreakpoint_, this.getParentForChildren(), this.isClean());
                        this.addBreakpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addBreakpointBuilder_;
            }
            
            public boolean hasRemoveBreakpoint() {
                try {
                    if ((this.bitField0_ & 0x100) == 0x100) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public RemoveBreakpoint_Res getRemoveBreakpoint() {
                try {
                    if (this.removeBreakpointBuilder_ == null) {
                        return this.removeBreakpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (RemoveBreakpoint_Res)this.removeBreakpointBuilder_.getMessage();
            }
            
            public Builder setRemoveBreakpoint(final RemoveBreakpoint_Res removeBreakpoint_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.removeBreakpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final RemoveBreakpoint_Res removeBreakpoint_Res2 = removeBreakpoint_Res;
                                if (removeBreakpoint_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final RemoveBreakpoint_Res removeBreakpoint_Res2 = removeBreakpoint_Res;
                                if (removeBreakpoint_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.removeBreakpoint_ = removeBreakpoint_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.removeBreakpointBuilder_.setMessage((GeneratedMessage)removeBreakpoint_Res);
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder setRemoveBreakpoint(final RemoveBreakpoint_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            this.removeBreakpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeBreakpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder mergeRemoveBreakpoint(final RemoveBreakpoint_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          256
                //    14: iand           
                //    15: sipush          256
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveBreakpoint_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeBreakpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          256
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearRemoveBreakpoint() {
                Label_0033: {
                    try {
                        if (this.removeBreakpointBuilder_ == null) {
                            this.removeBreakpoint_ = RemoveBreakpoint_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeBreakpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }
            
            public RemoveBreakpoint_Res.Builder getRemoveBreakpointBuilder() {
                this.bitField0_ |= 0x100;
                this.onChanged();
                return (RemoveBreakpoint_Res.Builder)this.h().getBuilder();
            }
            
            public RemoveBreakpoint_ResOrBuilder getRemoveBreakpointOrBuilder() {
                try {
                    if (this.removeBreakpointBuilder_ != null) {
                        return (RemoveBreakpoint_ResOrBuilder)this.removeBreakpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeBreakpoint_;
            }
            
            private SingleFieldBuilder<RemoveBreakpoint_Res, RemoveBreakpoint_Res.Builder, RemoveBreakpoint_ResOrBuilder> h() {
                try {
                    if (this.removeBreakpointBuilder_ == null) {
                        this.removeBreakpointBuilder_ = (SingleFieldBuilder<RemoveBreakpoint_Res, RemoveBreakpoint_Res.Builder, RemoveBreakpoint_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.removeBreakpoint_, this.getParentForChildren(), this.isClean());
                        this.removeBreakpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeBreakpointBuilder_;
            }
            
            public boolean hasStepInto() {
                try {
                    if ((this.bitField0_ & 0x200) == 0x200) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepInto_Res getStepInto() {
                try {
                    if (this.stepIntoBuilder_ == null) {
                        return this.stepInto_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepInto_Res)this.stepIntoBuilder_.getMessage();
            }
            
            public Builder setStepInto(final StepInto_Res stepInto_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepIntoBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepInto_Res stepInto_Res2 = stepInto_Res;
                                if (stepInto_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepInto_Res stepInto_Res2 = stepInto_Res;
                                if (stepInto_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepInto_ = stepInto_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepIntoBuilder_.setMessage((GeneratedMessage)stepInto_Res);
                }
                this.bitField0_ |= 0x200;
                return this;
            }
            
            public Builder setStepInto(final StepInto_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            this.stepInto_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepIntoBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x200;
                return this;
            }
            
            public Builder mergeStepInto(final StepInto_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepIntoBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          512
                //    14: iand           
                //    15: sipush          512
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepInto_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepInto_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepIntoBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          512
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepInto() {
                Label_0033: {
                    try {
                        if (this.stepIntoBuilder_ == null) {
                            this.stepInto_ = StepInto_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepIntoBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }
            
            public StepInto_Res.Builder getStepIntoBuilder() {
                this.bitField0_ |= 0x200;
                this.onChanged();
                return (StepInto_Res.Builder)this.k().getBuilder();
            }
            
            public StepInto_ResOrBuilder getStepIntoOrBuilder() {
                try {
                    if (this.stepIntoBuilder_ != null) {
                        return (StepInto_ResOrBuilder)this.stepIntoBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepInto_;
            }
            
            private SingleFieldBuilder<StepInto_Res, StepInto_Res.Builder, StepInto_ResOrBuilder> k() {
                try {
                    if (this.stepIntoBuilder_ == null) {
                        this.stepIntoBuilder_ = (SingleFieldBuilder<StepInto_Res, StepInto_Res.Builder, StepInto_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepInto_, this.getParentForChildren(), this.isClean());
                        this.stepInto_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepIntoBuilder_;
            }
            
            public boolean hasStepOver() {
                try {
                    if ((this.bitField0_ & 0x400) == 0x400) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepOver_Res getStepOver() {
                try {
                    if (this.stepOverBuilder_ == null) {
                        return this.stepOver_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepOver_Res)this.stepOverBuilder_.getMessage();
            }
            
            public Builder setStepOver(final StepOver_Res stepOver_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepOverBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepOver_Res stepOver_Res2 = stepOver_Res;
                                if (stepOver_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepOver_Res stepOver_Res2 = stepOver_Res;
                                if (stepOver_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepOver_ = stepOver_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepOverBuilder_.setMessage((GeneratedMessage)stepOver_Res);
                }
                this.bitField0_ |= 0x400;
                return this;
            }
            
            public Builder setStepOver(final StepOver_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            this.stepOver_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOverBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x400;
                return this;
            }
            
            public Builder mergeStepOver(final StepOver_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOverBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          1024
                //    14: iand           
                //    15: sipush          1024
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOver_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOver_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOverBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          1024
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepOver() {
                Label_0033: {
                    try {
                        if (this.stepOverBuilder_ == null) {
                            this.stepOver_ = StepOver_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOverBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFBFF;
                return this;
            }
            
            public StepOver_Res.Builder getStepOverBuilder() {
                this.bitField0_ |= 0x400;
                this.onChanged();
                return (StepOver_Res.Builder)this.i().getBuilder();
            }
            
            public StepOver_ResOrBuilder getStepOverOrBuilder() {
                try {
                    if (this.stepOverBuilder_ != null) {
                        return (StepOver_ResOrBuilder)this.stepOverBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOver_;
            }
            
            private SingleFieldBuilder<StepOver_Res, StepOver_Res.Builder, StepOver_ResOrBuilder> i() {
                try {
                    if (this.stepOverBuilder_ == null) {
                        this.stepOverBuilder_ = (SingleFieldBuilder<StepOver_Res, StepOver_Res.Builder, StepOver_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepOver_, this.getParentForChildren(), this.isClean());
                        this.stepOver_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOverBuilder_;
            }
            
            public boolean hasStepOut() {
                try {
                    if ((this.bitField0_ & 0x800) == 0x800) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public StepOut_Res getStepOut() {
                try {
                    if (this.stepOutBuilder_ == null) {
                        return this.stepOut_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (StepOut_Res)this.stepOutBuilder_.getMessage();
            }
            
            public Builder setStepOut(final StepOut_Res stepOut_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.stepOutBuilder_ != null) {
                                    break Label_0042;
                                }
                                final StepOut_Res stepOut_Res2 = stepOut_Res;
                                if (stepOut_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final StepOut_Res stepOut_Res2 = stepOut_Res;
                                if (stepOut_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.stepOut_ = stepOut_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.stepOutBuilder_.setMessage((GeneratedMessage)stepOut_Res);
                }
                this.bitField0_ |= 0x800;
                return this;
            }
            
            public Builder setStepOut(final StepOut_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            this.stepOut_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOutBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x800;
                return this;
            }
            
            public Builder mergeStepOut(final StepOut_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOutBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          2048
                //    14: iand           
                //    15: sipush          2048
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOut_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$StepOut_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.stepOutBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          2048
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearStepOut() {
                Label_0033: {
                    try {
                        if (this.stepOutBuilder_ == null) {
                            this.stepOut_ = StepOut_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.stepOutBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFF7FF;
                return this;
            }
            
            public StepOut_Res.Builder getStepOutBuilder() {
                this.bitField0_ |= 0x800;
                this.onChanged();
                return (StepOut_Res.Builder)this.F().getBuilder();
            }
            
            public StepOut_ResOrBuilder getStepOutOrBuilder() {
                try {
                    if (this.stepOutBuilder_ != null) {
                        return (StepOut_ResOrBuilder)this.stepOutBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOut_;
            }
            
            private SingleFieldBuilder<StepOut_Res, StepOut_Res.Builder, StepOut_ResOrBuilder> F() {
                try {
                    if (this.stepOutBuilder_ == null) {
                        this.stepOutBuilder_ = (SingleFieldBuilder<StepOut_Res, StepOut_Res.Builder, StepOut_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.stepOut_, this.getParentForChildren(), this.isClean());
                        this.stepOut_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.stepOutBuilder_;
            }
            
            public boolean hasEvaluateExpression() {
                try {
                    if ((this.bitField0_ & 0x1000) == 0x1000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public EvaluateExpression_Res getEvaluateExpression() {
                try {
                    if (this.evaluateExpressionBuilder_ == null) {
                        return this.evaluateExpression_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (EvaluateExpression_Res)this.evaluateExpressionBuilder_.getMessage();
            }
            
            public Builder setEvaluateExpression(final EvaluateExpression_Res evaluateExpression_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.evaluateExpressionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final EvaluateExpression_Res evaluateExpression_Res2 = evaluateExpression_Res;
                                if (evaluateExpression_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final EvaluateExpression_Res evaluateExpression_Res2 = evaluateExpression_Res;
                                if (evaluateExpression_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.evaluateExpression_ = evaluateExpression_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.evaluateExpressionBuilder_.setMessage((GeneratedMessage)evaluateExpression_Res);
                }
                this.bitField0_ |= 0x1000;
                return this;
            }
            
            public Builder setEvaluateExpression(final EvaluateExpression_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            this.evaluateExpression_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.evaluateExpressionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1000;
                return this;
            }
            
            public Builder mergeEvaluateExpression(final EvaluateExpression_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpressionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          4096
                //    14: iand           
                //    15: sipush          4096
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpression_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$EvaluateExpression_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.evaluateExpressionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          4096
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearEvaluateExpression() {
                Label_0033: {
                    try {
                        if (this.evaluateExpressionBuilder_ == null) {
                            this.evaluateExpression_ = EvaluateExpression_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.evaluateExpressionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFEFFF;
                return this;
            }
            
            public EvaluateExpression_Res.Builder getEvaluateExpressionBuilder() {
                this.bitField0_ |= 0x1000;
                this.onChanged();
                return (EvaluateExpression_Res.Builder)this.e().getBuilder();
            }
            
            public EvaluateExpression_ResOrBuilder getEvaluateExpressionOrBuilder() {
                try {
                    if (this.evaluateExpressionBuilder_ != null) {
                        return (EvaluateExpression_ResOrBuilder)this.evaluateExpressionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.evaluateExpression_;
            }
            
            private SingleFieldBuilder<EvaluateExpression_Res, EvaluateExpression_Res.Builder, EvaluateExpression_ResOrBuilder> e() {
                try {
                    if (this.evaluateExpressionBuilder_ == null) {
                        this.evaluateExpressionBuilder_ = (SingleFieldBuilder<EvaluateExpression_Res, EvaluateExpression_Res.Builder, EvaluateExpression_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.evaluateExpression_, this.getParentForChildren(), this.isClean());
                        this.evaluateExpression_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.evaluateExpressionBuilder_;
            }
            
            public boolean hasGetValueChildren() {
                try {
                    if ((this.bitField0_ & 0x2000) == 0x2000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueChildren_Res getGetValueChildren() {
                try {
                    if (this.getValueChildrenBuilder_ == null) {
                        return this.getValueChildren_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueChildren_Res)this.getValueChildrenBuilder_.getMessage();
            }
            
            public Builder setGetValueChildren(final GetValueChildren_Res getValueChildren_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueChildrenBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueChildren_Res getValueChildren_Res2 = getValueChildren_Res;
                                if (getValueChildren_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueChildren_Res getValueChildren_Res2 = getValueChildren_Res;
                                if (getValueChildren_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueChildren_ = getValueChildren_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueChildrenBuilder_.setMessage((GeneratedMessage)getValueChildren_Res);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder setGetValueChildren(final GetValueChildren_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            this.getValueChildren_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueChildrenBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder mergeGetValueChildren(final GetValueChildren_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildrenBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          8192
                //    14: iand           
                //    15: sipush          8192
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildren_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueChildren_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueChildrenBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          8192
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueChildren() {
                Label_0033: {
                    try {
                        if (this.getValueChildrenBuilder_ == null) {
                            this.getValueChildren_ = GetValueChildren_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueChildrenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                return this;
            }
            
            public GetValueChildren_Res.Builder getGetValueChildrenBuilder() {
                this.bitField0_ |= 0x2000;
                this.onChanged();
                return (GetValueChildren_Res.Builder)this.q().getBuilder();
            }
            
            public GetValueChildren_ResOrBuilder getGetValueChildrenOrBuilder() {
                try {
                    if (this.getValueChildrenBuilder_ != null) {
                        return (GetValueChildren_ResOrBuilder)this.getValueChildrenBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueChildren_;
            }
            
            private SingleFieldBuilder<GetValueChildren_Res, GetValueChildren_Res.Builder, GetValueChildren_ResOrBuilder> q() {
                try {
                    if (this.getValueChildrenBuilder_ == null) {
                        this.getValueChildrenBuilder_ = (SingleFieldBuilder<GetValueChildren_Res, GetValueChildren_Res.Builder, GetValueChildren_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueChildren_, this.getParentForChildren(), this.isClean());
                        this.getValueChildren_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueChildrenBuilder_;
            }
            
            public boolean hasGetVars() {
                try {
                    if ((this.bitField0_ & 0x4000) == 0x4000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetVars_Res getGetVars() {
                try {
                    if (this.getVarsBuilder_ == null) {
                        return this.getVars_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetVars_Res)this.getVarsBuilder_.getMessage();
            }
            
            public Builder setGetVars(final GetVars_Res getVars_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getVarsBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetVars_Res getVars_Res2 = getVars_Res;
                                if (getVars_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetVars_Res getVars_Res2 = getVars_Res;
                                if (getVars_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getVars_ = getVars_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getVarsBuilder_.setMessage((GeneratedMessage)getVars_Res);
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder setGetVars(final GetVars_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            this.getVars_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getVarsBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder mergeGetVars(final GetVars_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVarsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       82
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: sipush          16384
                //    14: iand           
                //    15: sipush          16384
                //    18: if_icmpne       70
                //    21: goto            28
                //    24: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    27: athrow         
                //    28: aload_0        
                //    29: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    32: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    35: if_acmpeq       70
                //    38: goto            45
                //    41: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    44: athrow         
                //    45: aload_0        
                //    46: aload_0        
                //    47: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    50: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder;
                //    53: aload_1        
                //    54: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder;
                //    57: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    60: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    63: goto            75
                //    66: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    69: athrow         
                //    70: aload_0        
                //    71: aload_1        
                //    72: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVars_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetVars_Res;
                //    75: aload_0        
                //    76: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    79: goto            91
                //    82: aload_0        
                //    83: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getVarsBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    86: aload_1        
                //    87: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    90: pop            
                //    91: aload_0        
                //    92: dup            
                //    93: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    96: sipush          16384
                //    99: ior            
                //   100: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   103: aload_0        
                //   104: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      21     24     28     Ljava/lang/NullPointerException;
                //  7      38     41     45     Ljava/lang/NullPointerException;
                //  28     66     66     70     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0028:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetVars() {
                Label_0033: {
                    try {
                        if (this.getVarsBuilder_ == null) {
                            this.getVars_ = GetVars_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getVarsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFBFFF;
                return this;
            }
            
            public GetVars_Res.Builder getGetVarsBuilder() {
                this.bitField0_ |= 0x4000;
                this.onChanged();
                return (GetVars_Res.Builder)this.f().getBuilder();
            }
            
            public GetVars_ResOrBuilder getGetVarsOrBuilder() {
                try {
                    if (this.getVarsBuilder_ != null) {
                        return (GetVars_ResOrBuilder)this.getVarsBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getVars_;
            }
            
            private SingleFieldBuilder<GetVars_Res, GetVars_Res.Builder, GetVars_ResOrBuilder> f() {
                try {
                    if (this.getVarsBuilder_ == null) {
                        this.getVarsBuilder_ = (SingleFieldBuilder<GetVars_Res, GetVars_Res.Builder, GetVars_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getVars_, this.getParentForChildren(), this.isClean());
                        this.getVars_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getVarsBuilder_;
            }
            
            public boolean hasHandleConsoleCommand() {
                try {
                    if ((this.bitField0_ & 0x8000) == 0x8000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleConsoleCommand_Res getHandleConsoleCommand() {
                try {
                    if (this.handleConsoleCommandBuilder_ == null) {
                        return this.handleConsoleCommand_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleConsoleCommand_Res)this.handleConsoleCommandBuilder_.getMessage();
            }
            
            public Builder setHandleConsoleCommand(final HandleConsoleCommand_Res handleConsoleCommand_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleConsoleCommandBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleConsoleCommand_Res handleConsoleCommand_Res2 = handleConsoleCommand_Res;
                                if (handleConsoleCommand_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleConsoleCommand_Res handleConsoleCommand_Res2 = handleConsoleCommand_Res;
                                if (handleConsoleCommand_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleConsoleCommand_ = handleConsoleCommand_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleConsoleCommandBuilder_.setMessage((GeneratedMessage)handleConsoleCommand_Res);
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder setHandleConsoleCommand(final HandleConsoleCommand_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            this.handleConsoleCommand_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleConsoleCommandBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder mergeHandleConsoleCommand(final HandleConsoleCommand_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             32768
                //    13: iand           
                //    14: ldc             32768
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleConsoleCommand_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleConsoleCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             32768
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleConsoleCommand() {
                Label_0033: {
                    try {
                        if (this.handleConsoleCommandBuilder_ == null) {
                            this.handleConsoleCommand_ = HandleConsoleCommand_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleConsoleCommandBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFF7FFF;
                return this;
            }
            
            public HandleConsoleCommand_Res.Builder getHandleConsoleCommandBuilder() {
                this.bitField0_ |= 0x8000;
                this.onChanged();
                return (HandleConsoleCommand_Res.Builder)this.H().getBuilder();
            }
            
            public HandleConsoleCommand_ResOrBuilder getHandleConsoleCommandOrBuilder() {
                try {
                    if (this.handleConsoleCommandBuilder_ != null) {
                        return (HandleConsoleCommand_ResOrBuilder)this.handleConsoleCommandBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleConsoleCommand_;
            }
            
            private SingleFieldBuilder<HandleConsoleCommand_Res, HandleConsoleCommand_Res.Builder, HandleConsoleCommand_ResOrBuilder> H() {
                try {
                    if (this.handleConsoleCommandBuilder_ == null) {
                        this.handleConsoleCommandBuilder_ = (SingleFieldBuilder<HandleConsoleCommand_Res, HandleConsoleCommand_Res.Builder, HandleConsoleCommand_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleConsoleCommand_, this.getParentForChildren(), this.isClean());
                        this.handleConsoleCommand_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleConsoleCommandBuilder_;
            }
            
            public boolean hasHandleCompletion() {
                try {
                    if ((this.bitField0_ & 0x10000) == 0x10000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleCompletion_Res getHandleCompletion() {
                try {
                    if (this.handleCompletionBuilder_ == null) {
                        return this.handleCompletion_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleCompletion_Res)this.handleCompletionBuilder_.getMessage();
            }
            
            public Builder setHandleCompletion(final HandleCompletion_Res handleCompletion_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleCompletionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleCompletion_Res handleCompletion_Res2 = handleCompletion_Res;
                                if (handleCompletion_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleCompletion_Res handleCompletion_Res2 = handleCompletion_Res;
                                if (handleCompletion_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleCompletion_ = handleCompletion_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleCompletionBuilder_.setMessage((GeneratedMessage)handleCompletion_Res);
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder setHandleCompletion(final HandleCompletion_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            this.handleCompletion_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleCompletionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder mergeHandleCompletion(final HandleCompletion_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             65536
                //    13: iand           
                //    14: ldc             65536
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletion_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleCompletion_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleCompletionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             65536
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleCompletion() {
                Label_0033: {
                    try {
                        if (this.handleCompletionBuilder_ == null) {
                            this.handleCompletion_ = HandleCompletion_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleCompletionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFEFFFF;
                return this;
            }
            
            public HandleCompletion_Res.Builder getHandleCompletionBuilder() {
                this.bitField0_ |= 0x10000;
                this.onChanged();
                return (HandleCompletion_Res.Builder)this.A().getBuilder();
            }
            
            public HandleCompletion_ResOrBuilder getHandleCompletionOrBuilder() {
                try {
                    if (this.handleCompletionBuilder_ != null) {
                        return (HandleCompletion_ResOrBuilder)this.handleCompletionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleCompletion_;
            }
            
            private SingleFieldBuilder<HandleCompletion_Res, HandleCompletion_Res.Builder, HandleCompletion_ResOrBuilder> A() {
                try {
                    if (this.handleCompletionBuilder_ == null) {
                        this.handleCompletionBuilder_ = (SingleFieldBuilder<HandleCompletion_Res, HandleCompletion_Res.Builder, HandleCompletion_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleCompletion_, this.getParentForChildren(), this.isClean());
                        this.handleCompletion_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleCompletionBuilder_;
            }
            
            public boolean hasAttach() {
                try {
                    if ((this.bitField0_ & 0x20000) == 0x20000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Attach_Res getAttach() {
                try {
                    if (this.attachBuilder_ == null) {
                        return this.attach_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Attach_Res)this.attachBuilder_.getMessage();
            }
            
            public Builder setAttach(final Attach_Res attach_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.attachBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Attach_Res attach_Res2 = attach_Res;
                                if (attach_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Attach_Res attach_Res2 = attach_Res;
                                if (attach_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.attach_ = attach_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.attachBuilder_.setMessage((GeneratedMessage)attach_Res);
                }
                this.bitField0_ |= 0x20000;
                return this;
            }
            
            public Builder setAttach(final Attach_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.attachBuilder_ == null) {
                            this.attach_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20000;
                return this;
            }
            
            public Builder mergeAttach(final Attach_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             131072
                //    13: iand           
                //    14: ldc             131072
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Attach_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             131072
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAttach() {
                Label_0033: {
                    try {
                        if (this.attachBuilder_ == null) {
                            this.attach_ = Attach_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFDFFFF;
                return this;
            }
            
            public Attach_Res.Builder getAttachBuilder() {
                this.bitField0_ |= 0x20000;
                this.onChanged();
                return (Attach_Res.Builder)this.G().getBuilder();
            }
            
            public Attach_ResOrBuilder getAttachOrBuilder() {
                try {
                    if (this.attachBuilder_ != null) {
                        return (Attach_ResOrBuilder)this.attachBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attach_;
            }
            
            private SingleFieldBuilder<Attach_Res, Attach_Res.Builder, Attach_ResOrBuilder> G() {
                try {
                    if (this.attachBuilder_ == null) {
                        this.attachBuilder_ = (SingleFieldBuilder<Attach_Res, Attach_Res.Builder, Attach_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.attach_, this.getParentForChildren(), this.isClean());
                        this.attach_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachBuilder_;
            }
            
            public boolean hasAttachByName() {
                try {
                    if ((this.bitField0_ & 0x40000) == 0x40000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AttachByName_Res getAttachByName() {
                try {
                    if (this.attachByNameBuilder_ == null) {
                        return this.attachByName_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AttachByName_Res)this.attachByNameBuilder_.getMessage();
            }
            
            public Builder setAttachByName(final AttachByName_Res attachByName_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.attachByNameBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AttachByName_Res attachByName_Res2 = attachByName_Res;
                                if (attachByName_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AttachByName_Res attachByName_Res2 = attachByName_Res;
                                if (attachByName_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.attachByName_ = attachByName_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.attachByNameBuilder_.setMessage((GeneratedMessage)attachByName_Res);
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder setAttachByName(final AttachByName_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            this.attachByName_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachByNameBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder mergeAttachByName(final AttachByName_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByNameBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             262144
                //    13: iand           
                //    14: ldc             262144
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByName_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AttachByName_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.attachByNameBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             262144
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAttachByName() {
                Label_0033: {
                    try {
                        if (this.attachByNameBuilder_ == null) {
                            this.attachByName_ = AttachByName_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.attachByNameBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFBFFFF;
                return this;
            }
            
            public AttachByName_Res.Builder getAttachByNameBuilder() {
                this.bitField0_ |= 0x40000;
                this.onChanged();
                return (AttachByName_Res.Builder)this.m().getBuilder();
            }
            
            public AttachByName_ResOrBuilder getAttachByNameOrBuilder() {
                try {
                    if (this.attachByNameBuilder_ != null) {
                        return (AttachByName_ResOrBuilder)this.attachByNameBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachByName_;
            }
            
            private SingleFieldBuilder<AttachByName_Res, AttachByName_Res.Builder, AttachByName_ResOrBuilder> m() {
                try {
                    if (this.attachByNameBuilder_ == null) {
                        this.attachByNameBuilder_ = (SingleFieldBuilder<AttachByName_Res, AttachByName_Res.Builder, AttachByName_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.attachByName_, this.getParentForChildren(), this.isClean());
                        this.attachByName_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.attachByNameBuilder_;
            }
            
            public boolean hasDispatchInput() {
                try {
                    if ((this.bitField0_ & 0x80000) == 0x80000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public DispatchInput_Res getDispatchInput() {
                try {
                    if (this.dispatchInputBuilder_ == null) {
                        return this.dispatchInput_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (DispatchInput_Res)this.dispatchInputBuilder_.getMessage();
            }
            
            public Builder setDispatchInput(final DispatchInput_Res dispatchInput_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.dispatchInputBuilder_ != null) {
                                    break Label_0042;
                                }
                                final DispatchInput_Res dispatchInput_Res2 = dispatchInput_Res;
                                if (dispatchInput_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final DispatchInput_Res dispatchInput_Res2 = dispatchInput_Res;
                                if (dispatchInput_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.dispatchInput_ = dispatchInput_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.dispatchInputBuilder_.setMessage((GeneratedMessage)dispatchInput_Res);
                }
                this.bitField0_ |= 0x80000;
                return this;
            }
            
            public Builder setDispatchInput(final DispatchInput_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            this.dispatchInput_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.dispatchInputBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x80000;
                return this;
            }
            
            public Builder mergeDispatchInput(final DispatchInput_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInputBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             524288
                //    13: iand           
                //    14: ldc             524288
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInput_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$DispatchInput_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.dispatchInputBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             524288
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearDispatchInput() {
                Label_0033: {
                    try {
                        if (this.dispatchInputBuilder_ == null) {
                            this.dispatchInput_ = DispatchInput_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.dispatchInputBuilder_.clear();
                }
                this.bitField0_ &= 0xFFF7FFFF;
                return this;
            }
            
            public DispatchInput_Res.Builder getDispatchInputBuilder() {
                this.bitField0_ |= 0x80000;
                this.onChanged();
                return (DispatchInput_Res.Builder)this.n().getBuilder();
            }
            
            public DispatchInput_ResOrBuilder getDispatchInputOrBuilder() {
                try {
                    if (this.dispatchInputBuilder_ != null) {
                        return (DispatchInput_ResOrBuilder)this.dispatchInputBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.dispatchInput_;
            }
            
            private SingleFieldBuilder<DispatchInput_Res, DispatchInput_Res.Builder, DispatchInput_ResOrBuilder> n() {
                try {
                    if (this.dispatchInputBuilder_ == null) {
                        this.dispatchInputBuilder_ = (SingleFieldBuilder<DispatchInput_Res, DispatchInput_Res.Builder, DispatchInput_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.dispatchInput_, this.getParentForChildren(), this.isClean());
                        this.dispatchInput_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.dispatchInputBuilder_;
            }
            
            public boolean hasAddWatchpoint() {
                try {
                    if ((this.bitField0_ & 0x100000) == 0x100000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public AddWatchpoint_Res getAddWatchpoint() {
                try {
                    if (this.addWatchpointBuilder_ == null) {
                        return this.addWatchpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (AddWatchpoint_Res)this.addWatchpointBuilder_.getMessage();
            }
            
            public Builder setAddWatchpoint(final AddWatchpoint_Res addWatchpoint_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.addWatchpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final AddWatchpoint_Res addWatchpoint_Res2 = addWatchpoint_Res;
                                if (addWatchpoint_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final AddWatchpoint_Res addWatchpoint_Res2 = addWatchpoint_Res;
                                if (addWatchpoint_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.addWatchpoint_ = addWatchpoint_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.addWatchpointBuilder_.setMessage((GeneratedMessage)addWatchpoint_Res);
                }
                this.bitField0_ |= 0x100000;
                return this;
            }
            
            public Builder setAddWatchpoint(final AddWatchpoint_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            this.addWatchpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addWatchpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x100000;
                return this;
            }
            
            public Builder mergeAddWatchpoint(final AddWatchpoint_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             1048576
                //    13: iand           
                //    14: ldc             1048576
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$AddWatchpoint_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.addWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             1048576
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearAddWatchpoint() {
                Label_0033: {
                    try {
                        if (this.addWatchpointBuilder_ == null) {
                            this.addWatchpoint_ = AddWatchpoint_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.addWatchpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFEFFFFF;
                return this;
            }
            
            public AddWatchpoint_Res.Builder getAddWatchpointBuilder() {
                this.bitField0_ |= 0x100000;
                this.onChanged();
                return (AddWatchpoint_Res.Builder)this.l().getBuilder();
            }
            
            public AddWatchpoint_ResOrBuilder getAddWatchpointOrBuilder() {
                try {
                    if (this.addWatchpointBuilder_ != null) {
                        return (AddWatchpoint_ResOrBuilder)this.addWatchpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addWatchpoint_;
            }
            
            private SingleFieldBuilder<AddWatchpoint_Res, AddWatchpoint_Res.Builder, AddWatchpoint_ResOrBuilder> l() {
                try {
                    if (this.addWatchpointBuilder_ == null) {
                        this.addWatchpointBuilder_ = (SingleFieldBuilder<AddWatchpoint_Res, AddWatchpoint_Res.Builder, AddWatchpoint_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.addWatchpoint_, this.getParentForChildren(), this.isClean());
                        this.addWatchpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.addWatchpointBuilder_;
            }
            
            public boolean hasRemoveWatchpoint() {
                try {
                    if ((this.bitField0_ & 0x200000) == 0x200000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public RemoveWatchpoint_Res getRemoveWatchpoint() {
                try {
                    if (this.removeWatchpointBuilder_ == null) {
                        return this.removeWatchpoint_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (RemoveWatchpoint_Res)this.removeWatchpointBuilder_.getMessage();
            }
            
            public Builder setRemoveWatchpoint(final RemoveWatchpoint_Res removeWatchpoint_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.removeWatchpointBuilder_ != null) {
                                    break Label_0042;
                                }
                                final RemoveWatchpoint_Res removeWatchpoint_Res2 = removeWatchpoint_Res;
                                if (removeWatchpoint_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final RemoveWatchpoint_Res removeWatchpoint_Res2 = removeWatchpoint_Res;
                                if (removeWatchpoint_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.removeWatchpoint_ = removeWatchpoint_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.removeWatchpointBuilder_.setMessage((GeneratedMessage)removeWatchpoint_Res);
                }
                this.bitField0_ |= 0x200000;
                return this;
            }
            
            public Builder setRemoveWatchpoint(final RemoveWatchpoint_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            this.removeWatchpoint_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeWatchpointBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x200000;
                return this;
            }
            
            public Builder mergeRemoveWatchpoint(final RemoveWatchpoint_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             2097152
                //    13: iand           
                //    14: ldc             2097152
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpoint_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$RemoveWatchpoint_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.removeWatchpointBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             2097152
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearRemoveWatchpoint() {
                Label_0033: {
                    try {
                        if (this.removeWatchpointBuilder_ == null) {
                            this.removeWatchpoint_ = RemoveWatchpoint_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.removeWatchpointBuilder_.clear();
                }
                this.bitField0_ &= 0xFFDFFFFF;
                return this;
            }
            
            public RemoveWatchpoint_Res.Builder getRemoveWatchpointBuilder() {
                this.bitField0_ |= 0x200000;
                this.onChanged();
                return (RemoveWatchpoint_Res.Builder)this.b().getBuilder();
            }
            
            public RemoveWatchpoint_ResOrBuilder getRemoveWatchpointOrBuilder() {
                try {
                    if (this.removeWatchpointBuilder_ != null) {
                        return (RemoveWatchpoint_ResOrBuilder)this.removeWatchpointBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeWatchpoint_;
            }
            
            private SingleFieldBuilder<RemoveWatchpoint_Res, RemoveWatchpoint_Res.Builder, RemoveWatchpoint_ResOrBuilder> b() {
                try {
                    if (this.removeWatchpointBuilder_ == null) {
                        this.removeWatchpointBuilder_ = (SingleFieldBuilder<RemoveWatchpoint_Res, RemoveWatchpoint_Res.Builder, RemoveWatchpoint_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.removeWatchpoint_, this.getParentForChildren(), this.isClean());
                        this.removeWatchpoint_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.removeWatchpointBuilder_;
            }
            
            public boolean hasDetach() {
                try {
                    if ((this.bitField0_ & 0x400000) == 0x400000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Detach_Res getDetach() {
                try {
                    if (this.detachBuilder_ == null) {
                        return this.detach_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Detach_Res)this.detachBuilder_.getMessage();
            }
            
            public Builder setDetach(final Detach_Res detach_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.detachBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Detach_Res detach_Res2 = detach_Res;
                                if (detach_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Detach_Res detach_Res2 = detach_Res;
                                if (detach_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.detach_ = detach_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.detachBuilder_.setMessage((GeneratedMessage)detach_Res);
                }
                this.bitField0_ |= 0x400000;
                return this;
            }
            
            public Builder setDetach(final Detach_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.detachBuilder_ == null) {
                            this.detach_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.detachBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x400000;
                return this;
            }
            
            public Builder mergeDetach(final Detach_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             4194304
                //    13: iand           
                //    14: ldc             4194304
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detach_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Detach_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.detachBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             4194304
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearDetach() {
                Label_0033: {
                    try {
                        if (this.detachBuilder_ == null) {
                            this.detach_ = Detach_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.detachBuilder_.clear();
                }
                this.bitField0_ &= 0xFFBFFFFF;
                return this;
            }
            
            public Detach_Res.Builder getDetachBuilder() {
                this.bitField0_ |= 0x400000;
                this.onChanged();
                return (Detach_Res.Builder)this.c().getBuilder();
            }
            
            public Detach_ResOrBuilder getDetachOrBuilder() {
                try {
                    if (this.detachBuilder_ != null) {
                        return (Detach_ResOrBuilder)this.detachBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.detach_;
            }
            
            private SingleFieldBuilder<Detach_Res, Detach_Res.Builder, Detach_ResOrBuilder> c() {
                try {
                    if (this.detachBuilder_ == null) {
                        this.detachBuilder_ = (SingleFieldBuilder<Detach_Res, Detach_Res.Builder, Detach_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.detach_, this.getParentForChildren(), this.isClean());
                        this.detach_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.detachBuilder_;
            }
            
            public boolean hasKill() {
                try {
                    if ((this.bitField0_ & 0x800000) == 0x800000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public Kill_Res getKill() {
                try {
                    if (this.killBuilder_ == null) {
                        return this.kill_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (Kill_Res)this.killBuilder_.getMessage();
            }
            
            public Builder setKill(final Kill_Res kill_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.killBuilder_ != null) {
                                    break Label_0042;
                                }
                                final Kill_Res kill_Res2 = kill_Res;
                                if (kill_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final Kill_Res kill_Res2 = kill_Res;
                                if (kill_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.kill_ = kill_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.killBuilder_.setMessage((GeneratedMessage)kill_Res);
                }
                this.bitField0_ |= 0x800000;
                return this;
            }
            
            public Builder setKill(final Kill_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.killBuilder_ == null) {
                            this.kill_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.killBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x800000;
                return this;
            }
            
            public Builder mergeKill(final Kill_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.killBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             8388608
                //    13: iand           
                //    14: ldc             8388608
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.kill_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$Kill_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.killBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             8388608
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearKill() {
                Label_0033: {
                    try {
                        if (this.killBuilder_ == null) {
                            this.kill_ = Kill_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.killBuilder_.clear();
                }
                this.bitField0_ &= 0xFF7FFFFF;
                return this;
            }
            
            public Kill_Res.Builder getKillBuilder() {
                this.bitField0_ |= 0x800000;
                this.onChanged();
                return (Kill_Res.Builder)this.g().getBuilder();
            }
            
            public Kill_ResOrBuilder getKillOrBuilder() {
                try {
                    if (this.killBuilder_ != null) {
                        return (Kill_ResOrBuilder)this.killBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.kill_;
            }
            
            private SingleFieldBuilder<Kill_Res, Kill_Res.Builder, Kill_ResOrBuilder> g() {
                try {
                    if (this.killBuilder_ == null) {
                        this.killBuilder_ = (SingleFieldBuilder<Kill_Res, Kill_Res.Builder, Kill_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.kill_, this.getParentForChildren(), this.isClean());
                        this.kill_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.killBuilder_;
            }
            
            public boolean hasGetChildrenCount() {
                try {
                    if ((this.bitField0_ & 0x1000000) == 0x1000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetChildrenCount_Res getGetChildrenCount() {
                try {
                    if (this.getChildrenCountBuilder_ == null) {
                        return this.getChildrenCount_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetChildrenCount_Res)this.getChildrenCountBuilder_.getMessage();
            }
            
            public Builder setGetChildrenCount(final GetChildrenCount_Res getChildrenCount_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getChildrenCountBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetChildrenCount_Res getChildrenCount_Res2 = getChildrenCount_Res;
                                if (getChildrenCount_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetChildrenCount_Res getChildrenCount_Res2 = getChildrenCount_Res;
                                if (getChildrenCount_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getChildrenCount_ = getChildrenCount_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getChildrenCountBuilder_.setMessage((GeneratedMessage)getChildrenCount_Res);
                }
                this.bitField0_ |= 0x1000000;
                return this;
            }
            
            public Builder setGetChildrenCount(final GetChildrenCount_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            this.getChildrenCount_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getChildrenCountBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x1000000;
                return this;
            }
            
            public Builder mergeGetChildrenCount(final GetChildrenCount_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCountBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             16777216
                //    13: iand           
                //    14: ldc             16777216
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCount_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetChildrenCount_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getChildrenCountBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             16777216
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetChildrenCount() {
                Label_0033: {
                    try {
                        if (this.getChildrenCountBuilder_ == null) {
                            this.getChildrenCount_ = GetChildrenCount_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getChildrenCountBuilder_.clear();
                }
                this.bitField0_ &= 0xFEFFFFFF;
                return this;
            }
            
            public GetChildrenCount_Res.Builder getGetChildrenCountBuilder() {
                this.bitField0_ |= 0x1000000;
                this.onChanged();
                return (GetChildrenCount_Res.Builder)this.o().getBuilder();
            }
            
            public GetChildrenCount_ResOrBuilder getGetChildrenCountOrBuilder() {
                try {
                    if (this.getChildrenCountBuilder_ != null) {
                        return (GetChildrenCount_ResOrBuilder)this.getChildrenCountBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getChildrenCount_;
            }
            
            private SingleFieldBuilder<GetChildrenCount_Res, GetChildrenCount_Res.Builder, GetChildrenCount_ResOrBuilder> o() {
                try {
                    if (this.getChildrenCountBuilder_ == null) {
                        this.getChildrenCountBuilder_ = (SingleFieldBuilder<GetChildrenCount_Res, GetChildrenCount_Res.Builder, GetChildrenCount_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getChildrenCount_, this.getParentForChildren(), this.isClean());
                        this.getChildrenCount_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getChildrenCountBuilder_;
            }
            
            public boolean hasGetArraySlice() {
                try {
                    if ((this.bitField0_ & 0x2000000) == 0x2000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetArraySlice_Res getGetArraySlice() {
                try {
                    if (this.getArraySliceBuilder_ == null) {
                        return this.getArraySlice_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetArraySlice_Res)this.getArraySliceBuilder_.getMessage();
            }
            
            public Builder setGetArraySlice(final GetArraySlice_Res getArraySlice_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getArraySliceBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetArraySlice_Res getArraySlice_Res2 = getArraySlice_Res;
                                if (getArraySlice_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetArraySlice_Res getArraySlice_Res2 = getArraySlice_Res;
                                if (getArraySlice_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getArraySlice_ = getArraySlice_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getArraySliceBuilder_.setMessage((GeneratedMessage)getArraySlice_Res);
                }
                this.bitField0_ |= 0x2000000;
                return this;
            }
            
            public Builder setGetArraySlice(final GetArraySlice_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            this.getArraySlice_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getArraySliceBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x2000000;
                return this;
            }
            
            public Builder mergeGetArraySlice(final GetArraySlice_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySliceBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             33554432
                //    13: iand           
                //    14: ldc             33554432
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySlice_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetArraySlice_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getArraySliceBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             33554432
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetArraySlice() {
                Label_0033: {
                    try {
                        if (this.getArraySliceBuilder_ == null) {
                            this.getArraySlice_ = GetArraySlice_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getArraySliceBuilder_.clear();
                }
                this.bitField0_ &= 0xFDFFFFFF;
                return this;
            }
            
            public GetArraySlice_Res.Builder getGetArraySliceBuilder() {
                this.bitField0_ |= 0x2000000;
                this.onChanged();
                return (GetArraySlice_Res.Builder)this.d().getBuilder();
            }
            
            public GetArraySlice_ResOrBuilder getGetArraySliceOrBuilder() {
                try {
                    if (this.getArraySliceBuilder_ != null) {
                        return (GetArraySlice_ResOrBuilder)this.getArraySliceBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getArraySlice_;
            }
            
            private SingleFieldBuilder<GetArraySlice_Res, GetArraySlice_Res.Builder, GetArraySlice_ResOrBuilder> d() {
                try {
                    if (this.getArraySliceBuilder_ == null) {
                        this.getArraySliceBuilder_ = (SingleFieldBuilder<GetArraySlice_Res, GetArraySlice_Res.Builder, GetArraySlice_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getArraySlice_, this.getParentForChildren(), this.isClean());
                        this.getArraySlice_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getArraySliceBuilder_;
            }
            
            public boolean hasGetValueData() {
                try {
                    if ((this.bitField0_ & 0x4000000) == 0x4000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueData_Res getGetValueData() {
                try {
                    if (this.getValueDataBuilder_ == null) {
                        return this.getValueData_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueData_Res)this.getValueDataBuilder_.getMessage();
            }
            
            public Builder setGetValueData(final GetValueData_Res getValueData_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueDataBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueData_Res getValueData_Res2 = getValueData_Res;
                                if (getValueData_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueData_Res getValueData_Res2 = getValueData_Res;
                                if (getValueData_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueData_ = getValueData_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueDataBuilder_.setMessage((GeneratedMessage)getValueData_Res);
                }
                this.bitField0_ |= 0x4000000;
                return this;
            }
            
            public Builder setGetValueData(final GetValueData_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            this.getValueData_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDataBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x4000000;
                return this;
            }
            
            public Builder mergeGetValueData(final GetValueData_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDataBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             67108864
                //    13: iand           
                //    14: ldc             67108864
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueData_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueData_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDataBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             67108864
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueData() {
                Label_0033: {
                    try {
                        if (this.getValueDataBuilder_ == null) {
                            this.getValueData_ = GetValueData_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDataBuilder_.clear();
                }
                this.bitField0_ &= 0xFBFFFFFF;
                return this;
            }
            
            public GetValueData_Res.Builder getGetValueDataBuilder() {
                this.bitField0_ |= 0x4000000;
                this.onChanged();
                return (GetValueData_Res.Builder)this.w().getBuilder();
            }
            
            public GetValueData_ResOrBuilder getGetValueDataOrBuilder() {
                try {
                    if (this.getValueDataBuilder_ != null) {
                        return (GetValueData_ResOrBuilder)this.getValueDataBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueData_;
            }
            
            private SingleFieldBuilder<GetValueData_Res, GetValueData_Res.Builder, GetValueData_ResOrBuilder> w() {
                try {
                    if (this.getValueDataBuilder_ == null) {
                        this.getValueDataBuilder_ = (SingleFieldBuilder<GetValueData_Res, GetValueData_Res.Builder, GetValueData_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueData_, this.getParentForChildren(), this.isClean());
                        this.getValueData_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDataBuilder_;
            }
            
            public boolean hasGetValueDescription() {
                try {
                    if ((this.bitField0_ & 0x8000000) == 0x8000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueDescription_Res getGetValueDescription() {
                try {
                    if (this.getValueDescriptionBuilder_ == null) {
                        return this.getValueDescription_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueDescription_Res)this.getValueDescriptionBuilder_.getMessage();
            }
            
            public Builder setGetValueDescription(final GetValueDescription_Res getValueDescription_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueDescriptionBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueDescription_Res getValueDescription_Res2 = getValueDescription_Res;
                                if (getValueDescription_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueDescription_Res getValueDescription_Res2 = getValueDescription_Res;
                                if (getValueDescription_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueDescription_ = getValueDescription_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueDescriptionBuilder_.setMessage((GeneratedMessage)getValueDescription_Res);
                }
                this.bitField0_ |= 0x8000000;
                return this;
            }
            
            public Builder setGetValueDescription(final GetValueDescription_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            this.getValueDescription_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDescriptionBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x8000000;
                return this;
            }
            
            public Builder mergeGetValueDescription(final GetValueDescription_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescriptionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             134217728
                //    13: iand           
                //    14: ldc             134217728
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescription_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueDescription_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueDescriptionBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             134217728
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueDescription() {
                Label_0033: {
                    try {
                        if (this.getValueDescriptionBuilder_ == null) {
                            this.getValueDescription_ = GetValueDescription_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueDescriptionBuilder_.clear();
                }
                this.bitField0_ &= 0xF7FFFFFF;
                return this;
            }
            
            public GetValueDescription_Res.Builder getGetValueDescriptionBuilder() {
                this.bitField0_ |= 0x8000000;
                this.onChanged();
                return (GetValueDescription_Res.Builder)this.s().getBuilder();
            }
            
            public GetValueDescription_ResOrBuilder getGetValueDescriptionOrBuilder() {
                try {
                    if (this.getValueDescriptionBuilder_ != null) {
                        return (GetValueDescription_ResOrBuilder)this.getValueDescriptionBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDescription_;
            }
            
            private SingleFieldBuilder<GetValueDescription_Res, GetValueDescription_Res.Builder, GetValueDescription_ResOrBuilder> s() {
                try {
                    if (this.getValueDescriptionBuilder_ == null) {
                        this.getValueDescriptionBuilder_ = (SingleFieldBuilder<GetValueDescription_Res, GetValueDescription_Res.Builder, GetValueDescription_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueDescription_, this.getParentForChildren(), this.isClean());
                        this.getValueDescription_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueDescriptionBuilder_;
            }
            
            public boolean hasValuesFilteringPolicy() {
                try {
                    if ((this.bitField0_ & 0x10000000) == 0x10000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ValuesFilteringPolicy_Res getValuesFilteringPolicy() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ == null) {
                        return this.valuesFilteringPolicy_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ValuesFilteringPolicy_Res)this.valuesFilteringPolicyBuilder_.getMessage();
            }
            
            public Builder setValuesFilteringPolicy(final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.valuesFilteringPolicyBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res2 = valuesFilteringPolicy_Res;
                                if (valuesFilteringPolicy_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ValuesFilteringPolicy_Res valuesFilteringPolicy_Res2 = valuesFilteringPolicy_Res;
                                if (valuesFilteringPolicy_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.valuesFilteringPolicy_ = valuesFilteringPolicy_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.valuesFilteringPolicyBuilder_.setMessage((GeneratedMessage)valuesFilteringPolicy_Res);
                }
                this.bitField0_ |= 0x10000000;
                return this;
            }
            
            public Builder setValuesFilteringPolicy(final ValuesFilteringPolicy_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            this.valuesFilteringPolicy_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valuesFilteringPolicyBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x10000000;
                return this;
            }
            
            public Builder mergeValuesFilteringPolicy(final ValuesFilteringPolicy_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicyBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             268435456
                //    13: iand           
                //    14: ldc             268435456
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicy_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ValuesFilteringPolicy_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.valuesFilteringPolicyBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             268435456
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearValuesFilteringPolicy() {
                Label_0033: {
                    try {
                        if (this.valuesFilteringPolicyBuilder_ == null) {
                            this.valuesFilteringPolicy_ = ValuesFilteringPolicy_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.valuesFilteringPolicyBuilder_.clear();
                }
                this.bitField0_ &= 0xEFFFFFFF;
                return this;
            }
            
            public ValuesFilteringPolicy_Res.Builder getValuesFilteringPolicyBuilder() {
                this.bitField0_ |= 0x10000000;
                this.onChanged();
                return (ValuesFilteringPolicy_Res.Builder)this.D().getBuilder();
            }
            
            public ValuesFilteringPolicy_ResOrBuilder getValuesFilteringPolicyOrBuilder() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ != null) {
                        return (ValuesFilteringPolicy_ResOrBuilder)this.valuesFilteringPolicyBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valuesFilteringPolicy_;
            }
            
            private SingleFieldBuilder<ValuesFilteringPolicy_Res, ValuesFilteringPolicy_Res.Builder, ValuesFilteringPolicy_ResOrBuilder> D() {
                try {
                    if (this.valuesFilteringPolicyBuilder_ == null) {
                        this.valuesFilteringPolicyBuilder_ = (SingleFieldBuilder<ValuesFilteringPolicy_Res, ValuesFilteringPolicy_Res.Builder, ValuesFilteringPolicy_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.valuesFilteringPolicy_, this.getParentForChildren(), this.isClean());
                        this.valuesFilteringPolicy_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.valuesFilteringPolicyBuilder_;
            }
            
            public boolean hasConnectPlatform() {
                try {
                    if ((this.bitField0_ & 0x20000000) == 0x20000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ConnectPlatform_Res getConnectPlatform() {
                try {
                    if (this.connectPlatformBuilder_ == null) {
                        return this.connectPlatform_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ConnectPlatform_Res)this.connectPlatformBuilder_.getMessage();
            }
            
            public Builder setConnectPlatform(final ConnectPlatform_Res connectPlatform_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.connectPlatformBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ConnectPlatform_Res connectPlatform_Res2 = connectPlatform_Res;
                                if (connectPlatform_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ConnectPlatform_Res connectPlatform_Res2 = connectPlatform_Res;
                                if (connectPlatform_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.connectPlatform_ = connectPlatform_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.connectPlatformBuilder_.setMessage((GeneratedMessage)connectPlatform_Res);
                }
                this.bitField0_ |= 0x20000000;
                return this;
            }
            
            public Builder setConnectPlatform(final ConnectPlatform_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            this.connectPlatform_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.connectPlatformBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x20000000;
                return this;
            }
            
            public Builder mergeConnectPlatform(final ConnectPlatform_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatformBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             536870912
                //    13: iand           
                //    14: ldc             536870912
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatform_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ConnectPlatform_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.connectPlatformBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             536870912
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearConnectPlatform() {
                Label_0033: {
                    try {
                        if (this.connectPlatformBuilder_ == null) {
                            this.connectPlatform_ = ConnectPlatform_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.connectPlatformBuilder_.clear();
                }
                this.bitField0_ &= 0xDFFFFFFF;
                return this;
            }
            
            public ConnectPlatform_Res.Builder getConnectPlatformBuilder() {
                this.bitField0_ |= 0x20000000;
                this.onChanged();
                return (ConnectPlatform_Res.Builder)this.E().getBuilder();
            }
            
            public ConnectPlatform_ResOrBuilder getConnectPlatformOrBuilder() {
                try {
                    if (this.connectPlatformBuilder_ != null) {
                        return (ConnectPlatform_ResOrBuilder)this.connectPlatformBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.connectPlatform_;
            }
            
            private SingleFieldBuilder<ConnectPlatform_Res, ConnectPlatform_Res.Builder, ConnectPlatform_ResOrBuilder> E() {
                try {
                    if (this.connectPlatformBuilder_ == null) {
                        this.connectPlatformBuilder_ = (SingleFieldBuilder<ConnectPlatform_Res, ConnectPlatform_Res.Builder, ConnectPlatform_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.connectPlatform_, this.getParentForChildren(), this.isClean());
                        this.connectPlatform_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.connectPlatformBuilder_;
            }
            
            public boolean hasGetValueAddress() {
                try {
                    if ((this.bitField0_ & 0x40000000) == 0x40000000) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public GetValueAddress_Res getGetValueAddress() {
                try {
                    if (this.getValueAddressBuilder_ == null) {
                        return this.getValueAddress_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (GetValueAddress_Res)this.getValueAddressBuilder_.getMessage();
            }
            
            public Builder setGetValueAddress(final GetValueAddress_Res getValueAddress_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.getValueAddressBuilder_ != null) {
                                    break Label_0042;
                                }
                                final GetValueAddress_Res getValueAddress_Res2 = getValueAddress_Res;
                                if (getValueAddress_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final GetValueAddress_Res getValueAddress_Res2 = getValueAddress_Res;
                                if (getValueAddress_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.getValueAddress_ = getValueAddress_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.getValueAddressBuilder_.setMessage((GeneratedMessage)getValueAddress_Res);
                }
                this.bitField0_ |= 0x40000000;
                return this;
            }
            
            public Builder setGetValueAddress(final GetValueAddress_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            this.getValueAddress_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueAddressBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= 0x40000000;
                return this;
            }
            
            public Builder mergeGetValueAddress(final GetValueAddress_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddressBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             1073741824
                //    13: iand           
                //    14: ldc             1073741824
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddress_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$GetValueAddress_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.getValueAddressBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             1073741824
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearGetValueAddress() {
                Label_0033: {
                    try {
                        if (this.getValueAddressBuilder_ == null) {
                            this.getValueAddress_ = GetValueAddress_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.getValueAddressBuilder_.clear();
                }
                this.bitField0_ &= 0xBFFFFFFF;
                return this;
            }
            
            public GetValueAddress_Res.Builder getGetValueAddressBuilder() {
                this.bitField0_ |= 0x40000000;
                this.onChanged();
                return (GetValueAddress_Res.Builder)this.z().getBuilder();
            }
            
            public GetValueAddress_ResOrBuilder getGetValueAddressOrBuilder() {
                try {
                    if (this.getValueAddressBuilder_ != null) {
                        return (GetValueAddress_ResOrBuilder)this.getValueAddressBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueAddress_;
            }
            
            private SingleFieldBuilder<GetValueAddress_Res, GetValueAddress_Res.Builder, GetValueAddress_ResOrBuilder> z() {
                try {
                    if (this.getValueAddressBuilder_ == null) {
                        this.getValueAddressBuilder_ = (SingleFieldBuilder<GetValueAddress_Res, GetValueAddress_Res.Builder, GetValueAddress_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.getValueAddress_, this.getParentForChildren(), this.isClean());
                        this.getValueAddress_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.getValueAddressBuilder_;
            }
            
            public boolean hasHandleSignal() {
                try {
                    if ((this.bitField0_ & Integer.MIN_VALUE) == Integer.MIN_VALUE) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public HandleSignal_Res getHandleSignal() {
                try {
                    if (this.handleSignalBuilder_ == null) {
                        return this.handleSignal_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (HandleSignal_Res)this.handleSignalBuilder_.getMessage();
            }
            
            public Builder setHandleSignal(final HandleSignal_Res handleSignal_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.handleSignalBuilder_ != null) {
                                    break Label_0042;
                                }
                                final HandleSignal_Res handleSignal_Res2 = handleSignal_Res;
                                if (handleSignal_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final HandleSignal_Res handleSignal_Res2 = handleSignal_Res;
                                if (handleSignal_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.handleSignal_ = handleSignal_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.handleSignalBuilder_.setMessage((GeneratedMessage)handleSignal_Res);
                }
                this.bitField0_ |= Integer.MIN_VALUE;
                return this;
            }
            
            public Builder setHandleSignal(final HandleSignal_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            this.handleSignal_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleSignalBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField0_ |= Integer.MIN_VALUE;
                return this;
            }
            
            public Builder mergeHandleSignal(final HandleSignal_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignalBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       80
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    11: ldc             -2147483648
                //    13: iand           
                //    14: ldc             -2147483648
                //    16: if_icmpne       68
                //    19: goto            26
                //    22: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    25: athrow         
                //    26: aload_0        
                //    27: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    30: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    33: if_acmpeq       68
                //    36: goto            43
                //    39: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    42: athrow         
                //    43: aload_0        
                //    44: aload_0        
                //    45: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    48: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder;
                //    51: aload_1        
                //    52: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder;
                //    55: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    58: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    61: goto            73
                //    64: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    67: athrow         
                //    68: aload_0        
                //    69: aload_1        
                //    70: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignal_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$HandleSignal_Res;
                //    73: aload_0        
                //    74: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    77: goto            89
                //    80: aload_0        
                //    81: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.handleSignalBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    84: aload_1        
                //    85: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    88: pop            
                //    89: aload_0        
                //    90: dup            
                //    91: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //    94: ldc             -2147483648
                //    96: ior            
                //    97: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField0_:I
                //   100: aload_0        
                //   101: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      19     22     26     Ljava/lang/NullPointerException;
                //  7      36     39     43     Ljava/lang/NullPointerException;
                //  26     64     64     68     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0026:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearHandleSignal() {
                Label_0033: {
                    try {
                        if (this.handleSignalBuilder_ == null) {
                            this.handleSignal_ = HandleSignal_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.handleSignalBuilder_.clear();
                }
                this.bitField0_ &= Integer.MAX_VALUE;
                return this;
            }
            
            public HandleSignal_Res.Builder getHandleSignalBuilder() {
                this.bitField0_ |= Integer.MIN_VALUE;
                this.onChanged();
                return (HandleSignal_Res.Builder)this.u().getBuilder();
            }
            
            public HandleSignal_ResOrBuilder getHandleSignalOrBuilder() {
                try {
                    if (this.handleSignalBuilder_ != null) {
                        return (HandleSignal_ResOrBuilder)this.handleSignalBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleSignal_;
            }
            
            private SingleFieldBuilder<HandleSignal_Res, HandleSignal_Res.Builder, HandleSignal_ResOrBuilder> u() {
                try {
                    if (this.handleSignalBuilder_ == null) {
                        this.handleSignalBuilder_ = (SingleFieldBuilder<HandleSignal_Res, HandleSignal_Res.Builder, HandleSignal_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.handleSignal_, this.getParentForChildren(), this.isClean());
                        this.handleSignal_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.handleSignalBuilder_;
            }
            
            public boolean hasExecuteShellCommand() {
                try {
                    if ((this.bitField1_ & 0x1) == 0x1) {
                        return true;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return false;
            }
            
            public ExecuteShellCommand_Res getExecuteShellCommand() {
                try {
                    if (this.executeShellCommandBuilder_ == null) {
                        return this.executeShellCommand_;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return (ExecuteShellCommand_Res)this.executeShellCommandBuilder_.getMessage();
            }
            
            public Builder setExecuteShellCommand(final ExecuteShellCommand_Res executeShellCommand_Res) {
                Label_0051: {
                    Label_0042: {
                        Label_0018: {
                            try {
                                if (this.executeShellCommandBuilder_ != null) {
                                    break Label_0042;
                                }
                                final ExecuteShellCommand_Res executeShellCommand_Res2 = executeShellCommand_Res;
                                if (executeShellCommand_Res2 == null) {
                                    break Label_0018;
                                }
                                break Label_0018;
                            }
                            catch (NullPointerException ex) {
                                throw b(ex);
                            }
                            try {
                                final ExecuteShellCommand_Res executeShellCommand_Res2 = executeShellCommand_Res;
                                if (executeShellCommand_Res2 == null) {
                                    throw new NullPointerException();
                                }
                            }
                            catch (NullPointerException ex2) {
                                throw b(ex2);
                            }
                        }
                        this.executeShellCommand_ = executeShellCommand_Res;
                        this.onChanged();
                        break Label_0051;
                    }
                    this.executeShellCommandBuilder_.setMessage((GeneratedMessage)executeShellCommand_Res);
                }
                this.bitField1_ |= 0x1;
                return this;
            }
            
            public Builder setExecuteShellCommand(final ExecuteShellCommand_Res.Builder builder) {
                Label_0038: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            this.executeShellCommand_ = builder.build();
                            this.onChanged();
                            break Label_0038;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.executeShellCommandBuilder_.setMessage((GeneratedMessage)builder.build());
                }
                this.bitField1_ |= 0x1;
                return this;
            }
            
            public Builder mergeExecuteShellCommand(final ExecuteShellCommand_Res p0) {
                // 
                // This method could not be decompiled.
                // 
                // Original Bytecode:
                // 
                //     0: aload_0        
                //     1: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //     4: ifnonnull       78
                //     7: aload_0        
                //     8: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField1_:I
                //    11: iconst_1       
                //    12: iand           
                //    13: iconst_1       
                //    14: if_icmpne       66
                //    17: goto            24
                //    20: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    23: athrow         
                //    24: aload_0        
                //    25: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    28: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res.getDefaultInstance:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    31: if_acmpeq       66
                //    34: goto            41
                //    37: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    40: athrow         
                //    41: aload_0        
                //    42: aload_0        
                //    43: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    46: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res.newBuilder:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder;
                //    49: aload_1        
                //    50: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.mergeFrom:(Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;)Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder;
                //    53: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res$Builder.buildPartial:()Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    56: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    59: goto            71
                //    62: invokestatic    com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.b:(Ljava/lang/Exception;)Ljava/lang/Exception;
                //    65: athrow         
                //    66: aload_0        
                //    67: aload_1        
                //    68: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommand_:Lcom/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$ExecuteShellCommand_Res;
                //    71: aload_0        
                //    72: invokevirtual   com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.onChanged:()V
                //    75: goto            87
                //    78: aload_0        
                //    79: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.executeShellCommandBuilder_:Lcom/google/protobuf/SingleFieldBuilder;
                //    82: aload_1        
                //    83: invokevirtual   com/google/protobuf/SingleFieldBuilder.mergeFrom:(Lcom/google/protobuf/GeneratedMessage;)Lcom/google/protobuf/SingleFieldBuilder;
                //    86: pop            
                //    87: aload_0        
                //    88: dup            
                //    89: getfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField1_:I
                //    92: iconst_1       
                //    93: ior            
                //    94: putfield        com/jetbrains/cidr/execution/debugger/backend/lldb/auto_generated/Protocol$CompositeResponse$Builder.bitField1_:I
                //    97: aload_0        
                //    98: areturn        
                //    Exceptions:
                //  Try           Handler
                //  Start  End    Start  End    Type                            
                //  -----  -----  -----  -----  --------------------------------
                //  0      17     20     24     Ljava/lang/NullPointerException;
                //  7      34     37     41     Ljava/lang/NullPointerException;
                //  24     62     62     66     Ljava/lang/NullPointerException;
                // 
                // The error that occurred was:
                // 
                // java.lang.IllegalStateException: Expression is linked from several locations: Label_0024:
                //     at com.strobel.decompiler.ast.Error.expressionLinkedFromMultipleLocations(Error.java:27)
                //     at com.strobel.decompiler.ast.AstOptimizer.mergeDisparateObjectInitializations(AstOptimizer.java:2592)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:235)
                //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:42)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:214)
                //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:556)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
                //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
                //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
                //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
                //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
                // 
                throw new IllegalStateException("An error occurred while decompiling this method.");
            }
            
            public Builder clearExecuteShellCommand() {
                Label_0033: {
                    try {
                        if (this.executeShellCommandBuilder_ == null) {
                            this.executeShellCommand_ = ExecuteShellCommand_Res.getDefaultInstance();
                            this.onChanged();
                            break Label_0033;
                        }
                    }
                    catch (NullPointerException ex) {
                        throw b(ex);
                    }
                    this.executeShellCommandBuilder_.clear();
                }
                this.bitField1_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ExecuteShellCommand_Res.Builder getExecuteShellCommandBuilder() {
                this.bitField1_ |= 0x1;
                this.onChanged();
                return (ExecuteShellCommand_Res.Builder)this.t().getBuilder();
            }
            
            public ExecuteShellCommand_ResOrBuilder getExecuteShellCommandOrBuilder() {
                try {
                    if (this.executeShellCommandBuilder_ != null) {
                        return (ExecuteShellCommand_ResOrBuilder)this.executeShellCommandBuilder_.getMessageOrBuilder();
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.executeShellCommand_;
            }
            
            private SingleFieldBuilder<ExecuteShellCommand_Res, ExecuteShellCommand_Res.Builder, ExecuteShellCommand_ResOrBuilder> t() {
                try {
                    if (this.executeShellCommandBuilder_ == null) {
                        this.executeShellCommandBuilder_ = (SingleFieldBuilder<ExecuteShellCommand_Res, ExecuteShellCommand_Res.Builder, ExecuteShellCommand_ResOrBuilder>)new SingleFieldBuilder((GeneratedMessage)this.executeShellCommand_, this.getParentForChildren(), this.isClean());
                        this.executeShellCommand_ = null;
                    }
                }
                catch (NullPointerException ex) {
                    throw b(ex);
                }
                return this.executeShellCommandBuilder_;
            }
            
            private static Exception b(final Exception ex) {
                return ex;
            }
        }
    }
    
    public interface CompositeResponseOrBuilder extends MessageOrBuilder
    {
        boolean hasCreateTarget();
        
        CreateTarget_Res getCreateTarget();
        
        CreateTarget_ResOrBuilder getCreateTargetOrBuilder();
        
        boolean hasLaunch();
        
        Launch_Res getLaunch();
        
        Launch_ResOrBuilder getLaunchOrBuilder();
        
        boolean hasContinue();
        
        Continue_Res getContinue();
        
        Continue_ResOrBuilder getContinueOrBuilder();
        
        boolean hasCompositeBroadcast();
        
        Broadcasts.CompositeBroadcast getCompositeBroadcast();
        
        Broadcasts.CompositeBroadcastOrBuilder getCompositeBroadcastOrBuilder();
        
        boolean hasSuspend();
        
        Suspend_Res getSuspend();
        
        Suspend_ResOrBuilder getSuspendOrBuilder();
        
        boolean hasGetThreads();
        
        GetThreads_Res getGetThreads();
        
        GetThreads_ResOrBuilder getGetThreadsOrBuilder();
        
        boolean hasGetFrames();
        
        GetFrames_Res getGetFrames();
        
        GetFrames_ResOrBuilder getGetFramesOrBuilder();
        
        boolean hasAddBreakpoint();
        
        AddBreakpoint_Res getAddBreakpoint();
        
        AddBreakpoint_ResOrBuilder getAddBreakpointOrBuilder();
        
        boolean hasRemoveBreakpoint();
        
        RemoveBreakpoint_Res getRemoveBreakpoint();
        
        RemoveBreakpoint_ResOrBuilder getRemoveBreakpointOrBuilder();
        
        boolean hasStepInto();
        
        StepInto_Res getStepInto();
        
        StepInto_ResOrBuilder getStepIntoOrBuilder();
        
        boolean hasStepOver();
        
        StepOver_Res getStepOver();
        
        StepOver_ResOrBuilder getStepOverOrBuilder();
        
        boolean hasStepOut();
        
        StepOut_Res getStepOut();
        
        StepOut_ResOrBuilder getStepOutOrBuilder();
        
        boolean hasEvaluateExpression();
        
        EvaluateExpression_Res getEvaluateExpression();
        
        EvaluateExpression_ResOrBuilder getEvaluateExpressionOrBuilder();
        
        boolean hasGetValueChildren();
        
        GetValueChildren_Res getGetValueChildren();
        
        GetValueChildren_ResOrBuilder getGetValueChildrenOrBuilder();
        
        boolean hasGetVars();
        
        GetVars_Res getGetVars();
        
        GetVars_ResOrBuilder getGetVarsOrBuilder();
        
        boolean hasHandleConsoleCommand();
        
        HandleConsoleCommand_Res getHandleConsoleCommand();
        
        HandleConsoleCommand_ResOrBuilder getHandleConsoleCommandOrBuilder();
        
        boolean hasHandleCompletion();
        
        HandleCompletion_Res getHandleCompletion();
        
        HandleCompletion_ResOrBuilder getHandleCompletionOrBuilder();
        
        boolean hasAttach();
        
        Attach_Res getAttach();
        
        Attach_ResOrBuilder getAttachOrBuilder();
        
        boolean hasAttachByName();
        
        AttachByName_Res getAttachByName();
        
        AttachByName_ResOrBuilder getAttachByNameOrBuilder();
        
        boolean hasDispatchInput();
        
        DispatchInput_Res getDispatchInput();
        
        DispatchInput_ResOrBuilder getDispatchInputOrBuilder();
        
        boolean hasAddWatchpoint();
        
        AddWatchpoint_Res getAddWatchpoint();
        
        AddWatchpoint_ResOrBuilder getAddWatchpointOrBuilder();
        
        boolean hasRemoveWatchpoint();
        
        RemoveWatchpoint_Res getRemoveWatchpoint();
        
        RemoveWatchpoint_ResOrBuilder getRemoveWatchpointOrBuilder();
        
        boolean hasDetach();
        
        Detach_Res getDetach();
        
        Detach_ResOrBuilder getDetachOrBuilder();
        
        boolean hasKill();
        
        Kill_Res getKill();
        
        Kill_ResOrBuilder getKillOrBuilder();
        
        boolean hasGetChildrenCount();
        
        GetChildrenCount_Res getGetChildrenCount();
        
        GetChildrenCount_ResOrBuilder getGetChildrenCountOrBuilder();
        
        boolean hasGetArraySlice();
        
        GetArraySlice_Res getGetArraySlice();
        
        GetArraySlice_ResOrBuilder getGetArraySliceOrBuilder();
        
        boolean hasGetValueData();
        
        GetValueData_Res getGetValueData();
        
        GetValueData_ResOrBuilder getGetValueDataOrBuilder();
        
        boolean hasGetValueDescription();
        
        GetValueDescription_Res getGetValueDescription();
        
        GetValueDescription_ResOrBuilder getGetValueDescriptionOrBuilder();
        
        boolean hasValuesFilteringPolicy();
        
        ValuesFilteringPolicy_Res getValuesFilteringPolicy();
        
        ValuesFilteringPolicy_ResOrBuilder getValuesFilteringPolicyOrBuilder();
        
        boolean hasConnectPlatform();
        
        ConnectPlatform_Res getConnectPlatform();
        
        ConnectPlatform_ResOrBuilder getConnectPlatformOrBuilder();
        
        boolean hasGetValueAddress();
        
        GetValueAddress_Res getGetValueAddress();
        
        GetValueAddress_ResOrBuilder getGetValueAddressOrBuilder();
        
        boolean hasHandleSignal();
        
        HandleSignal_Res getHandleSignal();
        
        HandleSignal_ResOrBuilder getHandleSignalOrBuilder();
        
        boolean hasExecuteShellCommand();
        
        ExecuteShellCommand_Res getExecuteShellCommand();
        
        ExecuteShellCommand_ResOrBuilder getExecuteShellCommandOrBuilder();
    }
    
    public interface CompositeRequestOrBuilder extends MessageOrBuilder
    {
        boolean hasCreateTarget();
        
        CreateTarget_Req getCreateTarget();
        
        CreateTarget_ReqOrBuilder getCreateTargetOrBuilder();
        
        boolean hasLaunch();
        
        Launch_Req getLaunch();
        
        Launch_ReqOrBuilder getLaunchOrBuilder();
        
        boolean hasExit();
        
        Exit_Req getExit();
        
        Exit_ReqOrBuilder getExitOrBuilder();
        
        boolean hasContinue();
        
        Continue_Req getContinue();
        
        Continue_ReqOrBuilder getContinueOrBuilder();
        
        boolean hasSuspend();
        
        Suspend_Req getSuspend();
        
        Suspend_ReqOrBuilder getSuspendOrBuilder();
        
        boolean hasGetThreads();
        
        GetThreads_Req getGetThreads();
        
        GetThreads_ReqOrBuilder getGetThreadsOrBuilder();
        
        boolean hasGetFrames();
        
        GetFrames_Req getGetFrames();
        
        GetFrames_ReqOrBuilder getGetFramesOrBuilder();
        
        boolean hasAddBreakpoint();
        
        AddBreakpoint_Req getAddBreakpoint();
        
        AddBreakpoint_ReqOrBuilder getAddBreakpointOrBuilder();
        
        boolean hasRemoveBreakpoint();
        
        RemoveBreakpoint_Req getRemoveBreakpoint();
        
        RemoveBreakpoint_ReqOrBuilder getRemoveBreakpointOrBuilder();
        
        boolean hasStepInto();
        
        StepInto_Req getStepInto();
        
        StepInto_ReqOrBuilder getStepIntoOrBuilder();
        
        boolean hasStepOver();
        
        StepOver_Req getStepOver();
        
        StepOver_ReqOrBuilder getStepOverOrBuilder();
        
        boolean hasStepOut();
        
        StepOut_Req getStepOut();
        
        StepOut_ReqOrBuilder getStepOutOrBuilder();
        
        boolean hasEvaluateExpression();
        
        EvaluateExpression_Req getEvaluateExpression();
        
        EvaluateExpression_ReqOrBuilder getEvaluateExpressionOrBuilder();
        
        boolean hasGetValueChildren();
        
        GetValueChildren_Req getGetValueChildren();
        
        GetValueChildren_ReqOrBuilder getGetValueChildrenOrBuilder();
        
        boolean hasGetVars();
        
        GetVars_Req getGetVars();
        
        GetVars_ReqOrBuilder getGetVarsOrBuilder();
        
        boolean hasHandleConsoleCommand();
        
        HandleConsoleCommand_Req getHandleConsoleCommand();
        
        HandleConsoleCommand_ReqOrBuilder getHandleConsoleCommandOrBuilder();
        
        boolean hasHandleCompletion();
        
        HandleCompletion_Req getHandleCompletion();
        
        HandleCompletion_ReqOrBuilder getHandleCompletionOrBuilder();
        
        boolean hasAttach();
        
        Attach_Req getAttach();
        
        Attach_ReqOrBuilder getAttachOrBuilder();
        
        boolean hasAttachByName();
        
        AttachByName_Req getAttachByName();
        
        AttachByName_ReqOrBuilder getAttachByNameOrBuilder();
        
        boolean hasDispatchInput();
        
        DispatchInput_Req getDispatchInput();
        
        DispatchInput_ReqOrBuilder getDispatchInputOrBuilder();
        
        boolean hasAddWatchpoint();
        
        AddWatchpoint_Req getAddWatchpoint();
        
        AddWatchpoint_ReqOrBuilder getAddWatchpointOrBuilder();
        
        boolean hasRemoveWatchpoint();
        
        RemoveWatchpoint_Req getRemoveWatchpoint();
        
        RemoveWatchpoint_ReqOrBuilder getRemoveWatchpointOrBuilder();
        
        boolean hasDetach();
        
        Detach_Req getDetach();
        
        Detach_ReqOrBuilder getDetachOrBuilder();
        
        boolean hasKill();
        
        Kill_Req getKill();
        
        Kill_ReqOrBuilder getKillOrBuilder();
        
        boolean hasGetChildrenCount();
        
        GetChildrenCount_Req getGetChildrenCount();
        
        GetChildrenCount_ReqOrBuilder getGetChildrenCountOrBuilder();
        
        boolean hasGetArraySlice();
        
        GetArraySlice_Req getGetArraySlice();
        
        GetArraySlice_ReqOrBuilder getGetArraySliceOrBuilder();
        
        boolean hasGetValueData();
        
        GetValueData_Req getGetValueData();
        
        GetValueData_ReqOrBuilder getGetValueDataOrBuilder();
        
        boolean hasGetValueDescription();
        
        GetValueDescription_Req getGetValueDescription();
        
        GetValueDescription_ReqOrBuilder getGetValueDescriptionOrBuilder();
        
        boolean hasValuesFilteringPolicy();
        
        ValuesFilteringPolicy_Req getValuesFilteringPolicy();
        
        ValuesFilteringPolicy_ReqOrBuilder getValuesFilteringPolicyOrBuilder();
        
        boolean hasConnectPlatform();
        
        ConnectPlatform_Req getConnectPlatform();
        
        ConnectPlatform_ReqOrBuilder getConnectPlatformOrBuilder();
        
        boolean hasGetValueAddress();
        
        GetValueAddress_Req getGetValueAddress();
        
        GetValueAddress_ReqOrBuilder getGetValueAddressOrBuilder();
        
        boolean hasHandleSignal();
        
        HandleSignal_Req getHandleSignal();
        
        HandleSignal_ReqOrBuilder getHandleSignalOrBuilder();
        
        boolean hasExecuteShellCommand();
        
        ExecuteShellCommand_Req getExecuteShellCommand();
        
        ExecuteShellCommand_ReqOrBuilder getExecuteShellCommandOrBuilder();
    }
    
    public interface ExecuteShellCommand_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasOutput();
        
        String getOutput();
        
        ByteString getOutputBytes();
        
        boolean hasStatus();
        
        int getStatus();
        
        boolean hasSignal();
        
        int getSignal();
    }
    
    public interface ExecuteShellCommand_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasCommand();
        
        String getCommand();
        
        ByteString getCommandBytes();
        
        boolean hasWorkingDir();
        
        String getWorkingDir();
        
        ByteString getWorkingDirBytes();
        
        boolean hasTimeoutSecs();
        
        int getTimeoutSecs();
    }
    
    public interface HandleSignal_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface HandleSignal_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasSignal();
        
        String getSignal();
        
        ByteString getSignalBytes();
        
        boolean hasStop();
        
        boolean getStop();
        
        boolean hasPass();
        
        boolean getPass();
        
        boolean hasNotify();
        
        boolean getNotify();
    }
    
    public interface GetValueAddress_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasAddress();
        
        long getAddress();
    }
    
    public interface GetValueAddress_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
    }
    
    public interface Exit_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface ConnectPlatform_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface ConnectPlatform_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasPlatform();
        
        String getPlatform();
        
        ByteString getPlatformBytes();
        
        boolean hasUrl();
        
        String getUrl();
        
        ByteString getUrlBytes();
    }
    
    public interface ValuesFilteringPolicy_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface ValuesFilteringPolicy_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasFilterEnabled();
        
        int getFilterEnabled();
    }
    
    public interface HandleCompletion_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<String> getCompletionList();
        
        int getCompletionCount();
        
        String getCompletion(final int p0);
        
        ByteString getCompletionBytes(final int p0);
    }
    
    public interface HandleCompletion_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasCommand();
        
        String getCommand();
        
        ByteString getCommandBytes();
        
        boolean hasPos();
        
        int getPos();
    }
    
    public interface HandleConsoleCommand_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasSuccess();
        
        int getSuccess();
        
        boolean hasErr();
        
        String getErr();
        
        ByteString getErrBytes();
        
        boolean hasOut();
        
        String getOut();
        
        ByteString getOutBytes();
    }
    
    public interface HandleConsoleCommand_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
        
        boolean hasFrameIndex();
        
        int getFrameIndex();
        
        boolean hasCommand();
        
        String getCommand();
        
        ByteString getCommandBytes();
    }
    
    public interface DispatchInput_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface DispatchInput_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasInput();
        
        String getInput();
        
        ByteString getInputBytes();
        
        boolean hasTarget();
        
        Model.DispatchTarget getTarget();
    }
    
    public interface GetVars_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<Model.LLDBValue> getValueList();
        
        Model.LLDBValue getValue(final int p0);
        
        int getValueCount();
        
        List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList();
        
        Model.LLDBValueOrBuilder getValueOrBuilder(final int p0);
    }
    
    public interface GetVars_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
        
        boolean hasFrameIndex();
        
        int getFrameIndex();
        
        boolean hasStatics();
        
        boolean getStatics();
        
        boolean hasGlobals();
        
        boolean getGlobals();
    }
    
    public interface GetValueChildren_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<Model.LLDBValue> getValueList();
        
        Model.LLDBValue getValue(final int p0);
        
        int getValueCount();
        
        List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList();
        
        Model.LLDBValueOrBuilder getValueOrBuilder(final int p0);
    }
    
    public interface GetChildrenCount_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasCount();
        
        int getCount();
    }
    
    public interface GetChildrenCount_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
        
        boolean hasExpression();
        
        String getExpression();
        
        ByteString getExpressionBytes();
    }
    
    public interface GetValueDescription_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasDescription();
        
        String getDescription();
        
        ByteString getDescriptionBytes();
    }
    
    public interface GetValueDescription_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
        
        boolean hasMaxLength();
        
        int getMaxLength();
    }
    
    public interface GetValueData_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasValue();
        
        Model.LLDBValueData getValue();
        
        Model.LLDBValueDataOrBuilder getValueOrBuilder();
    }
    
    public interface GetValueData_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
        
        boolean hasMaxDescriptionLength();
        
        int getMaxDescriptionLength();
    }
    
    public interface GetArraySlice_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<Model.LLDBValue> getValueList();
        
        Model.LLDBValue getValue(final int p0);
        
        int getValueCount();
        
        List<? extends Model.LLDBValueOrBuilder> getValueOrBuilderList();
        
        Model.LLDBValueOrBuilder getValueOrBuilder(final int p0);
    }
    
    public interface GetArraySlice_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasValueId();
        
        int getValueId();
        
        boolean hasOffset();
        
        int getOffset();
        
        boolean hasCount();
        
        int getCount();
    }
    
    public interface GetValueChildren_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
        
        boolean hasExpression();
        
        String getExpression();
        
        ByteString getExpressionBytes();
        
        boolean hasOffset();
        
        int getOffset();
        
        boolean hasCount();
        
        int getCount();
    }
    
    public interface AddWatchpoint_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasWatchpointId();
        
        int getWatchpointId();
    }
    
    public interface RemoveWatchpoint_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface RemoveWatchpoint_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
    }
    
    public interface AddWatchpoint_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasValueId();
        
        int getValueId();
        
        boolean hasToResolveLocation();
        
        int getToResolveLocation();
        
        boolean hasRead();
        
        int getRead();
        
        boolean hasWrite();
        
        int getWrite();
        
        boolean hasCondition();
        
        String getCondition();
        
        ByteString getConditionBytes();
    }
    
    public interface EvaluateExpression_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasResult();
        
        Model.LLDBValue getResult();
        
        Model.LLDBValueOrBuilder getResultOrBuilder();
    }
    
    public interface EvaluateExpression_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasExpression();
        
        String getExpression();
        
        ByteString getExpressionBytes();
        
        boolean hasThreadId();
        
        int getThreadId();
        
        boolean hasFrameIndex();
        
        int getFrameIndex();
        
        boolean hasLanguage();
        
        Model.Language getLanguage();
    }
    
    public interface StepOut_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface StepOut_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
    }
    
    public interface StepOver_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface StepOver_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
    }
    
    public interface StepInto_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface StepInto_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
    }
    
    public interface AddBreakpoint_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasId();
        
        int getId();
    }
    
    public interface RemoveBreakpoint_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface RemoveBreakpoint_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
    }
    
    public interface AddBreakpoint_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasFile();
        
        String getFile();
        
        ByteString getFileBytes();
        
        boolean hasLine();
        
        int getLine();
        
        boolean hasCondition();
        
        String getCondition();
        
        ByteString getConditionBytes();
        
        boolean hasSymbolPattern();
        
        String getSymbolPattern();
        
        ByteString getSymbolPatternBytes();
        
        boolean hasModuleName();
        
        String getModuleName();
        
        ByteString getModuleNameBytes();
        
        boolean hasThreadId();
        
        int getThreadId();
        
        boolean hasRegexp();
        
        boolean getRegexp();
    }
    
    public interface GetFrames_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<Model.LLDBFrame> getFrameList();
        
        Model.LLDBFrame getFrame(final int p0);
        
        int getFrameCount();
        
        List<? extends Model.LLDBFrameOrBuilder> getFrameOrBuilderList();
        
        Model.LLDBFrameOrBuilder getFrameOrBuilder(final int p0);
        
        boolean hasHasMore();
        
        boolean getHasMore();
    }
    
    public interface GetFrames_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasThreadId();
        
        int getThreadId();
        
        boolean hasFromIndex();
        
        int getFromIndex();
        
        boolean hasCount();
        
        int getCount();
        
        boolean hasUntilValidLineEntry();
        
        boolean getUntilValidLineEntry();
    }
    
    public interface GetThreads_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        List<Model.LLDBThread> getThreadList();
        
        Model.LLDBThread getThread(final int p0);
        
        int getThreadCount();
        
        List<? extends Model.LLDBThreadOrBuilder> getThreadOrBuilderList();
        
        Model.LLDBThreadOrBuilder getThreadOrBuilder(final int p0);
    }
    
    public interface GetThreads_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface Suspend_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface Suspend_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface Continue_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface Continue_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface Attach_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface Kill_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface Kill_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface Detach_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface Detach_ReqOrBuilder extends MessageOrBuilder
    {
    }
    
    public interface Attach_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasPid();
        
        int getPid();
    }
    
    public interface AttachByName_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface AttachByName_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasName();
        
        String getName();
        
        ByteString getNameBytes();
        
        boolean hasToWait();
        
        boolean getToWait();
    }
    
    public interface Launch_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
        
        boolean hasPid();
        
        long getPid();
    }
    
    public interface Launch_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasCommandLine();
        
        Model.CommandLine getCommandLine();
        
        Model.CommandLineOrBuilder getCommandLineOrBuilder();
        
        boolean hasFdPassingServiceUnixSocket();
        
        String getFdPassingServiceUnixSocket();
        
        ByteString getFdPassingServiceUnixSocketBytes();
    }
    
    public interface CreateTarget_ResOrBuilder extends MessageOrBuilder
    {
        boolean hasCommonResponse();
        
        CommonResponse getCommonResponse();
        
        CommonResponseOrBuilder getCommonResponseOrBuilder();
    }
    
    public interface CreateTarget_ReqOrBuilder extends MessageOrBuilder
    {
        boolean hasExePath();
        
        String getExePath();
        
        ByteString getExePathBytes();
        
        boolean hasArch();
        
        String getArch();
        
        ByteString getArchBytes();
        
        boolean hasRemoteExePath();
        
        String getRemoteExePath();
        
        ByteString getRemoteExePathBytes();
        
        boolean hasPlatform();
        
        String getPlatform();
        
        ByteString getPlatformBytes();
        
        boolean hasPlatformSdkRoot();
        
        String getPlatformSdkRoot();
        
        ByteString getPlatformSdkRootBytes();
    }
    
    public interface CommonResponseOrBuilder extends MessageOrBuilder
    {
        boolean hasIsValid();
        
        boolean getIsValid();
        
        boolean hasErrorMessage();
        
        String getErrorMessage();
        
        ByteString getErrorMessageBytes();
    }
}
